{"version":3,"sources":["webpack:///webpack/bootstrap 02bb99fc647e8d11bbb0","webpack:///./node_modules/@dojo/framework/core/Destroyable.mjs","webpack:///./node_modules/@dojo/framework/core/Evented.mjs","webpack:///./node_modules/@dojo/framework/core/util.mjs","webpack:///./node_modules/@dojo/framework/has/has.mjs","webpack:///./node_modules/@dojo/framework/shim/Map.mjs","webpack:///./node_modules/@dojo/framework/shim/Promise.mjs","webpack:///./node_modules/@dojo/framework/shim/Set.mjs","webpack:///./node_modules/@dojo/framework/shim/Symbol.mjs","webpack:///./node_modules/@dojo/framework/shim/WeakMap.mjs","webpack:///./node_modules/@dojo/framework/shim/array.mjs","webpack:///./node_modules/@dojo/framework/shim/global.mjs","webpack:///./node_modules/@dojo/framework/shim/iterator.mjs","webpack:///./node_modules/@dojo/framework/shim/number.mjs","webpack:///./node_modules/@dojo/framework/shim/object.mjs","webpack:///./node_modules/@dojo/framework/shim/string.mjs","webpack:///./node_modules/@dojo/framework/shim/support/has.mjs","webpack:///./node_modules/@dojo/framework/shim/support/queue.mjs","webpack:///./node_modules/@dojo/framework/shim/support/util.mjs","webpack:///./node_modules/@dojo/framework/widget-core/Injector.mjs","webpack:///./node_modules/@dojo/framework/widget-core/NodeHandler.mjs","webpack:///./node_modules/@dojo/framework/widget-core/Registry.mjs","webpack:///./node_modules/@dojo/framework/widget-core/RegistryHandler.mjs","webpack:///./node_modules/@dojo/framework/widget-core/WidgetBase.mjs","webpack:///./node_modules/@dojo/framework/widget-core/animations/cssTransitions.mjs","webpack:///./node_modules/@dojo/framework/widget-core/d.mjs","webpack:///./node_modules/@dojo/framework/widget-core/decorators/alwaysRender.mjs","webpack:///./node_modules/@dojo/framework/widget-core/decorators/beforeProperties.mjs","webpack:///./node_modules/@dojo/framework/widget-core/decorators/customElement.mjs","webpack:///./node_modules/@dojo/framework/widget-core/decorators/diffProperty.mjs","webpack:///./node_modules/@dojo/framework/widget-core/decorators/handleDecorator.mjs","webpack:///./node_modules/@dojo/framework/widget-core/decorators/inject.mjs","webpack:///./node_modules/@dojo/framework/widget-core/diff.mjs","webpack:///./node_modules/@dojo/framework/widget-core/meta/Base.mjs","webpack:///./node_modules/@dojo/framework/widget-core/meta/Dimensions.mjs","webpack:///./node_modules/@dojo/framework/widget-core/mixins/Focus.mjs","webpack:///./node_modules/@dojo/framework/widget-core/mixins/Themed.mjs","webpack:///./node_modules/@dojo/framework/widget-core/registerCustomElement.mjs","webpack:///./node_modules/@dojo/framework/widget-core/vdom.mjs","webpack:///./node_modules/@dojo/cli-build-widget/template/custom-element.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/common/styles/base.m.css?b0b4","webpack:///./src/common/util.ts","webpack:///./src/global-event/index.ts","webpack:///./src/icon/index.ts","webpack:///./src/theme/icon.m.css?2aa0","webpack:///./src/theme/title-pane.m.css?a3c0","webpack:///./src/title-pane/index.ts","webpack:///./src/title-pane/styles/title-pane.m.css?5093"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_IMPORTED_MODULE_0__shim_Promise__","noop","resolve","destroyed","Error","Destroyable","[object Object]","this","handles","handle","_handles","push","splice","indexOf","destroy","forEach","own","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0__shim_Map__","__WEBPACK_IMPORTED_MODULE_1__Destroyable__","regexMap","Evented","super","arguments","listenersMap","event","methods","type","globString","targetString","regex","has","RegExp","replace","set","test","isGlobMatch","method","listener","Array","isArray","map","_addListener","listeners","target","sources","_mixin","deep","inherited","r","Math","random","v","toString","slice","shouldDeepCopyObject","value","copyArray","array","item","kwArgs","copied","copiedClone","length","source","undefined","key","targetValue","global","process","add","testCache","testFunctions","testThenables","globalScope","window","self","staticFeatures","DojoHasEnvironment","staticCache","apply","feature","overwrite","normalizedFeature","toLowerCase","Boolean","exists","TypeError","then","isFeatureTestThenable","resolvedValue","result","document","location","versions","node","Map","__WEBPACK_IMPORTED_MODULE_1__global__","__WEBPACK_IMPORTED_MODULE_0__global__","ShimPromise","Promise","Set","__WEBPACK_IMPORTED_MODULE_2__support_util__","Symbol","wellKnown","for","WeakMap","from","__WEBPACK_IMPORTED_MODULE_4__support_util__","of","copyWithin","fill","find","findIndex","includes","globalObject","pow","assign","getOwnPropertyDescriptor","getOwnPropertyNames","getOwnPropertySymbols","is","keys","getOwnPropertyDescriptors","entries","values","fromCodePoint","raw","codePointAt","endsWith","normalize","repeat","startsWith","padEnd","padStart","String","__WEBPACK_IMPORTED_MODULE_0__has_has__","every","Number","POSITIVE_INFINITY","e","imul","Observable","getCallSite","callSite","substitutions","key1","key2","freeze","postMessage","requestAnimationFrame","setImmediate","MutationObserver","WebKitMutationObserver","example","createElement","observer","observe","attributes","style","setProperty","takeRecords","Animation","KeyframeEffect","AbortController","AbortSignal","executeTask","isActive","callback","getQueueHandle","destructor","enqueue","queue","addEventListener","data","stopPropagation","shift","queueTask","id","queueAnimationTask","rafId","bind","cancelAnimationFrame","writable","nativeFunction","args","__WEBPACK_IMPORTED_MODULE_0__core_Evented__","Injector","payload","_payload","invalidator","_invalidator","NodeEventType","__WEBPACK_IMPORTED_MODULE_1__shim_Map__","_nodeMap","element","emit","Widget","Projector","clear","isWidgetBaseConstructor","__WEBPACK_IMPORTED_MODULE_2__core_Evented__","WIDGET_BASE_TYPE","_type","Registry","widgetLabel","action","label","_widgetRegistry","widgetCtor","emitLoadedEvent","error","injectorFactory","_injectorRegistry","injectorItem","injector","promise","default","isWidgetConstructorDefaultExport","hasInjector","__WEBPACK_IMPORTED_MODULE_1__core_Evented__","__WEBPACK_IMPORTED_MODULE_2__Registry__","_registry","_registryWidgetLabelMap","_registryInjectorLabelMap","baseRegistry","delete","base","widget","define","defineInjector","globalPrecedence","_get","getFunctionName","labelMap","registries","registry","registeredLabels","on","__WEBPACK_IMPORTED_MODULE_1__shim_WeakMap__","__WEBPACK_IMPORTED_MODULE_2__d__","__WEBPACK_IMPORTED_MODULE_3__diff__","__WEBPACK_IMPORTED_MODULE_4__RegistryHandler__","__WEBPACK_IMPORTED_MODULE_5__NodeHandler__","__WEBPACK_IMPORTED_MODULE_6__Registry__","lazyWidgetId","lazyWidgetIdMap","decoratorMap","widgetInstanceMap","boundAuto","noBind","WidgetBase","_initialProperties","_changedPropertyKeys","_nodeHandler","_children","_decoratorCache","_properties","_boundRenderFunc","render","_boundInvalidate","invalidate","dirty","onAttach","onDetach","nodeHandler","rendering","inputProperties","_runAfterConstructors","MetaType","_metaMap","cached","properties","changedPropertyKeys","originalProperties","instanceData","_runBeforeProperties","registeredDiffPropertyNames","getDecorator","propertyNames","allProperties","checkedProperties","diffPropertyResults","runReactions","propertyName","previousProperty","newProperty","_bindFunctionProperty","diffFunctions","changed","executedReactions","reaction","propertyChanged","reactionRun","children","nodes","filteredNodes","convertedNodes","deferredPropertiesCallback","widgetConstructor","registryItem","_filterAndConvert","tag","text","_runBeforeRenders","dNode","_runAfterRenders","decoratorKey","decoratorList","constructor","specificDecoratorList","decorators","allDecorators","instanceMap","unshift","getPrototypeOf","_buildDecoratorList","_bindFunctionPropertyMap","bindInfo","boundFunc","scope","beforeProperties","reduce","beforePropertiesFunction","beforeRenders","beforeRenderFunction","updatedRender","console","warn","afterRenders","afterRenderFunction","meta","afterRender","afterConstructors","afterConstructor","pop","browserSpecificTransitionEndEventName","browserSpecificAnimationEndEventName","initialize","determineBrowserStyleNames","runAndCleanUp","startAnimation","finishAnimation","finished","transitionEnd","removeEventListener","enter","enterAnimation","activeClass","enterAnimationActive","classList","remove","exit","exitAnimation","removeNode","exitAnimationActive","isWNode","isVNode","child","DOMVNODE","widgetConstructorOrNode","WNODE","propertiesOrChildren","classes","styles","newProperties","__WEBPACK_IMPORTED_MODULE_0_tslib__","_a","nodeClasses","nodeStyles","nodeProperties","VNODE","attrs","props","diffType","isElementNode","tagName","events","domNode","alwaysRender","__WEBPACK_IMPORTED_MODULE_0__handleDecorator__","__WEBPACK_IMPORTED_MODULE_1__beforeProperties__","propertyKey","addDecorator","customElement","__WEBPACK_IMPORTED_MODULE_0__registerCustomElement__","__WEBPACK_IMPORTED_MODULE_1__Registry__","childType","DOJO","registryFactory","__customElementDescriptor","diffProperty","__WEBPACK_IMPORTED_MODULE_1__diff__","diffFunction","reactionFunction","handleDecorator","handler","descriptor","inject","__WEBPACK_IMPORTED_MODULE_0__shim_WeakMap__","__WEBPACK_IMPORTED_MODULE_1__handleDecorator__","__WEBPACK_IMPORTED_MODULE_2__beforeProperties__","registeredInjectorsMap","getProperties","getInjector","registeredInjectors","shallow","__WEBPACK_IMPORTED_MODULE_0__Registry__","reference","ignore","isObjectOrArray","validOldProperty","validNewProperty","previousKeys","newKeys","some","__WEBPACK_IMPORTED_MODULE_0__core_Destroyable__","__WEBPACK_IMPORTED_MODULE_1__shim_Set__","Base","_requestedNodeKeys","_invalidate","_bind","stringKey","__WEBPACK_IMPORTED_MODULE_0__Base__","__WEBPACK_IMPORTED_MODULE_1__core_util__","defaultDimensions","client","height","left","top","width","offset","position","bottom","right","scroll","size","Dimensions","getNode","boundingDimensions","getBoundingClientRect","clientHeight","clientLeft","clientTop","clientWidth","offsetHeight","offsetLeft","offsetTop","offsetWidth","scrollHeight","scrollLeft","scrollTop","scrollWidth","FocusMixin","__WEBPACK_IMPORTED_MODULE_1__decorators_diffProperty__","diffFocus","Focus","_currentToken","_previousToken","shouldFocus","theme","__WEBPACK_IMPORTED_MODULE_3__decorators_handleDecorator__","themeRegistry","themeInjector","__WEBPACK_IMPORTED_MODULE_1__Injector__","INJECTED_THEME_KEY","setInvalidator","ThemedMixin","__WEBPACK_IMPORTED_MODULE_2__decorators_inject__","__WEBPACK_IMPORTED_MODULE_4__decorators_diffProperty__","__WEBPACK_IMPORTED_MODULE_5__diff__","THEME_KEY","Themed","_registeredBaseThemeKeys","_recalculateClasses","_theme","_recalculateThemeClasses","className","_getThemeClass","extraClasses","themeClassName","_baseThemeClassesReverseLookup","resultClassNames","_registeredBaseTheme","join","baseThemes","finalBaseTheme","baseTheme","currentClassNames","baseClass","themeKey","CustomElementChildType","DomToWidgetWrapper","create","register","__WEBPACK_IMPORTED_MODULE_1__WidgetBase__","__WEBPACK_IMPORTED_MODULE_2__vdom__","__WEBPACK_IMPORTED_MODULE_3__shim_array__","__WEBPACK_IMPORTED_MODULE_4__d__","__WEBPACK_IMPORTED_MODULE_5__shim_global__","__WEBPACK_IMPORTED_MODULE_6__mixins_Themed__","__WEBPACK_IMPORTED_MODULE_7__decorators_alwaysRender__","WidgetConstructor","attributeMap","attributeName","HTMLElement","_eventProperties","_initialised","domProperties","_attributesToProperties","filteredPropertyName","_getProperty","_setProperty","eventName","_getEventProperty","_setEventProperty","eventCallback","dispatchEvent","CustomEvent","bubbles","detail","defineProperties","TEXT","childNodes","childNode","_render","_childConnected","widgetProperties","renderChildren","__children__","themeContext","_getTheme","_renderer","mount","merge","dojoce","themes","parentNode","filter","Child","isWidget","__properties__","oldValue","getAttribute","observedAttributes","customElements","renderer","__WEBPACK_IMPORTED_MODULE_0__shim_global__","__WEBPACK_IMPORTED_MODULE_1__has_has__","__WEBPACK_IMPORTED_MODULE_2__shim_WeakMap__","__WEBPACK_IMPORTED_MODULE_3__animations_cssTransitions__","__WEBPACK_IMPORTED_MODULE_5__Registry__","__WEBPACK_IMPORTED_MODULE_6__WidgetBase__","EMPTY_ARRAY","nodeOperations","NAMESPACE_SVG","NAMESPACE_W3","NAMESPACE_XLINK","isWNodeWrapper","isVNodeWrapper","buildPreviousProperties","current","next","propName","attrName","same","dnode1","dnode2","instance","findIndexOfChild","sameAs","start","createClassPropValue","trim","updateAttribute","attrValue","namespace","setAttributeNS","removeAttribute","setAttribute","runEnterAnimation","transitions","runExitAnimation","removeDomNode","removeChild","arrayFrom","arr","_renderScheduled","parentInvalidate","_mountOptions","sync","transition","body","_invalidationQueue","_processQueue","_applicationQueue","_eventMap","_instanceToWrapperMap","_parentWrapperMap","_wrapperSiblingMap","_afterRenderCallbacks","_deferredRenderCallbacks","nodeOperation","propValue","previousValue","updateEvent","currentValue","previousEvent","evt","removeOrphanedEvents","previousProperties","onlyEvents","isEvent","substr","renderedToWrapper","rendered","parent","currentParent","wrappedRendered","hasParentWNode","currentParentLength","childrenWrappers","requiresInsertBefore","hasPreviousSiblings","previousItem","renderedItem","wrapper","depth","hasAnimations","nextParent","findParentWNodeWrapper","currentNode","parentWNodeWrapper","parentWrapper","findParentDomNode","parentDomNode","runDeferredProperties","processProperties","findInsertBefore","insertBefore","searchNode","nextSibling","setProperties","currentProperties","nextWrapper","includesEventsAndAttributes","propNames","propCount","previousClassString","currentClassString","merged","domClasses","split","styleNames","styleCount","j","styleName","newStyleValue","domValue","lastIndexOf","previousAttributes","attrNames","attrCount","updateAttributes","_runInvalidationQueue","invalidationQueue","previouslyRendered","sort","a","b","sibling","_updateWidget","_runProcessQueue","_runDomInstructionQueue","_runCallbacks","_process","reverse","inserted","addRoot","attached","callbacks","run","requestIdleCallback","setTimeout","runAfterRenderCallbacks","runDeferredRenderCallbacks","registerDistinguishableCallback","index","wrappers","wrapperToCheck","parentName","nodeIdentifier","checkDistinguishable","mergeNodes","oldIndex","newIndex","currentLength","nextLength","instructions","currentWrapper","domElement","toUpperCase","_processMergeNodes","dom","_processOne","createElementNS","createTextNode","_createDom","_schedule","__setProperties__","__setChildren__","__render__","_createWidget","updatedTextNode","ownerDocument","replaceChild","_updateDom","_removeDom","_removeWidget","mountOptions","renderResult","widgetFactory","registerCustomElement","defaultExport","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","marker","runClearTimeout","Item","nextTick","title","browser","env","argv","version","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","t","desc","Reflect","decorate","metadataKey","metadataValue","metadata","setPrototypeOf","g","Function","eval"," _key","visuallyHidden","focusable","hidden","Keys","aria","GlobalEvent","__WEBPACK_IMPORTED_MODULE_2__dojo_framework_widget_core_WidgetBase__","_listeners","previousListeners","newListeners","registeredListeners","newListener","__WEBPACK_IMPORTED_MODULE_1__dojo_framework_shim_global__","_registerListeners","_removeAllRegisteredListeners","__WEBPACK_IMPORTED_MODULE_3__dojo_framework_widget_core_decorators_diffProperty__","__WEBPACK_IMPORTED_MODULE_4__dojo_framework_widget_core_diff__","ThemedBase","__WEBPACK_IMPORTED_MODULE_2__dojo_framework_widget_core_mixins_Themed__","__WEBPACK_IMPORTED_MODULE_1__dojo_framework_widget_core_WidgetBase__","IconBase","altText","__WEBPACK_IMPORTED_MODULE_3__dojo_framework_widget_core_d__","__WEBPACK_IMPORTED_MODULE_6__common_styles_base_m_css__","__WEBPACK_IMPORTED_MODULE_5__theme_icon_m_css__","__WEBPACK_IMPORTED_MODULE_4__common_util__","renderAltText","__WEBPACK_IMPORTED_MODULE_7__dojo_framework_widget_core_decorators_customElement__","root","icon","downIcon","leftIcon","rightIcon","closeIcon","plusIcon","minusIcon","checkIcon","upIcon","upAltIcon","downAltIcon","searchIcon","barsIcon","settingsIcon","alertIcon","helpIcon","infoIcon","phoneIcon","editIcon","dateIcon","linkIcon","locationIcon","secureIcon","mailIcon","closeable","arrow","open","content","titleButton","contentTransition","__WEBPACK_IMPORTED_MODULE_3__dojo_framework_widget_core_mixins_Focus__","__WEBPACK_IMPORTED_MODULE_5__dojo_framework_widget_core_WidgetBase__","TitlePaneBase","_id","__WEBPACK_IMPORTED_MODULE_1__dojo_framework_core_util__","_onWindowResize","_toggle","onRequestClose","onRequestOpen","__WEBPACK_IMPORTED_MODULE_7__styles_title_pane_m_css__","__WEBPACK_IMPORTED_MODULE_8__theme_title_pane_m_css__","__WEBPACK_IMPORTED_MODULE_4__dojo_framework_widget_core_d__","__WEBPACK_IMPORTED_MODULE_6__icon_index__","contentDimensions","__WEBPACK_IMPORTED_MODULE_9__dojo_framework_widget_core_meta_Dimensions__","marginTop","headingLevel","_open","__WEBPACK_IMPORTED_MODULE_11__global_event_index__","resize","aria-level","getModifierClasses","getFixedModifierClasses","role","aria-controls","aria-expanded","disabled","focus","onclick","_onTitleClick","renderExpandIcon","getButtonContent","aria-hidden","aria-labelledby","getPaneStyles","getPaneContent","__WEBPACK_IMPORTED_MODULE_10__dojo_framework_widget_core_decorators_customElement__","rootFixed","titleFixed","titleButtonFixed","contentFixed","closeableFixed"],"mappings":"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","file":"title-pane-4.0.0.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 02bb99fc647e8d11bbb0","import Promise from '../shim/Promise';\n/**\n * No op function used to replace a Destroyable instance's `destroy` method, once the instance has been destroyed\n */\nfunction noop() {\n    return Promise.resolve(false);\n}\n/**\n * No op function used to replace a Destroyable instance's `own` method, once the instance has been destroyed\n */\nfunction destroyed() {\n    throw new Error('Call made to destroyed method');\n}\nexport class Destroyable {\n    /**\n     * @constructor\n     */\n    constructor() {\n        this.handles = [];\n    }\n    /**\n     * Register handles for the instance that will be destroyed when `this.destroy` is called\n     *\n     * @param {Handle} handle The handle to add for the instance\n     * @returns {Handle} A wrapper Handle. When the wrapper Handle's `destroy` method is invoked, the original handle is\n     *                   removed from the instance, and its `destroy` method is invoked.\n     */\n    own(handle) {\n        const { handles: _handles } = this;\n        _handles.push(handle);\n        return {\n            destroy() {\n                _handles.splice(_handles.indexOf(handle));\n                handle.destroy();\n            }\n        };\n    }\n    /**\n     * Destroys all handlers registered for the instance\n     *\n     * @returns {Promise<any} A Promise that resolves once all handles have been destroyed\n     */\n    destroy() {\n        return new Promise((resolve) => {\n            this.handles.forEach((handle) => {\n                handle && handle.destroy && handle.destroy();\n            });\n            this.destroy = noop;\n            this.own = destroyed;\n            resolve(true);\n        });\n    }\n}\nexport default Destroyable;\n//# sourceMappingURL=Destroyable.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/core/Destroyable.mjs\n// module id = ./node_modules/@dojo/framework/core/Destroyable.mjs\n// module chunks = title-pane","import Map from '../shim/Map';\nimport { Destroyable } from './Destroyable';\n/**\n * Map of computed regular expressions, keyed by string\n */\nconst regexMap = new Map();\n/**\n * Determines if the event type glob has been matched\n *\n * @returns boolean that indicates if the glob is matched\n */\nexport function isGlobMatch(globString, targetString) {\n    if (typeof targetString === 'string' && typeof globString === 'string' && globString.indexOf('*') !== -1) {\n        let regex;\n        if (regexMap.has(globString)) {\n            regex = regexMap.get(globString);\n        }\n        else {\n            regex = new RegExp(`^${globString.replace(/\\*/g, '.*')}$`);\n            regexMap.set(globString, regex);\n        }\n        return regex.test(targetString);\n    }\n    else {\n        return globString === targetString;\n    }\n}\n/**\n * Event Class\n */\nexport class Evented extends Destroyable {\n    constructor() {\n        super(...arguments);\n        /**\n         * map of listeners keyed by event type\n         */\n        this.listenersMap = new Map();\n    }\n    emit(event) {\n        this.listenersMap.forEach((methods, type) => {\n            if (isGlobMatch(type, event.type)) {\n                [...methods].forEach((method) => {\n                    method.call(this, event);\n                });\n            }\n        });\n    }\n    on(type, listener) {\n        if (Array.isArray(listener)) {\n            const handles = listener.map((listener) => this._addListener(type, listener));\n            return {\n                destroy() {\n                    handles.forEach((handle) => handle.destroy());\n                }\n            };\n        }\n        return this._addListener(type, listener);\n    }\n    _addListener(type, listener) {\n        const listeners = this.listenersMap.get(type) || [];\n        listeners.push(listener);\n        this.listenersMap.set(type, listeners);\n        return {\n            destroy: () => {\n                const listeners = this.listenersMap.get(type) || [];\n                listeners.splice(listeners.indexOf(listener), 1);\n            }\n        };\n    }\n}\nexport default Evented;\n//# sourceMappingURL=Evented.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/core/Evented.mjs\n// module id = ./node_modules/@dojo/framework/core/Evented.mjs\n// module chunks = title-pane","const slice = Array.prototype.slice;\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Type guard that ensures that the value can be coerced to Object\n * to weed out host objects that do not derive from Object.\n * This function is used to check if we want to deep copy an object or not.\n * Note: In ES6 it is possible to modify an object's Symbol.toStringTag property, which will\n * change the value returned by `toString`. This is a rare edge case that is difficult to handle,\n * so it is not handled here.\n * @param  value The value to check\n * @return       If the value is coercible into an Object\n */\nfunction shouldDeepCopyObject(value) {\n    return Object.prototype.toString.call(value) === '[object Object]';\n}\nfunction copyArray(array, inherited) {\n    return array.map(function (item) {\n        if (Array.isArray(item)) {\n            return copyArray(item, inherited);\n        }\n        return !shouldDeepCopyObject(item)\n            ? item\n            : _mixin({\n                deep: true,\n                inherited: inherited,\n                sources: [item],\n                target: {}\n            });\n    });\n}\nfunction _mixin(kwArgs) {\n    const deep = kwArgs.deep;\n    const inherited = kwArgs.inherited;\n    const target = kwArgs.target;\n    const copied = kwArgs.copied || [];\n    const copiedClone = [...copied];\n    for (let i = 0; i < kwArgs.sources.length; i++) {\n        const source = kwArgs.sources[i];\n        if (source === null || source === undefined) {\n            continue;\n        }\n        for (let key in source) {\n            if (inherited || hasOwnProperty.call(source, key)) {\n                let value = source[key];\n                if (copiedClone.indexOf(value) !== -1) {\n                    continue;\n                }\n                if (deep) {\n                    if (Array.isArray(value)) {\n                        value = copyArray(value, inherited);\n                    }\n                    else if (shouldDeepCopyObject(value)) {\n                        const targetValue = target[key] || {};\n                        copied.push(source);\n                        value = _mixin({\n                            deep: true,\n                            inherited: inherited,\n                            sources: [value],\n                            target: targetValue,\n                            copied\n                        });\n                    }\n                }\n                target[key] = value;\n            }\n        }\n    }\n    return target;\n}\nexport function deepAssign(target, ...sources) {\n    return _mixin({\n        deep: true,\n        inherited: false,\n        sources: sources,\n        target: target\n    });\n}\nexport function deepMixin(target, ...sources) {\n    return _mixin({\n        deep: true,\n        inherited: true,\n        sources: sources,\n        target: target\n    });\n}\nexport function mixin(target, ...sources) {\n    return _mixin({\n        deep: false,\n        inherited: true,\n        sources: sources,\n        target: target\n    });\n}\n/**\n * Returns a function which invokes the given function with the given arguments prepended to its argument list.\n * Like `Function.prototype.bind`, but does not alter execution context.\n *\n * @param targetFunction The function that needs to be bound\n * @param suppliedArgs An optional array of arguments to prepend to the `targetFunction` arguments list\n * @return The bound function\n */\nexport function partial(targetFunction, ...suppliedArgs) {\n    return function () {\n        const args = arguments.length ? suppliedArgs.concat(slice.call(arguments)) : suppliedArgs;\n        return targetFunction.apply(this, args);\n    };\n}\nexport function guaranteeMinimumTimeout(callback, delay) {\n    const startTime = Date.now();\n    let timerId;\n    function timeoutHandler() {\n        const delta = Date.now() - startTime;\n        if (delay == null || delta >= delay) {\n            callback();\n        }\n        else {\n            timerId = setTimeout(timeoutHandler, delay - delta);\n        }\n    }\n    timerId = setTimeout(timeoutHandler, delay);\n    return {\n        destroy: () => {\n            if (timerId != null) {\n                clearTimeout(timerId);\n                timerId = null;\n            }\n        }\n    };\n}\nexport function debounce(callback, delay) {\n    let timer;\n    return function () {\n        timer && timer.destroy();\n        let context = this;\n        let args = arguments;\n        timer = guaranteeMinimumTimeout(function () {\n            callback.apply(context, args);\n            args = context = timer = null;\n        }, delay);\n    };\n}\nexport function throttle(callback, delay) {\n    let ran;\n    return function () {\n        if (ran) {\n            return;\n        }\n        ran = true;\n        callback.apply(this, arguments);\n        guaranteeMinimumTimeout(function () {\n            ran = null;\n        }, delay);\n    };\n}\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        const r = (Math.random() * 16) | 0, v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\n//# sourceMappingURL=util.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/core/util.mjs\n// module id = ./node_modules/@dojo/framework/core/util.mjs\n// module chunks = title-pane","function isFeatureTestThenable(value) {\n    return value && value.then;\n}\n/**\n * A cache of results of feature tests\n */\nexport const testCache = {};\n/**\n * A cache of the un-resolved feature tests\n */\nexport const testFunctions = {};\n/**\n * A cache of unresolved thenables (probably promises)\n * @type {{}}\n */\nconst testThenables = {};\n/**\n * A reference to the global scope (`window` in a browser, `global` in NodeJS)\n */\nconst globalScope = (function () {\n    /* istanbul ignore else */\n    if (typeof window !== 'undefined') {\n        // Browsers\n        return window;\n    }\n    else if (typeof global !== 'undefined') {\n        // Node\n        return global;\n    }\n    else if (typeof self !== 'undefined') {\n        // Web workers\n        return self;\n    }\n    /* istanbul ignore next */\n    return {};\n})();\n/* Grab the staticFeatures if there are available */\nconst { staticFeatures } = globalScope.DojoHasEnvironment || {};\n/* Cleaning up the DojoHasEnviornment */\nif ('DojoHasEnvironment' in globalScope) {\n    delete globalScope.DojoHasEnvironment;\n}\n/**\n * Custom type guard to narrow the `staticFeatures` to either a map or a function that\n * returns a map.\n *\n * @param value The value to guard for\n */\nfunction isStaticFeatureFunction(value) {\n    return typeof value === 'function';\n}\n/**\n * The cache of asserted features that were available in the global scope when the\n * module loaded\n */\nconst staticCache = staticFeatures\n    ? isStaticFeatureFunction(staticFeatures)\n        ? staticFeatures.apply(globalScope)\n        : staticFeatures\n    : {}; /* Providing an empty cache, if none was in the environment\n\n/**\n* AMD plugin function.\n*\n* Conditional loads modules based on a has feature test value.\n*\n* @param resourceId Gives the resolved module id to load.\n* @param require The loader require function with respect to the module that contained the plugin resource in its\n*                dependency list.\n* @param load Callback to loader that consumes result of plugin demand.\n*/\nexport function load(resourceId, require, load, config) {\n    resourceId ? require([resourceId], load) : load();\n}\n/**\n * AMD plugin function.\n *\n * Resolves resourceId into a module id based on possibly-nested tenary expression that branches on has feature test\n * value(s).\n *\n * @param resourceId The id of the module\n * @param normalize Resolves a relative module id into an absolute module id\n */\nexport function normalize(resourceId, normalize) {\n    const tokens = resourceId.match(/[\\?:]|[^:\\?]*/g) || [];\n    let i = 0;\n    function get(skip) {\n        const term = tokens[i++];\n        if (term === ':') {\n            // empty string module name, resolves to null\n            return null;\n        }\n        else {\n            // postfixed with a ? means it is a feature to branch on, the term is the name of the feature\n            if (tokens[i++] === '?') {\n                if (!skip && has(term)) {\n                    // matched the feature, get the first value from the options\n                    return get();\n                }\n                else {\n                    // did not match, get the second value, passing over the first\n                    get(true);\n                    return get(skip);\n                }\n            }\n            // a module\n            return term;\n        }\n    }\n    const id = get();\n    return id && normalize(id);\n}\n/**\n * Check if a feature has already been registered\n *\n * @param feature the name of the feature\n */\nexport function exists(feature) {\n    const normalizedFeature = feature.toLowerCase();\n    return Boolean(normalizedFeature in staticCache || normalizedFeature in testCache || testFunctions[normalizedFeature]);\n}\n/**\n * Register a new test for a named feature.\n *\n * @example\n * has.add('dom-addeventlistener', !!document.addEventListener);\n *\n * @example\n * has.add('touch-events', function () {\n *    return 'ontouchstart' in document\n * });\n *\n * @param feature the name of the feature\n * @param value the value reported of the feature, or a function that will be executed once on first test\n * @param overwrite if an existing value should be overwritten. Defaults to false.\n */\nexport function add(feature, value, overwrite = false) {\n    const normalizedFeature = feature.toLowerCase();\n    if (exists(normalizedFeature) && !overwrite && !(normalizedFeature in staticCache)) {\n        throw new TypeError(`Feature \"${feature}\" exists and overwrite not true.`);\n    }\n    if (typeof value === 'function') {\n        testFunctions[normalizedFeature] = value;\n    }\n    else if (isFeatureTestThenable(value)) {\n        testThenables[feature] = value.then((resolvedValue) => {\n            testCache[feature] = resolvedValue;\n            delete testThenables[feature];\n        }, () => {\n            delete testThenables[feature];\n        });\n    }\n    else {\n        testCache[normalizedFeature] = value;\n        delete testFunctions[normalizedFeature];\n    }\n}\n/**\n * Return the current value of a named feature.\n *\n * @param feature The name of the feature to test.\n */\nexport default function has(feature) {\n    let result;\n    const normalizedFeature = feature.toLowerCase();\n    if (normalizedFeature in staticCache) {\n        result = staticCache[normalizedFeature];\n    }\n    else if (testFunctions[normalizedFeature]) {\n        result = testCache[normalizedFeature] = testFunctions[normalizedFeature].call(null);\n        delete testFunctions[normalizedFeature];\n    }\n    else if (normalizedFeature in testCache) {\n        result = testCache[normalizedFeature];\n    }\n    else if (feature in testThenables) {\n        return false;\n    }\n    else {\n        throw new TypeError(`Attempt to detect unregistered has feature \"${feature}\"`);\n    }\n    return result;\n}\n/*\n * Out of the box feature tests\n */\n/* Environments */\n/* Used as a value to provide a debug only code path */\nadd('debug', true);\n/* flag for dojo debug, default to false */\nadd('dojo-debug', false);\n/* Detects if the environment is \"browser like\" */\nadd('host-browser', typeof document !== 'undefined' && typeof location !== 'undefined');\n/* Detects if the environment appears to be NodeJS */\nadd('host-node', function () {\n    if (typeof process === 'object' && process.versions && process.versions.node) {\n        return process.versions.node;\n    }\n});\n//# sourceMappingURL=has.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/has/has.mjs\n// module id = ./node_modules/@dojo/framework/has/has.mjs\n// module chunks = title-pane","import { isArrayLike, ShimIterator } from './iterator';\nimport global from './global';\nimport { is as objectIs } from './object';\nimport has from './support/has';\nimport './Symbol';\nexport let Map = global.Map;\nif (!true) {\n    Map = (_a = class Map {\n            constructor(iterable) {\n                this._keys = [];\n                this._values = [];\n                this[Symbol.toStringTag] = 'Map';\n                if (iterable) {\n                    if (isArrayLike(iterable)) {\n                        for (let i = 0; i < iterable.length; i++) {\n                            const value = iterable[i];\n                            this.set(value[0], value[1]);\n                        }\n                    }\n                    else {\n                        for (const value of iterable) {\n                            this.set(value[0], value[1]);\n                        }\n                    }\n                }\n            }\n            /**\n             * An alternative to Array.prototype.indexOf using Object.is\n             * to check for equality. See http://mzl.la/1zuKO2V\n             */\n            _indexOfKey(keys, key) {\n                for (let i = 0, length = keys.length; i < length; i++) {\n                    if (objectIs(keys[i], key)) {\n                        return i;\n                    }\n                }\n                return -1;\n            }\n            get size() {\n                return this._keys.length;\n            }\n            clear() {\n                this._keys.length = this._values.length = 0;\n            }\n            delete(key) {\n                const index = this._indexOfKey(this._keys, key);\n                if (index < 0) {\n                    return false;\n                }\n                this._keys.splice(index, 1);\n                this._values.splice(index, 1);\n                return true;\n            }\n            entries() {\n                const values = this._keys.map((key, i) => {\n                    return [key, this._values[i]];\n                });\n                return new ShimIterator(values);\n            }\n            forEach(callback, context) {\n                const keys = this._keys;\n                const values = this._values;\n                for (let i = 0, length = keys.length; i < length; i++) {\n                    callback.call(context, values[i], keys[i], this);\n                }\n            }\n            get(key) {\n                const index = this._indexOfKey(this._keys, key);\n                return index < 0 ? undefined : this._values[index];\n            }\n            has(key) {\n                return this._indexOfKey(this._keys, key) > -1;\n            }\n            keys() {\n                return new ShimIterator(this._keys);\n            }\n            set(key, value) {\n                let index = this._indexOfKey(this._keys, key);\n                index = index < 0 ? this._keys.length : index;\n                this._keys[index] = key;\n                this._values[index] = value;\n                return this;\n            }\n            values() {\n                return new ShimIterator(this._values);\n            }\n            [Symbol.iterator]() {\n                return this.entries();\n            }\n        },\n        _a[Symbol.species] = _a,\n        _a);\n}\nexport default Map;\nvar _a;\n//# sourceMappingURL=Map.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/Map.mjs\n// module id = ./node_modules/@dojo/framework/shim/Map.mjs\n// module chunks = title-pane","import global from './global';\nimport { queueMicroTask } from './support/queue';\nimport './Symbol';\nimport has from './support/has';\nexport let ShimPromise = global.Promise;\nexport const isThenable = function isThenable(value) {\n    return value && typeof value.then === 'function';\n};\nif (!true) {\n    global.Promise = ShimPromise = (_a = class Promise {\n            /**\n             * Creates a new Promise.\n             *\n             * @constructor\n             *\n             * @param executor\n             * The executor function is called immediately when the Promise is instantiated. It is responsible for\n             * starting the asynchronous operation when it is invoked.\n             *\n             * The executor must call either the passed `resolve` function when the asynchronous operation has completed\n             * successfully, or the `reject` function when the operation fails.\n             */\n            constructor(executor) {\n                /**\n                 * The current state of this promise.\n                 */\n                this.state = 1 /* Pending */;\n                this[Symbol.toStringTag] = 'Promise';\n                /**\n                 * If true, the resolution of this promise is chained (\"locked in\") to another promise.\n                 */\n                let isChained = false;\n                /**\n                 * Whether or not this promise is in a resolved state.\n                 */\n                const isResolved = () => {\n                    return this.state !== 1 /* Pending */ || isChained;\n                };\n                /**\n                 * Callbacks that should be invoked once the asynchronous operation has completed.\n                 */\n                let callbacks = [];\n                /**\n                 * Initially pushes callbacks onto a queue for execution once this promise settles. After the promise settles,\n                 * enqueues callbacks for execution on the next event loop turn.\n                 */\n                let whenFinished = function (callback) {\n                    if (callbacks) {\n                        callbacks.push(callback);\n                    }\n                };\n                /**\n                 * Settles this promise.\n                 *\n                 * @param newState The resolved state for this promise.\n                 * @param {T|any} value The resolved value for this promise.\n                 */\n                const settle = (newState, value) => {\n                    // A promise can only be settled once.\n                    if (this.state !== 1 /* Pending */) {\n                        return;\n                    }\n                    this.state = newState;\n                    this.resolvedValue = value;\n                    whenFinished = queueMicroTask;\n                    // Only enqueue a callback runner if there are callbacks so that initially fulfilled Promises don't have to\n                    // wait an extra turn.\n                    if (callbacks && callbacks.length > 0) {\n                        queueMicroTask(function () {\n                            if (callbacks) {\n                                let count = callbacks.length;\n                                for (let i = 0; i < count; ++i) {\n                                    callbacks[i].call(null);\n                                }\n                                callbacks = null;\n                            }\n                        });\n                    }\n                };\n                /**\n                 * Resolves this promise.\n                 *\n                 * @param newState The resolved state for this promise.\n                 * @param {T|any} value The resolved value for this promise.\n                 */\n                const resolve = (newState, value) => {\n                    if (isResolved()) {\n                        return;\n                    }\n                    if (isThenable(value)) {\n                        value.then(settle.bind(null, 0 /* Fulfilled */), settle.bind(null, 2 /* Rejected */));\n                        isChained = true;\n                    }\n                    else {\n                        settle(newState, value);\n                    }\n                };\n                this.then = (onFulfilled, onRejected) => {\n                    return new Promise((resolve, reject) => {\n                        // whenFinished initially queues up callbacks for execution after the promise has settled. Once the\n                        // promise has settled, whenFinished will schedule callbacks for execution on the next turn through the\n                        // event loop.\n                        whenFinished(() => {\n                            const callback = this.state === 2 /* Rejected */ ? onRejected : onFulfilled;\n                            if (typeof callback === 'function') {\n                                try {\n                                    resolve(callback(this.resolvedValue));\n                                }\n                                catch (error) {\n                                    reject(error);\n                                }\n                            }\n                            else if (this.state === 2 /* Rejected */) {\n                                reject(this.resolvedValue);\n                            }\n                            else {\n                                resolve(this.resolvedValue);\n                            }\n                        });\n                    });\n                };\n                try {\n                    executor(resolve.bind(null, 0 /* Fulfilled */), resolve.bind(null, 2 /* Rejected */));\n                }\n                catch (error) {\n                    settle(2 /* Rejected */, error);\n                }\n            }\n            static all(iterable) {\n                return new this(function (resolve, reject) {\n                    const values = [];\n                    let complete = 0;\n                    let total = 0;\n                    let populating = true;\n                    function fulfill(index, value) {\n                        values[index] = value;\n                        ++complete;\n                        finish();\n                    }\n                    function finish() {\n                        if (populating || complete < total) {\n                            return;\n                        }\n                        resolve(values);\n                    }\n                    function processItem(index, item) {\n                        ++total;\n                        if (isThenable(item)) {\n                            // If an item Promise rejects, this Promise is immediately rejected with the item\n                            // Promise's rejection error.\n                            item.then(fulfill.bind(null, index), reject);\n                        }\n                        else {\n                            Promise.resolve(item).then(fulfill.bind(null, index));\n                        }\n                    }\n                    let i = 0;\n                    for (const value of iterable) {\n                        processItem(i, value);\n                        i++;\n                    }\n                    populating = false;\n                    finish();\n                });\n            }\n            static race(iterable) {\n                return new this(function (resolve, reject) {\n                    for (const item of iterable) {\n                        if (item instanceof Promise) {\n                            // If a Promise item rejects, this Promise is immediately rejected with the item\n                            // Promise's rejection error.\n                            item.then(resolve, reject);\n                        }\n                        else {\n                            Promise.resolve(item).then(resolve);\n                        }\n                    }\n                });\n            }\n            static reject(reason) {\n                return new this(function (resolve, reject) {\n                    reject(reason);\n                });\n            }\n            static resolve(value) {\n                return new this(function (resolve) {\n                    resolve(value);\n                });\n            }\n            catch(onRejected) {\n                return this.then(undefined, onRejected);\n            }\n        },\n        _a[Symbol.species] = ShimPromise,\n        _a);\n}\nexport default ShimPromise;\nvar _a;\n//# sourceMappingURL=Promise.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/Promise.mjs\n// module id = ./node_modules/@dojo/framework/shim/Promise.mjs\n// module chunks = title-pane","import global from './global';\nimport { isArrayLike, ShimIterator } from './iterator';\nimport has from './support/has';\nimport './Symbol';\nexport let Set = global.Set;\nif (!true) {\n    Set = (_a = class Set {\n            constructor(iterable) {\n                this._setData = [];\n                this[Symbol.toStringTag] = 'Set';\n                if (iterable) {\n                    if (isArrayLike(iterable)) {\n                        for (let i = 0; i < iterable.length; i++) {\n                            this.add(iterable[i]);\n                        }\n                    }\n                    else {\n                        for (const value of iterable) {\n                            this.add(value);\n                        }\n                    }\n                }\n            }\n            add(value) {\n                if (this.has(value)) {\n                    return this;\n                }\n                this._setData.push(value);\n                return this;\n            }\n            clear() {\n                this._setData.length = 0;\n            }\n            delete(value) {\n                const idx = this._setData.indexOf(value);\n                if (idx === -1) {\n                    return false;\n                }\n                this._setData.splice(idx, 1);\n                return true;\n            }\n            entries() {\n                return new ShimIterator(this._setData.map((value) => [value, value]));\n            }\n            forEach(callbackfn, thisArg) {\n                const iterator = this.values();\n                let result = iterator.next();\n                while (!result.done) {\n                    callbackfn.call(thisArg, result.value, result.value, this);\n                    result = iterator.next();\n                }\n            }\n            has(value) {\n                return this._setData.indexOf(value) > -1;\n            }\n            keys() {\n                return new ShimIterator(this._setData);\n            }\n            get size() {\n                return this._setData.length;\n            }\n            values() {\n                return new ShimIterator(this._setData);\n            }\n            [Symbol.iterator]() {\n                return new ShimIterator(this._setData);\n            }\n        },\n        _a[Symbol.species] = _a,\n        _a);\n}\nexport default Set;\nvar _a;\n//# sourceMappingURL=Set.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/Set.mjs\n// module id = ./node_modules/@dojo/framework/shim/Set.mjs\n// module chunks = title-pane","import has from './support/has';\nimport global from './global';\nimport { getValueDescriptor } from './support/util';\nexport let Symbol = global.Symbol;\nif (!true) {\n    /**\n     * Throws if the value is not a symbol, used internally within the Shim\n     * @param  {any}    value The value to check\n     * @return {symbol}       Returns the symbol or throws\n     */\n    const validateSymbol = function validateSymbol(value) {\n        if (!isSymbol(value)) {\n            throw new TypeError(value + ' is not a symbol');\n        }\n        return value;\n    };\n    const defineProperties = Object.defineProperties;\n    const defineProperty = Object.defineProperty;\n    const create = Object.create;\n    const objPrototype = Object.prototype;\n    const globalSymbols = {};\n    const getSymbolName = (function () {\n        const created = create(null);\n        return function (desc) {\n            let postfix = 0;\n            let name;\n            while (created[String(desc) + (postfix || '')]) {\n                ++postfix;\n            }\n            desc += String(postfix || '');\n            created[desc] = true;\n            name = '@@' + desc;\n            // FIXME: Temporary guard until the duplicate execution when testing can be\n            // pinned down.\n            if (!Object.getOwnPropertyDescriptor(objPrototype, name)) {\n                defineProperty(objPrototype, name, {\n                    set: function (value) {\n                        defineProperty(this, name, getValueDescriptor(value));\n                    }\n                });\n            }\n            return name;\n        };\n    })();\n    const InternalSymbol = function Symbol(description) {\n        if (this instanceof InternalSymbol) {\n            throw new TypeError('TypeError: Symbol is not a constructor');\n        }\n        return Symbol(description);\n    };\n    Symbol = global.Symbol = function Symbol(description) {\n        if (this instanceof Symbol) {\n            throw new TypeError('TypeError: Symbol is not a constructor');\n        }\n        const sym = Object.create(InternalSymbol.prototype);\n        description = description === undefined ? '' : String(description);\n        return defineProperties(sym, {\n            __description__: getValueDescriptor(description),\n            __name__: getValueDescriptor(getSymbolName(description))\n        });\n    };\n    /* Decorate the Symbol function with the appropriate properties */\n    defineProperty(Symbol, 'for', getValueDescriptor(function (key) {\n        if (globalSymbols[key]) {\n            return globalSymbols[key];\n        }\n        return (globalSymbols[key] = Symbol(String(key)));\n    }));\n    defineProperties(Symbol, {\n        keyFor: getValueDescriptor(function (sym) {\n            let key;\n            validateSymbol(sym);\n            for (key in globalSymbols) {\n                if (globalSymbols[key] === sym) {\n                    return key;\n                }\n            }\n        }),\n        hasInstance: getValueDescriptor(Symbol.for('hasInstance'), false, false),\n        isConcatSpreadable: getValueDescriptor(Symbol.for('isConcatSpreadable'), false, false),\n        iterator: getValueDescriptor(Symbol.for('iterator'), false, false),\n        match: getValueDescriptor(Symbol.for('match'), false, false),\n        observable: getValueDescriptor(Symbol.for('observable'), false, false),\n        replace: getValueDescriptor(Symbol.for('replace'), false, false),\n        search: getValueDescriptor(Symbol.for('search'), false, false),\n        species: getValueDescriptor(Symbol.for('species'), false, false),\n        split: getValueDescriptor(Symbol.for('split'), false, false),\n        toPrimitive: getValueDescriptor(Symbol.for('toPrimitive'), false, false),\n        toStringTag: getValueDescriptor(Symbol.for('toStringTag'), false, false),\n        unscopables: getValueDescriptor(Symbol.for('unscopables'), false, false)\n    });\n    /* Decorate the InternalSymbol object */\n    defineProperties(InternalSymbol.prototype, {\n        constructor: getValueDescriptor(Symbol),\n        toString: getValueDescriptor(function () {\n            return this.__name__;\n        }, false, false)\n    });\n    /* Decorate the Symbol.prototype */\n    defineProperties(Symbol.prototype, {\n        toString: getValueDescriptor(function () {\n            return 'Symbol (' + validateSymbol(this).__description__ + ')';\n        }),\n        valueOf: getValueDescriptor(function () {\n            return validateSymbol(this);\n        })\n    });\n    defineProperty(Symbol.prototype, Symbol.toPrimitive, getValueDescriptor(function () {\n        return validateSymbol(this);\n    }));\n    defineProperty(Symbol.prototype, Symbol.toStringTag, getValueDescriptor('Symbol', false, false, true));\n    defineProperty(InternalSymbol.prototype, Symbol.toPrimitive, getValueDescriptor(Symbol.prototype[Symbol.toPrimitive], false, false, true));\n    defineProperty(InternalSymbol.prototype, Symbol.toStringTag, getValueDescriptor(Symbol.prototype[Symbol.toStringTag], false, false, true));\n}\n/**\n * A custom guard function that determines if an object is a symbol or not\n * @param  {any}       value The value to check to see if it is a symbol or not\n * @return {is symbol}       Returns true if a symbol or not (and narrows the type guard)\n */\nexport function isSymbol(value) {\n    return (value && (typeof value === 'symbol' || value['@@toStringTag'] === 'Symbol')) || false;\n}\n/**\n * Fill any missing well known symbols if the native Symbol is missing them\n */\n[\n    'hasInstance',\n    'isConcatSpreadable',\n    'iterator',\n    'species',\n    'replace',\n    'search',\n    'split',\n    'match',\n    'toPrimitive',\n    'toStringTag',\n    'unscopables',\n    'observable'\n].forEach((wellKnown) => {\n    if (!Symbol[wellKnown]) {\n        Object.defineProperty(Symbol, wellKnown, getValueDescriptor(Symbol.for(wellKnown), false, false));\n    }\n});\nexport default Symbol;\n//# sourceMappingURL=Symbol.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/Symbol.mjs\n// module id = ./node_modules/@dojo/framework/shim/Symbol.mjs\n// module chunks = title-pane","import global from './global';\nimport { isArrayLike } from './iterator';\nimport has from './support/has';\nimport './Symbol';\nexport let WeakMap = global.WeakMap;\nif (!true) {\n    const DELETED = {};\n    const getUID = function getUID() {\n        return Math.floor(Math.random() * 100000000);\n    };\n    const generateName = (function () {\n        let startId = Math.floor(Date.now() % 100000000);\n        return function generateName() {\n            return '__wm' + getUID() + (startId++ + '__');\n        };\n    })();\n    WeakMap = class WeakMap {\n        constructor(iterable) {\n            this[Symbol.toStringTag] = 'WeakMap';\n            this._name = generateName();\n            this._frozenEntries = [];\n            if (iterable) {\n                if (isArrayLike(iterable)) {\n                    for (let i = 0; i < iterable.length; i++) {\n                        const item = iterable[i];\n                        this.set(item[0], item[1]);\n                    }\n                }\n                else {\n                    for (const [key, value] of iterable) {\n                        this.set(key, value);\n                    }\n                }\n            }\n        }\n        _getFrozenEntryIndex(key) {\n            for (let i = 0; i < this._frozenEntries.length; i++) {\n                if (this._frozenEntries[i].key === key) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n        delete(key) {\n            if (key === undefined || key === null) {\n                return false;\n            }\n            const entry = key[this._name];\n            if (entry && entry.key === key && entry.value !== DELETED) {\n                entry.value = DELETED;\n                return true;\n            }\n            const frozenIndex = this._getFrozenEntryIndex(key);\n            if (frozenIndex >= 0) {\n                this._frozenEntries.splice(frozenIndex, 1);\n                return true;\n            }\n            return false;\n        }\n        get(key) {\n            if (key === undefined || key === null) {\n                return undefined;\n            }\n            const entry = key[this._name];\n            if (entry && entry.key === key && entry.value !== DELETED) {\n                return entry.value;\n            }\n            const frozenIndex = this._getFrozenEntryIndex(key);\n            if (frozenIndex >= 0) {\n                return this._frozenEntries[frozenIndex].value;\n            }\n        }\n        has(key) {\n            if (key === undefined || key === null) {\n                return false;\n            }\n            const entry = key[this._name];\n            if (Boolean(entry && entry.key === key && entry.value !== DELETED)) {\n                return true;\n            }\n            const frozenIndex = this._getFrozenEntryIndex(key);\n            if (frozenIndex >= 0) {\n                return true;\n            }\n            return false;\n        }\n        set(key, value) {\n            if (!key || (typeof key !== 'object' && typeof key !== 'function')) {\n                throw new TypeError('Invalid value used as weak map key');\n            }\n            let entry = key[this._name];\n            if (!entry || entry.key !== key) {\n                entry = Object.create(null, {\n                    key: { value: key }\n                });\n                if (Object.isFrozen(key)) {\n                    this._frozenEntries.push(entry);\n                }\n                else {\n                    Object.defineProperty(key, this._name, {\n                        value: entry\n                    });\n                }\n            }\n            entry.value = value;\n            return this;\n        }\n    };\n}\nexport default WeakMap;\n//# sourceMappingURL=WeakMap.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/WeakMap.mjs\n// module id = ./node_modules/@dojo/framework/shim/WeakMap.mjs\n// module chunks = title-pane","import global from './global';\nimport { isArrayLike, isIterable } from './iterator';\nimport { MAX_SAFE_INTEGER } from './number';\nimport has from './support/has';\nimport { wrapNative } from './support/util';\nexport let from;\n/**\n * Creates a new array from the function parameters.\n *\n * @param arguments Any number of arguments for the array\n * @return An array from the given arguments\n */\nexport let of;\n/* ES6 Array instance methods */\n/**\n * Copies data internally within an array or array-like object.\n *\n * @param target The target array-like object\n * @param offset The index to start copying values to; if negative, it counts backwards from length\n * @param start The first (inclusive) index to copy; if negative, it counts backwards from length\n * @param end The last (exclusive) index to copy; if negative, it counts backwards from length\n * @return The target\n */\nexport let copyWithin;\n/**\n * Fills elements of an array-like object with the specified value.\n *\n * @param target The target to fill\n * @param value The value to fill each element of the target with\n * @param start The first index to fill\n * @param end The (exclusive) index at which to stop filling\n * @return The filled target\n */\nexport let fill;\n/**\n * Finds and returns the first instance matching the callback or undefined if one is not found.\n *\n * @param target An array-like object\n * @param callback A function returning if the current value matches a criteria\n * @param thisArg The execution context for the find function\n * @return The first element matching the callback, or undefined if one does not exist\n */\nexport let find;\n/**\n * Performs a linear search and returns the first index whose value satisfies the passed callback,\n * or -1 if no values satisfy it.\n *\n * @param target An array-like object\n * @param callback A function returning true if the current value satisfies its criteria\n * @param thisArg The execution context for the find function\n * @return The first index whose value satisfies the passed callback, or -1 if no values satisfy it\n */\nexport let findIndex;\n/* ES7 Array instance methods */\n/**\n * Determines whether an array includes a given value\n *\n * @param target the target array-like object\n * @param searchElement the item to search for\n * @param fromIndex the starting index to search from\n * @return `true` if the array includes the element, otherwise `false`\n */\nexport let includes;\nif (true && true) {\n    from = global.Array.from;\n    of = global.Array.of;\n    copyWithin = wrapNative(global.Array.prototype.copyWithin);\n    fill = wrapNative(global.Array.prototype.fill);\n    find = wrapNative(global.Array.prototype.find);\n    findIndex = wrapNative(global.Array.prototype.findIndex);\n}\nelse {\n    // It is only older versions of Safari/iOS that have a bad fill implementation and so aren't in the wild\n    // To make things easier, if there is a bad fill implementation, the whole set of functions will be filled\n    /**\n     * Ensures a non-negative, non-infinite, safe integer.\n     *\n     * @param length The number to validate\n     * @return A proper length\n     */\n    const toLength = function toLength(length) {\n        if (isNaN(length)) {\n            return 0;\n        }\n        length = Number(length);\n        if (isFinite(length)) {\n            length = Math.floor(length);\n        }\n        // Ensure a non-negative, real, safe integer\n        return Math.min(Math.max(length, 0), MAX_SAFE_INTEGER);\n    };\n    /**\n     * From ES6 7.1.4 ToInteger()\n     *\n     * @param value A value to convert\n     * @return An integer\n     */\n    const toInteger = function toInteger(value) {\n        value = Number(value);\n        if (isNaN(value)) {\n            return 0;\n        }\n        if (value === 0 || !isFinite(value)) {\n            return value;\n        }\n        return (value > 0 ? 1 : -1) * Math.floor(Math.abs(value));\n    };\n    /**\n     * Normalizes an offset against a given length, wrapping it if negative.\n     *\n     * @param value The original offset\n     * @param length The total length to normalize against\n     * @return If negative, provide a distance from the end (length); otherwise provide a distance from 0\n     */\n    const normalizeOffset = function normalizeOffset(value, length) {\n        return value < 0 ? Math.max(length + value, 0) : Math.min(value, length);\n    };\n    from = function from(arrayLike, mapFunction, thisArg) {\n        if (arrayLike == null) {\n            throw new TypeError('from: requires an array-like object');\n        }\n        if (mapFunction && thisArg) {\n            mapFunction = mapFunction.bind(thisArg);\n        }\n        /* tslint:disable-next-line:variable-name */\n        const Constructor = this;\n        const length = toLength(arrayLike.length);\n        // Support extension\n        const array = typeof Constructor === 'function' ? Object(new Constructor(length)) : new Array(length);\n        if (!isArrayLike(arrayLike) && !isIterable(arrayLike)) {\n            return array;\n        }\n        // if this is an array and the normalized length is 0, just return an empty array. this prevents a problem\n        // with the iteration on IE when using a NaN array length.\n        if (isArrayLike(arrayLike)) {\n            if (length === 0) {\n                return [];\n            }\n            for (let i = 0; i < arrayLike.length; i++) {\n                array[i] = mapFunction ? mapFunction(arrayLike[i], i) : arrayLike[i];\n            }\n        }\n        else {\n            let i = 0;\n            for (const value of arrayLike) {\n                array[i] = mapFunction ? mapFunction(value, i) : value;\n                i++;\n            }\n        }\n        if (arrayLike.length !== undefined) {\n            array.length = length;\n        }\n        return array;\n    };\n    of = function of(...items) {\n        return Array.prototype.slice.call(items);\n    };\n    copyWithin = function copyWithin(target, offset, start, end) {\n        if (target == null) {\n            throw new TypeError('copyWithin: target must be an array-like object');\n        }\n        const length = toLength(target.length);\n        offset = normalizeOffset(toInteger(offset), length);\n        start = normalizeOffset(toInteger(start), length);\n        end = normalizeOffset(end === undefined ? length : toInteger(end), length);\n        let count = Math.min(end - start, length - offset);\n        let direction = 1;\n        if (offset > start && offset < start + count) {\n            direction = -1;\n            start += count - 1;\n            offset += count - 1;\n        }\n        while (count > 0) {\n            if (start in target) {\n                target[offset] = target[start];\n            }\n            else {\n                delete target[offset];\n            }\n            offset += direction;\n            start += direction;\n            count--;\n        }\n        return target;\n    };\n    fill = function fill(target, value, start, end) {\n        const length = toLength(target.length);\n        let i = normalizeOffset(toInteger(start), length);\n        end = normalizeOffset(end === undefined ? length : toInteger(end), length);\n        while (i < end) {\n            target[i++] = value;\n        }\n        return target;\n    };\n    find = function find(target, callback, thisArg) {\n        const index = findIndex(target, callback, thisArg);\n        return index !== -1 ? target[index] : undefined;\n    };\n    findIndex = function findIndex(target, callback, thisArg) {\n        const length = toLength(target.length);\n        if (!callback) {\n            throw new TypeError('find: second argument must be a function');\n        }\n        if (thisArg) {\n            callback = callback.bind(thisArg);\n        }\n        for (let i = 0; i < length; i++) {\n            if (callback(target[i], i, target)) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\nif (true) {\n    includes = wrapNative(global.Array.prototype.includes);\n}\nelse {\n    /**\n     * Ensures a non-negative, non-infinite, safe integer.\n     *\n     * @param length The number to validate\n     * @return A proper length\n     */\n    const toLength = function toLength(length) {\n        length = Number(length);\n        if (isNaN(length)) {\n            return 0;\n        }\n        if (isFinite(length)) {\n            length = Math.floor(length);\n        }\n        // Ensure a non-negative, real, safe integer\n        return Math.min(Math.max(length, 0), MAX_SAFE_INTEGER);\n    };\n    includes = function includes(target, searchElement, fromIndex = 0) {\n        let len = toLength(target.length);\n        for (let i = fromIndex; i < len; ++i) {\n            const currentElement = target[i];\n            if (searchElement === currentElement ||\n                (searchElement !== searchElement && currentElement !== currentElement)) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\n//# sourceMappingURL=array.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/array.mjs\n// module id = ./node_modules/@dojo/framework/shim/array.mjs\n// module chunks = title-pane","const globalObject = (function () {\n    // the only reliable means to get the global object is\n    // `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n})();\nexport default globalObject;\n//# sourceMappingURL=global.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/global.mjs\n// module id = ./node_modules/@dojo/framework/shim/global.mjs\n// module chunks = title-pane","import './Symbol';\nimport { HIGH_SURROGATE_MAX, HIGH_SURROGATE_MIN } from './string';\nconst staticDone = { done: true, value: undefined };\n/**\n * A class that _shims_ an iterator interface on array like objects.\n */\nexport class ShimIterator {\n    constructor(list) {\n        this._nextIndex = -1;\n        if (isIterable(list)) {\n            this._nativeIterator = list[Symbol.iterator]();\n        }\n        else {\n            this._list = list;\n        }\n    }\n    /**\n     * Return the next iteration result for the Iterator\n     */\n    next() {\n        if (this._nativeIterator) {\n            return this._nativeIterator.next();\n        }\n        if (!this._list) {\n            return staticDone;\n        }\n        if (++this._nextIndex < this._list.length) {\n            return {\n                done: false,\n                value: this._list[this._nextIndex]\n            };\n        }\n        return staticDone;\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n}\n/**\n * A type guard for checking if something has an Iterable interface\n *\n * @param value The value to type guard against\n */\nexport function isIterable(value) {\n    return value && typeof value[Symbol.iterator] === 'function';\n}\n/**\n * A type guard for checking if something is ArrayLike\n *\n * @param value The value to type guard against\n */\nexport function isArrayLike(value) {\n    return value && typeof value.length === 'number';\n}\n/**\n * Returns the iterator for an object\n *\n * @param iterable The iterable object to return the iterator for\n */\nexport function get(iterable) {\n    if (isIterable(iterable)) {\n        return iterable[Symbol.iterator]();\n    }\n    else if (isArrayLike(iterable)) {\n        return new ShimIterator(iterable);\n    }\n}\n/**\n * Shims the functionality of `for ... of` blocks\n *\n * @param iterable The object the provides an interator interface\n * @param callback The callback which will be called for each item of the iterable\n * @param thisArg Optional scope to pass the callback\n */\nexport function forOf(iterable, callback, thisArg) {\n    let broken = false;\n    function doBreak() {\n        broken = true;\n    }\n    /* We need to handle iteration of double byte strings properly */\n    if (isArrayLike(iterable) && typeof iterable === 'string') {\n        const l = iterable.length;\n        for (let i = 0; i < l; ++i) {\n            let char = iterable[i];\n            if (i + 1 < l) {\n                const code = char.charCodeAt(0);\n                if (code >= HIGH_SURROGATE_MIN && code <= HIGH_SURROGATE_MAX) {\n                    char += iterable[++i];\n                }\n            }\n            callback.call(thisArg, char, iterable, doBreak);\n            if (broken) {\n                return;\n            }\n        }\n    }\n    else {\n        const iterator = get(iterable);\n        if (iterator) {\n            let result = iterator.next();\n            while (!result.done) {\n                callback.call(thisArg, result.value, iterable, doBreak);\n                if (broken) {\n                    return;\n                }\n                result = iterator.next();\n            }\n        }\n    }\n}\n//# sourceMappingURL=iterator.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/iterator.mjs\n// module id = ./node_modules/@dojo/framework/shim/iterator.mjs\n// module chunks = title-pane","import global from './global';\n/**\n * The smallest interval between two representable numbers.\n */\nexport const EPSILON = 1;\n/**\n * The maximum safe integer in JavaScript\n */\nexport const MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n/**\n * The minimum safe integer in JavaScript\n */\nexport const MIN_SAFE_INTEGER = -MAX_SAFE_INTEGER;\n/**\n * Determines whether the passed value is NaN without coersion.\n *\n * @param value The value to test\n * @return true if the value is NaN, false if it is not\n */\nexport function isNaN(value) {\n    return typeof value === 'number' && global.isNaN(value);\n}\n/**\n * Determines whether the passed value is a finite number without coersion.\n *\n * @param value The value to test\n * @return true if the value is finite, false if it is not\n */\nexport function isFinite(value) {\n    return typeof value === 'number' && global.isFinite(value);\n}\n/**\n * Determines whether the passed value is an integer.\n *\n * @param value The value to test\n * @return true if the value is an integer, false if it is not\n */\nexport function isInteger(value) {\n    return isFinite(value) && Math.floor(value) === value;\n}\n/**\n * Determines whether the passed value is an integer that is 'safe,' meaning:\n *   1. it can be expressed as an IEEE-754 double precision number\n *   2. it has a one-to-one mapping to a mathematical integer, meaning its\n *      IEEE-754 representation cannot be the result of rounding any other\n *      integer to fit the IEEE-754 representation\n *\n * @param value The value to test\n * @return true if the value is an integer, false if it is not\n */\nexport function isSafeInteger(value) {\n    return isInteger(value) && Math.abs(value) <= MAX_SAFE_INTEGER;\n}\n//# sourceMappingURL=number.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/number.mjs\n// module id = ./node_modules/@dojo/framework/shim/number.mjs\n// module chunks = title-pane","import global from './global';\nimport has from './support/has';\nimport { isSymbol } from './Symbol';\nexport let assign;\n/**\n * Gets the own property descriptor of the specified object.\n * An own property descriptor is one that is defined directly on the object and is not\n * inherited from the object's prototype.\n * @param o Object that contains the property.\n * @param p Name of the property.\n */\nexport let getOwnPropertyDescriptor;\n/**\n * Returns the names of the own properties of an object. The own properties of an object are those that are defined directly\n * on that object, and are not inherited from the object's prototype. The properties of an object include both fields (objects) and functions.\n * @param o Object that contains the own properties.\n */\nexport let getOwnPropertyNames;\n/**\n * Returns an array of all symbol properties found directly on object o.\n * @param o Object to retrieve the symbols from.\n */\nexport let getOwnPropertySymbols;\n/**\n * Returns true if the values are the same value, false otherwise.\n * @param value1 The first value.\n * @param value2 The second value.\n */\nexport let is;\n/**\n * Returns the names of the enumerable properties and methods of an object.\n * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n */\nexport let keys;\n/* ES7 Object static methods */\nexport let getOwnPropertyDescriptors;\nexport let entries;\nexport let values;\nif (true) {\n    const globalObject = global.Object;\n    assign = globalObject.assign;\n    getOwnPropertyDescriptor = globalObject.getOwnPropertyDescriptor;\n    getOwnPropertyNames = globalObject.getOwnPropertyNames;\n    getOwnPropertySymbols = globalObject.getOwnPropertySymbols;\n    is = globalObject.is;\n    keys = globalObject.keys;\n}\nelse {\n    keys = function symbolAwareKeys(o) {\n        return Object.keys(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n    };\n    assign = function assign(target, ...sources) {\n        if (target == null) {\n            // TypeError if undefined or null\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        const to = Object(target);\n        sources.forEach((nextSource) => {\n            if (nextSource) {\n                // Skip over if undefined or null\n                keys(nextSource).forEach((nextKey) => {\n                    to[nextKey] = nextSource[nextKey];\n                });\n            }\n        });\n        return to;\n    };\n    getOwnPropertyDescriptor = function (o, prop) {\n        if (isSymbol(prop)) {\n            return Object.getOwnPropertyDescriptor(o, prop);\n        }\n        else {\n            return Object.getOwnPropertyDescriptor(o, prop);\n        }\n    };\n    getOwnPropertyNames = function getOwnPropertyNames(o) {\n        return Object.getOwnPropertyNames(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n    };\n    getOwnPropertySymbols = function getOwnPropertySymbols(o) {\n        return Object.getOwnPropertyNames(o)\n            .filter((key) => Boolean(key.match(/^@@.+/)))\n            .map((key) => Symbol.for(key.substring(2)));\n    };\n    is = function is(value1, value2) {\n        if (value1 === value2) {\n            return value1 !== 0 || 1 / value1 === 1 / value2; // -0\n        }\n        return value1 !== value1 && value2 !== value2; // NaN\n    };\n}\nif (true) {\n    const globalObject = global.Object;\n    getOwnPropertyDescriptors = globalObject.getOwnPropertyDescriptors;\n    entries = globalObject.entries;\n    values = globalObject.values;\n}\nelse {\n    getOwnPropertyDescriptors = function getOwnPropertyDescriptors(o) {\n        return getOwnPropertyNames(o).reduce((previous, key) => {\n            previous[key] = getOwnPropertyDescriptor(o, key);\n            return previous;\n        }, {});\n    };\n    entries = function entries(o) {\n        return keys(o).map((key) => [key, o[key]]);\n    };\n    values = function values(o) {\n        return keys(o).map((key) => o[key]);\n    };\n}\n//# sourceMappingURL=object.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/object.mjs\n// module id = ./node_modules/@dojo/framework/shim/object.mjs\n// module chunks = title-pane","import global from './global';\nimport has from './support/has';\nimport { wrapNative } from './support/util';\n/**\n * The minimum location of high surrogates\n */\nexport const HIGH_SURROGATE_MIN = 0xd800;\n/**\n * The maximum location of high surrogates\n */\nexport const HIGH_SURROGATE_MAX = 0xdbff;\n/**\n * The minimum location of low surrogates\n */\nexport const LOW_SURROGATE_MIN = 0xdc00;\n/**\n * The maximum location of low surrogates\n */\nexport const LOW_SURROGATE_MAX = 0xdfff;\n/* ES6 static methods */\n/**\n * Return the String value whose elements are, in order, the elements in the List elements.\n * If length is 0, the empty string is returned.\n * @param codePoints The code points to generate the string\n */\nexport let fromCodePoint;\n/**\n * `raw` is intended for use as a tag function of a Tagged Template String. When called\n * as such the first argument will be a well formed template call site object and the rest\n * parameter will contain the substitution values.\n * @param template A well-formed template string call site representation.\n * @param substitutions A set of substitution values.\n */\nexport let raw;\n/* ES6 instance methods */\n/**\n * Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\n * value of the UTF-16 encoded code point starting at the string element at position pos in\n * the String resulting from converting this object to a String.\n * If there is no element at that position, the result is undefined.\n * If a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.\n */\nexport let codePointAt;\n/**\n * Returns true if the sequence of elements of searchString converted to a String is the\n * same as the corresponding elements of this object (converted to a String) starting at\n * endPosition – length(this). Otherwise returns false.\n */\nexport let endsWith;\n/**\n * Returns true if searchString appears as a substring of the result of converting this\n * object to a String, at one or more positions that are\n * greater than or equal to position; otherwise, returns false.\n * @param target The target string\n * @param searchString search string\n * @param position If position is undefined, 0 is assumed, so as to search all of the String.\n */\nexport let includes;\n/**\n * Returns the String value result of normalizing the string into the normalization form\n * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n * @param target The target string\n * @param form Applicable values: \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", If not specified default\n * is \"NFC\"\n */\nexport let normalize;\n/**\n * Returns a String value that is made from count copies appended together. If count is 0,\n * T is the empty String is returned.\n * @param count number of copies to append\n */\nexport let repeat;\n/**\n * Returns true if the sequence of elements of searchString converted to a String is the\n * same as the corresponding elements of this object (converted to a String) starting at\n * position. Otherwise returns false.\n */\nexport let startsWith;\n/* ES7 instance methods */\n/**\n * Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\n * The padding is applied from the end (right) of the current string.\n *\n * @param target The target string\n * @param maxLength The length of the resulting string once the current string has been padded.\n *        If this parameter is smaller than the current string's length, the current string will be returned as it is.\n *\n * @param fillString The string to pad the current string with.\n *        If this string is too long, it will be truncated and the left-most part will be applied.\n *        The default value for this parameter is \" \" (U+0020).\n */\nexport let padEnd;\n/**\n * Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\n * The padding is applied from the start (left) of the current string.\n *\n * @param target The target string\n * @param maxLength The length of the resulting string once the current string has been padded.\n *        If this parameter is smaller than the current string's length, the current string will be returned as it is.\n *\n * @param fillString The string to pad the current string with.\n *        If this string is too long, it will be truncated and the left-most part will be applied.\n *        The default value for this parameter is \" \" (U+0020).\n */\nexport let padStart;\nif (true && true) {\n    fromCodePoint = global.String.fromCodePoint;\n    raw = global.String.raw;\n    codePointAt = wrapNative(global.String.prototype.codePointAt);\n    endsWith = wrapNative(global.String.prototype.endsWith);\n    includes = wrapNative(global.String.prototype.includes);\n    normalize = wrapNative(global.String.prototype.normalize);\n    repeat = wrapNative(global.String.prototype.repeat);\n    startsWith = wrapNative(global.String.prototype.startsWith);\n}\nelse {\n    /**\n     * Validates that text is defined, and normalizes position (based on the given default if the input is NaN).\n     * Used by startsWith, includes, and endsWith.\n     *\n     * @return Normalized position.\n     */\n    const normalizeSubstringArgs = function (name, text, search, position, isEnd = false) {\n        if (text == null) {\n            throw new TypeError('string.' + name + ' requires a valid string to search against.');\n        }\n        const length = text.length;\n        position = position !== position ? (isEnd ? length : 0) : position;\n        return [text, String(search), Math.min(Math.max(position, 0), length)];\n    };\n    fromCodePoint = function fromCodePoint(...codePoints) {\n        // Adapted from https://github.com/mathiasbynens/String.fromCodePoint\n        const length = arguments.length;\n        if (!length) {\n            return '';\n        }\n        const fromCharCode = String.fromCharCode;\n        const MAX_SIZE = 0x4000;\n        let codeUnits = [];\n        let index = -1;\n        let result = '';\n        while (++index < length) {\n            let codePoint = Number(arguments[index]);\n            // Code points must be finite integers within the valid range\n            let isValid = isFinite(codePoint) && Math.floor(codePoint) === codePoint && codePoint >= 0 && codePoint <= 0x10ffff;\n            if (!isValid) {\n                throw RangeError('string.fromCodePoint: Invalid code point ' + codePoint);\n            }\n            if (codePoint <= 0xffff) {\n                // BMP code point\n                codeUnits.push(codePoint);\n            }\n            else {\n                // Astral code point; split in surrogate halves\n                // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n                codePoint -= 0x10000;\n                let highSurrogate = (codePoint >> 10) + HIGH_SURROGATE_MIN;\n                let lowSurrogate = (codePoint % 0x400) + LOW_SURROGATE_MIN;\n                codeUnits.push(highSurrogate, lowSurrogate);\n            }\n            if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n                result += fromCharCode.apply(null, codeUnits);\n                codeUnits.length = 0;\n            }\n        }\n        return result;\n    };\n    raw = function raw(callSite, ...substitutions) {\n        let rawStrings = callSite.raw;\n        let result = '';\n        let numSubstitutions = substitutions.length;\n        if (callSite == null || callSite.raw == null) {\n            throw new TypeError('string.raw requires a valid callSite object with a raw value');\n        }\n        for (let i = 0, length = rawStrings.length; i < length; i++) {\n            result += rawStrings[i] + (i < numSubstitutions && i < length - 1 ? substitutions[i] : '');\n        }\n        return result;\n    };\n    codePointAt = function codePointAt(text, position = 0) {\n        // Adapted from https://github.com/mathiasbynens/String.prototype.codePointAt\n        if (text == null) {\n            throw new TypeError('string.codePointAt requries a valid string.');\n        }\n        const length = text.length;\n        if (position !== position) {\n            position = 0;\n        }\n        if (position < 0 || position >= length) {\n            return undefined;\n        }\n        // Get the first code unit\n        const first = text.charCodeAt(position);\n        if (first >= HIGH_SURROGATE_MIN && first <= HIGH_SURROGATE_MAX && length > position + 1) {\n            // Start of a surrogate pair (high surrogate and there is a next code unit); check for low surrogate\n            // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            const second = text.charCodeAt(position + 1);\n            if (second >= LOW_SURROGATE_MIN && second <= LOW_SURROGATE_MAX) {\n                return (first - HIGH_SURROGATE_MIN) * 0x400 + second - LOW_SURROGATE_MIN + 0x10000;\n            }\n        }\n        return first;\n    };\n    endsWith = function endsWith(text, search, endPosition) {\n        if (search === '') {\n            return true;\n        }\n        if (typeof endPosition === 'undefined') {\n            endPosition = text.length;\n        }\n        else if (endPosition === null || isNaN(endPosition)) {\n            return false;\n        }\n        [text, search, endPosition] = normalizeSubstringArgs('endsWith', text, search, endPosition, true);\n        const start = endPosition - search.length;\n        if (start < 0) {\n            return false;\n        }\n        return text.slice(start, endPosition) === search;\n    };\n    includes = function includes(text, search, position = 0) {\n        [text, search, position] = normalizeSubstringArgs('includes', text, search, position);\n        return text.indexOf(search, position) !== -1;\n    };\n    repeat = function repeat(text, count = 0) {\n        // Adapted from https://github.com/mathiasbynens/String.prototype.repeat\n        if (text == null) {\n            throw new TypeError('string.repeat requires a valid string.');\n        }\n        if (count !== count) {\n            count = 0;\n        }\n        if (count < 0 || count === Infinity) {\n            throw new RangeError('string.repeat requires a non-negative finite count.');\n        }\n        let result = '';\n        while (count) {\n            if (count % 2) {\n                result += text;\n            }\n            if (count > 1) {\n                text += text;\n            }\n            count >>= 1;\n        }\n        return result;\n    };\n    startsWith = function startsWith(text, search, position = 0) {\n        search = String(search);\n        [text, search, position] = normalizeSubstringArgs('startsWith', text, search, position);\n        const end = position + search.length;\n        if (end > text.length) {\n            return false;\n        }\n        return text.slice(position, end) === search;\n    };\n}\nif (true) {\n    padEnd = wrapNative(global.String.prototype.padEnd);\n    padStart = wrapNative(global.String.prototype.padStart);\n}\nelse {\n    padEnd = function padEnd(text, maxLength, fillString = ' ') {\n        if (text === null || text === undefined) {\n            throw new TypeError('string.repeat requires a valid string.');\n        }\n        if (maxLength === Infinity) {\n            throw new RangeError('string.padEnd requires a non-negative finite count.');\n        }\n        if (maxLength === null || maxLength === undefined || maxLength < 0) {\n            maxLength = 0;\n        }\n        let strText = String(text);\n        const padding = maxLength - strText.length;\n        if (padding > 0) {\n            strText +=\n                repeat(fillString, Math.floor(padding / fillString.length)) +\n                    fillString.slice(0, padding % fillString.length);\n        }\n        return strText;\n    };\n    padStart = function padStart(text, maxLength, fillString = ' ') {\n        if (text === null || text === undefined) {\n            throw new TypeError('string.repeat requires a valid string.');\n        }\n        if (maxLength === Infinity) {\n            throw new RangeError('string.padStart requires a non-negative finite count.');\n        }\n        if (maxLength === null || maxLength === undefined || maxLength < 0) {\n            maxLength = 0;\n        }\n        let strText = String(text);\n        const padding = maxLength - strText.length;\n        if (padding > 0) {\n            strText =\n                repeat(fillString, Math.floor(padding / fillString.length)) +\n                    fillString.slice(0, padding % fillString.length) +\n                    strText;\n        }\n        return strText;\n    };\n}\n//# sourceMappingURL=string.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/string.mjs\n// module id = ./node_modules/@dojo/framework/shim/string.mjs\n// module chunks = title-pane","import has, { add } from '../../has/has';\nimport global from '../global';\nexport default has;\nexport * from '../../has/has';\n/* ECMAScript 6 and 7 Features */\n/* Array */\nadd('es6-array', () => {\n    return (['from', 'of'].every((key) => key in global.Array) &&\n        ['findIndex', 'find', 'copyWithin'].every((key) => key in global.Array.prototype));\n}, true);\nadd('es6-array-fill', () => {\n    if ('fill' in global.Array.prototype) {\n        /* Some versions of Safari do not properly implement this */\n        return [1].fill(9, Number.POSITIVE_INFINITY)[0] === 1;\n    }\n    return false;\n}, true);\nadd('es7-array', () => 'includes' in global.Array.prototype, true);\n/* Map */\nadd('es6-map', () => {\n    if (typeof global.Map === 'function') {\n        /*\n    IE11 and older versions of Safari are missing critical ES6 Map functionality\n    We wrap this in a try/catch because sometimes the Map constructor exists, but does not\n    take arguments (iOS 8.4)\n     */\n        try {\n            const map = new global.Map([[0, 1]]);\n            return map.has(0) &&\n                typeof map.keys === 'function' &&\n                true &&\n                typeof map.values === 'function' &&\n                typeof map.entries === 'function';\n        }\n        catch (e) {\n            /* istanbul ignore next: not testing on iOS at the moment */\n            return false;\n        }\n    }\n    return false;\n}, true);\n/* Math */\nadd('es6-math', () => {\n    return [\n        'clz32',\n        'sign',\n        'log10',\n        'log2',\n        'log1p',\n        'expm1',\n        'cosh',\n        'sinh',\n        'tanh',\n        'acosh',\n        'asinh',\n        'atanh',\n        'trunc',\n        'fround',\n        'cbrt',\n        'hypot'\n    ].every((name) => typeof global.Math[name] === 'function');\n}, true);\nadd('es6-math-imul', () => {\n    if ('imul' in global.Math) {\n        /* Some versions of Safari on ios do not properly implement this */\n        return Math.imul(0xffffffff, 5) === -5;\n    }\n    return false;\n}, true);\n/* Object */\nadd('es6-object', () => {\n    return true &&\n        ['assign', 'is', 'getOwnPropertySymbols', 'setPrototypeOf'].every((name) => typeof global.Object[name] === 'function');\n}, true);\nadd('es2017-object', () => {\n    return ['values', 'entries', 'getOwnPropertyDescriptors'].every((name) => typeof global.Object[name] === 'function');\n}, true);\n/* Observable */\nadd('es-observable', () => typeof global.Observable !== 'undefined', true);\n/* Promise */\nadd('es6-promise', () => typeof global.Promise !== 'undefined' && true, true);\n/* Set */\nadd('es6-set', () => {\n    if (typeof global.Set === 'function') {\n        /* IE11 and older versions of Safari are missing critical ES6 Set functionality */\n        const set = new global.Set([1]);\n        return set.has(1) && 'keys' in set && typeof set.keys === 'function' && true;\n    }\n    return false;\n}, true);\n/* String */\nadd('es6-string', () => {\n    return ([\n        /* static methods */\n        'fromCodePoint'\n    ].every((key) => typeof global.String[key] === 'function') &&\n        [\n            /* instance methods */\n            'codePointAt',\n            'normalize',\n            'repeat',\n            'startsWith',\n            'endsWith',\n            'includes'\n        ].every((key) => typeof global.String.prototype[key] === 'function'));\n}, true);\nadd('es6-string-raw', () => {\n    function getCallSite(callSite, ...substitutions) {\n        const result = [...callSite];\n        result.raw = callSite.raw;\n        return result;\n    }\n    if ('raw' in global.String) {\n        let b = 1;\n        let callSite = getCallSite `a\\n${b}`;\n        callSite.raw = ['a\\\\n'];\n        const supportsTrunc = global.String.raw(callSite, 42) === 'a\\\\n';\n        return supportsTrunc;\n    }\n    return false;\n}, true);\nadd('es2017-string', () => {\n    return ['padStart', 'padEnd'].every((key) => typeof global.String.prototype[key] === 'function');\n}, true);\n/* Symbol */\nadd('es6-symbol', () => typeof global.Symbol !== 'undefined' && typeof Symbol() === 'symbol', true);\n/* WeakMap */\nadd('es6-weakmap', () => {\n    if (typeof global.WeakMap !== 'undefined') {\n        /* IE11 and older versions of Safari are missing critical ES6 Map functionality */\n        const key1 = {};\n        const key2 = {};\n        const map = new global.WeakMap([[key1, 1]]);\n        Object.freeze(key1);\n        return map.get(key1) === 1 && map.set(key2, 2) === map && true;\n    }\n    return false;\n}, true);\n/* Miscellaneous features */\nadd('microtasks', () => true || false || true, true);\nadd('postmessage', () => {\n    // If window is undefined, and we have postMessage, it probably means we're in a web worker. Web workers have\n    // post message but it doesn't work how we expect it to, so it's best just to pretend it doesn't exist.\n    return typeof global.window !== 'undefined' && typeof global.postMessage === 'function';\n}, true);\nadd('raf', () => typeof global.requestAnimationFrame === 'function', true);\nadd('setimmediate', () => typeof global.setImmediate !== 'undefined', true);\n/* DOM Features */\nadd('dom-mutationobserver', () => {\n    if (true && Boolean(global.MutationObserver || global.WebKitMutationObserver)) {\n        // IE11 has an unreliable MutationObserver implementation where setProperty() does not\n        // generate a mutation event, observers can crash, and the queue does not drain\n        // reliably. The following feature test was adapted from\n        // https://gist.github.com/t10ko/4aceb8c71681fdb275e33efe5e576b14\n        const example = document.createElement('div');\n        /* tslint:disable-next-line:variable-name */\n        const HostMutationObserver = global.MutationObserver || global.WebKitMutationObserver;\n        const observer = new HostMutationObserver(function () { });\n        observer.observe(example, { attributes: true });\n        example.style.setProperty('display', 'block');\n        return Boolean(observer.takeRecords().length);\n    }\n    return false;\n}, true);\nadd('dom-webanimation', () => true && global.Animation !== undefined && global.KeyframeEffect !== undefined, true);\nadd('abort-controller', () => typeof global.AbortController !== 'undefined');\nadd('abort-signal', () => typeof global.AbortSignal !== 'undefined');\n//# sourceMappingURL=has.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/support/has.mjs\n// module id = ./node_modules/@dojo/framework/shim/support/has.mjs\n// module chunks = title-pane","import global from '../global';\nimport has from './has';\nfunction executeTask(item) {\n    if (item && item.isActive && item.callback) {\n        item.callback();\n    }\n}\nfunction getQueueHandle(item, destructor) {\n    return {\n        destroy: function () {\n            this.destroy = function () { };\n            item.isActive = false;\n            item.callback = null;\n            if (destructor) {\n                destructor();\n            }\n        }\n    };\n}\nlet checkMicroTaskQueue;\nlet microTasks;\n/**\n * Schedules a callback to the macrotask queue.\n *\n * @param callback the function to be queued and later executed.\n * @returns An object with a `destroy` method that, when called, prevents the registered callback from executing.\n */\nexport const queueTask = (function () {\n    let destructor;\n    let enqueue;\n    // Since the IE implementation of `setImmediate` is not flawless, we will test for `postMessage` first.\n    if (true) {\n        const queue = [];\n        global.addEventListener('message', function (event) {\n            // Confirm that the event was triggered by the current window and by this particular implementation.\n            if (event.source === global && event.data === 'dojo-queue-message') {\n                event.stopPropagation();\n                if (queue.length) {\n                    executeTask(queue.shift());\n                }\n            }\n        });\n        enqueue = function (item) {\n            queue.push(item);\n            global.postMessage('dojo-queue-message', '*');\n        };\n    }\n    else if (false) {\n        destructor = global.clearImmediate;\n        enqueue = function (item) {\n            return setImmediate(executeTask.bind(null, item));\n        };\n    }\n    else {\n        destructor = global.clearTimeout;\n        enqueue = function (item) {\n            return setTimeout(executeTask.bind(null, item), 0);\n        };\n    }\n    function queueTask(callback) {\n        const item = {\n            isActive: true,\n            callback: callback\n        };\n        const id = enqueue(item);\n        return getQueueHandle(item, destructor &&\n            function () {\n                destructor(id);\n            });\n    }\n    // TODO: Use aspect.before when it is available.\n    return true\n        ? queueTask\n        : function (callback) {\n            checkMicroTaskQueue();\n            return queueTask(callback);\n        };\n})();\n// When no mechanism for registering microtasks is exposed by the environment, microtasks will\n// be queued and then executed in a single macrotask before the other macrotasks are executed.\nif (!true) {\n    let isMicroTaskQueued = false;\n    microTasks = [];\n    checkMicroTaskQueue = function () {\n        if (!isMicroTaskQueued) {\n            isMicroTaskQueued = true;\n            queueTask(function () {\n                isMicroTaskQueued = false;\n                if (microTasks.length) {\n                    let item;\n                    while ((item = microTasks.shift())) {\n                        executeTask(item);\n                    }\n                }\n            });\n        }\n    };\n}\n/**\n * Schedules an animation task with `window.requestAnimationFrame` if it exists, or with `queueTask` otherwise.\n *\n * Since requestAnimationFrame's behavior does not match that expected from `queueTask`, it is not used there.\n * However, at times it makes more sense to delegate to requestAnimationFrame; hence the following method.\n *\n * @param callback the function to be queued and later executed.\n * @returns An object with a `destroy` method that, when called, prevents the registered callback from executing.\n */\nexport const queueAnimationTask = (function () {\n    if (!true) {\n        return queueTask;\n    }\n    function queueAnimationTask(callback) {\n        const item = {\n            isActive: true,\n            callback: callback\n        };\n        const rafId = requestAnimationFrame(executeTask.bind(null, item));\n        return getQueueHandle(item, function () {\n            cancelAnimationFrame(rafId);\n        });\n    }\n    // TODO: Use aspect.before when it is available.\n    return true\n        ? queueAnimationTask\n        : function (callback) {\n            checkMicroTaskQueue();\n            return queueAnimationTask(callback);\n        };\n})();\n/**\n * Schedules a callback to the microtask queue.\n *\n * Any callbacks registered with `queueMicroTask` will be executed before the next macrotask. If no native\n * mechanism for scheduling macrotasks is exposed, then any callbacks will be fired before any macrotask\n * registered with `queueTask` or `queueAnimationTask`.\n *\n * @param callback the function to be queued and later executed.\n * @returns An object with a `destroy` method that, when called, prevents the registered callback from executing.\n */\nexport let queueMicroTask = (function () {\n    let enqueue;\n    if (false) {\n        enqueue = function (item) {\n            global.process.nextTick(executeTask.bind(null, item));\n        };\n    }\n    else if (true) {\n        enqueue = function (item) {\n            global.Promise.resolve(item).then(executeTask);\n        };\n    }\n    else if (true) {\n        /* tslint:disable-next-line:variable-name */\n        const HostMutationObserver = global.MutationObserver || global.WebKitMutationObserver;\n        const node = document.createElement('div');\n        const queue = [];\n        const observer = new HostMutationObserver(function () {\n            while (queue.length > 0) {\n                const item = queue.shift();\n                if (item && item.isActive && item.callback) {\n                    item.callback();\n                }\n            }\n        });\n        observer.observe(node, { attributes: true });\n        enqueue = function (item) {\n            queue.push(item);\n            node.setAttribute('queueStatus', '1');\n        };\n    }\n    else {\n        enqueue = function (item) {\n            checkMicroTaskQueue();\n            microTasks.push(item);\n        };\n    }\n    return function (callback) {\n        const item = {\n            isActive: true,\n            callback: callback\n        };\n        enqueue(item);\n        return getQueueHandle(item);\n    };\n})();\n//# sourceMappingURL=queue.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/support/queue.mjs\n// module id = ./node_modules/@dojo/framework/shim/support/queue.mjs\n// module chunks = title-pane","/**\n * Helper function to generate a value property descriptor\n *\n * @param value        The value the property descriptor should be set to\n * @param enumerable   If the property should be enumberable, defaults to false\n * @param writable     If the property should be writable, defaults to true\n * @param configurable If the property should be configurable, defaults to true\n * @return             The property descriptor object\n */\nexport function getValueDescriptor(value, enumerable = false, writable = true, configurable = true) {\n    return {\n        value: value,\n        enumerable: enumerable,\n        writable: writable,\n        configurable: configurable\n    };\n}\nexport function wrapNative(nativeFunction) {\n    return function (target, ...args) {\n        return nativeFunction.apply(target, args);\n    };\n}\n//# sourceMappingURL=util.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/support/util.mjs\n// module id = ./node_modules/@dojo/framework/shim/support/util.mjs\n// module chunks = title-pane","import { Evented } from '../core/Evented';\nexport class Injector extends Evented {\n    constructor(payload) {\n        super();\n        this._payload = payload;\n    }\n    setInvalidator(invalidator) {\n        this._invalidator = invalidator;\n    }\n    get() {\n        return this._payload;\n    }\n    set(payload) {\n        this._payload = payload;\n        if (this._invalidator) {\n            this._invalidator();\n        }\n    }\n}\nexport default Injector;\n//# sourceMappingURL=Injector.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/Injector.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/Injector.mjs\n// module chunks = title-pane","import { Evented } from '../core/Evented';\nimport Map from '../shim/Map';\n/**\n * Enum to identify the type of event.\n * Listening to 'Projector' will notify when projector is created or updated\n * Listening to 'Widget' will notify when widget root is created or updated\n */\nexport var NodeEventType;\n(function (NodeEventType) {\n    NodeEventType[\"Projector\"] = \"Projector\";\n    NodeEventType[\"Widget\"] = \"Widget\";\n})(NodeEventType || (NodeEventType = {}));\nexport class NodeHandler extends Evented {\n    constructor() {\n        super(...arguments);\n        this._nodeMap = new Map();\n    }\n    get(key) {\n        return this._nodeMap.get(key);\n    }\n    has(key) {\n        return this._nodeMap.has(key);\n    }\n    add(element, key) {\n        this._nodeMap.set(key, element);\n        this.emit({ type: key });\n    }\n    addRoot() {\n        this.emit({ type: NodeEventType.Widget });\n    }\n    addProjector() {\n        this.emit({ type: NodeEventType.Projector });\n    }\n    clear() {\n        this._nodeMap.clear();\n    }\n}\nexport default NodeHandler;\n//# sourceMappingURL=NodeHandler.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/NodeHandler.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/NodeHandler.mjs\n// module chunks = title-pane","import Promise from '../shim/Promise';\nimport Map from '../shim/Map';\nimport { Evented } from '../core/Evented';\n/**\n * Widget base type\n */\nexport const WIDGET_BASE_TYPE = '__widget_base_type';\n/**\n * Checks is the item is a subclass of WidgetBase (or a WidgetBase)\n *\n * @param item the item to check\n * @returns true/false indicating if the item is a WidgetBaseConstructor\n */\nexport function isWidgetBaseConstructor(item) {\n    return Boolean(item && item._type === WIDGET_BASE_TYPE);\n}\nexport function isWidgetConstructorDefaultExport(item) {\n    return Boolean(item &&\n        item.hasOwnProperty('__esModule') &&\n        item.hasOwnProperty('default') &&\n        isWidgetBaseConstructor(item.default));\n}\n/**\n * The Registry implementation\n */\nexport class Registry extends Evented {\n    /**\n     * Emit loaded event for registry label\n     */\n    emitLoadedEvent(widgetLabel, item) {\n        this.emit({\n            type: widgetLabel,\n            action: 'loaded',\n            item\n        });\n    }\n    define(label, item) {\n        if (this._widgetRegistry === undefined) {\n            this._widgetRegistry = new Map();\n        }\n        if (this._widgetRegistry.has(label)) {\n            throw new Error(`widget has already been registered for '${label.toString()}'`);\n        }\n        this._widgetRegistry.set(label, item);\n        if (item instanceof Promise) {\n            item.then((widgetCtor) => {\n                this._widgetRegistry.set(label, widgetCtor);\n                this.emitLoadedEvent(label, widgetCtor);\n                return widgetCtor;\n            }, (error) => {\n                throw error;\n            });\n        }\n        else if (isWidgetBaseConstructor(item)) {\n            this.emitLoadedEvent(label, item);\n        }\n    }\n    defineInjector(label, injectorFactory) {\n        if (this._injectorRegistry === undefined) {\n            this._injectorRegistry = new Map();\n        }\n        if (this._injectorRegistry.has(label)) {\n            throw new Error(`injector has already been registered for '${label.toString()}'`);\n        }\n        const invalidator = new Evented();\n        const injectorItem = {\n            injector: injectorFactory(() => invalidator.emit({ type: 'invalidate' })),\n            invalidator\n        };\n        this._injectorRegistry.set(label, injectorItem);\n        this.emitLoadedEvent(label, injectorItem);\n    }\n    get(label) {\n        if (!this._widgetRegistry || !this.has(label)) {\n            return null;\n        }\n        const item = this._widgetRegistry.get(label);\n        if (isWidgetBaseConstructor(item)) {\n            return item;\n        }\n        if (item instanceof Promise) {\n            return null;\n        }\n        const promise = item();\n        this._widgetRegistry.set(label, promise);\n        promise.then((widgetCtor) => {\n            if (isWidgetConstructorDefaultExport(widgetCtor)) {\n                widgetCtor = widgetCtor.default;\n            }\n            this._widgetRegistry.set(label, widgetCtor);\n            this.emitLoadedEvent(label, widgetCtor);\n            return widgetCtor;\n        }, (error) => {\n            throw error;\n        });\n        return null;\n    }\n    getInjector(label) {\n        if (!this._injectorRegistry || !this.hasInjector(label)) {\n            return null;\n        }\n        return this._injectorRegistry.get(label);\n    }\n    has(label) {\n        return Boolean(this._widgetRegistry && this._widgetRegistry.has(label));\n    }\n    hasInjector(label) {\n        return Boolean(this._injectorRegistry && this._injectorRegistry.has(label));\n    }\n}\nexport default Registry;\n//# sourceMappingURL=Registry.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/Registry.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/Registry.mjs\n// module chunks = title-pane","import { Map } from '../shim/Map';\nimport { Evented } from '../core/Evented';\nimport { Registry } from './Registry';\nexport class RegistryHandler extends Evented {\n    constructor() {\n        super();\n        this._registry = new Registry();\n        this._registryWidgetLabelMap = new Map();\n        this._registryInjectorLabelMap = new Map();\n        this.own(this._registry);\n        const destroy = () => {\n            if (this.baseRegistry) {\n                this._registryWidgetLabelMap.delete(this.baseRegistry);\n                this._registryInjectorLabelMap.delete(this.baseRegistry);\n                this.baseRegistry = undefined;\n            }\n        };\n        this.own({ destroy });\n    }\n    set base(baseRegistry) {\n        if (this.baseRegistry) {\n            this._registryWidgetLabelMap.delete(this.baseRegistry);\n            this._registryInjectorLabelMap.delete(this.baseRegistry);\n        }\n        this.baseRegistry = baseRegistry;\n    }\n    define(label, widget) {\n        this._registry.define(label, widget);\n    }\n    defineInjector(label, injector) {\n        this._registry.defineInjector(label, injector);\n    }\n    has(label) {\n        return this._registry.has(label) || Boolean(this.baseRegistry && this.baseRegistry.has(label));\n    }\n    hasInjector(label) {\n        return this._registry.hasInjector(label) || Boolean(this.baseRegistry && this.baseRegistry.hasInjector(label));\n    }\n    get(label, globalPrecedence = false) {\n        return this._get(label, globalPrecedence, 'get', this._registryWidgetLabelMap);\n    }\n    getInjector(label, globalPrecedence = false) {\n        return this._get(label, globalPrecedence, 'getInjector', this._registryInjectorLabelMap);\n    }\n    _get(label, globalPrecedence, getFunctionName, labelMap) {\n        const registries = globalPrecedence ? [this.baseRegistry, this._registry] : [this._registry, this.baseRegistry];\n        for (let i = 0; i < registries.length; i++) {\n            const registry = registries[i];\n            if (!registry) {\n                continue;\n            }\n            const item = registry[getFunctionName](label);\n            const registeredLabels = labelMap.get(registry) || [];\n            if (item) {\n                return item;\n            }\n            else if (registeredLabels.indexOf(label) === -1) {\n                const handle = registry.on(label, (event) => {\n                    if (event.action === 'loaded' &&\n                        this[getFunctionName](label, globalPrecedence) === event.item) {\n                        this.emit({ type: 'invalidate' });\n                    }\n                });\n                this.own(handle);\n                labelMap.set(registry, [...registeredLabels, label]);\n            }\n        }\n        return null;\n    }\n}\nexport default RegistryHandler;\n//# sourceMappingURL=RegistryHandler.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/RegistryHandler.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/RegistryHandler.mjs\n// module chunks = title-pane","import Map from '../shim/Map';\nimport WeakMap from '../shim/WeakMap';\nimport { v, VNODE, isVNode, isWNode } from './d';\nimport { auto } from './diff';\nimport RegistryHandler from './RegistryHandler';\nimport NodeHandler from './NodeHandler';\nimport { isWidgetBaseConstructor, WIDGET_BASE_TYPE } from './Registry';\nlet lazyWidgetId = 0;\nconst lazyWidgetIdMap = new WeakMap();\nconst decoratorMap = new Map();\nexport const widgetInstanceMap = new WeakMap();\nconst boundAuto = auto.bind(null);\nexport const noBind = '__dojo_no_bind';\nfunction toTextVNode(data) {\n    return {\n        tag: '',\n        properties: {},\n        children: undefined,\n        text: `${data}`,\n        type: VNODE\n    };\n}\nfunction isLazyDefine(item) {\n    return Boolean(item && item.label);\n}\n/**\n * Main widget base for all widgets to extend\n */\nexport class WidgetBase {\n    /**\n     * @constructor\n     */\n    constructor() {\n        /**\n         * Indicates if it is the initial set properties cycle\n         */\n        this._initialProperties = true;\n        /**\n         * Array of property keys considered changed from the previous set properties\n         */\n        this._changedPropertyKeys = [];\n        this._nodeHandler = new NodeHandler();\n        this._handles = [];\n        this._children = [];\n        this._decoratorCache = new Map();\n        this._properties = {};\n        this._boundRenderFunc = this.render.bind(this);\n        this._boundInvalidate = this.invalidate.bind(this);\n        widgetInstanceMap.set(this, {\n            dirty: true,\n            onAttach: () => {\n                this.onAttach();\n            },\n            onDetach: () => {\n                this.onDetach();\n                this.destroy();\n            },\n            nodeHandler: this._nodeHandler,\n            rendering: false,\n            inputProperties: {}\n        });\n        this.own({\n            destroy: () => {\n                widgetInstanceMap.delete(this);\n                this._nodeHandler.clear();\n                this._nodeHandler.destroy();\n            }\n        });\n        this._runAfterConstructors();\n    }\n    meta(MetaType) {\n        if (this._metaMap === undefined) {\n            this._metaMap = new Map();\n        }\n        let cached = this._metaMap.get(MetaType);\n        if (!cached) {\n            cached = new MetaType({\n                invalidate: this._boundInvalidate,\n                nodeHandler: this._nodeHandler,\n                bind: this\n            });\n            this.own(cached);\n            this._metaMap.set(MetaType, cached);\n        }\n        return cached;\n    }\n    onAttach() {\n        // Do nothing by default.\n    }\n    onDetach() {\n        // Do nothing by default.\n    }\n    get properties() {\n        return this._properties;\n    }\n    get changedPropertyKeys() {\n        return [...this._changedPropertyKeys];\n    }\n    __setProperties__(originalProperties, bind) {\n        const instanceData = widgetInstanceMap.get(this);\n        if (instanceData) {\n            instanceData.inputProperties = originalProperties;\n        }\n        const properties = this._runBeforeProperties(originalProperties);\n        const registeredDiffPropertyNames = this.getDecorator('registeredDiffProperty');\n        const changedPropertyKeys = [];\n        const propertyNames = Object.keys(properties);\n        if (this._initialProperties === false || registeredDiffPropertyNames.length !== 0) {\n            const allProperties = [...propertyNames, ...Object.keys(this._properties)];\n            const checkedProperties = [];\n            const diffPropertyResults = {};\n            let runReactions = false;\n            for (let i = 0; i < allProperties.length; i++) {\n                const propertyName = allProperties[i];\n                if (checkedProperties.indexOf(propertyName) !== -1) {\n                    continue;\n                }\n                checkedProperties.push(propertyName);\n                const previousProperty = this._properties[propertyName];\n                const newProperty = this._bindFunctionProperty(properties[propertyName], bind);\n                if (registeredDiffPropertyNames.indexOf(propertyName) !== -1) {\n                    runReactions = true;\n                    const diffFunctions = this.getDecorator(`diffProperty:${propertyName}`);\n                    for (let i = 0; i < diffFunctions.length; i++) {\n                        const result = diffFunctions[i](previousProperty, newProperty);\n                        if (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n                            changedPropertyKeys.push(propertyName);\n                        }\n                        if (propertyName in properties) {\n                            diffPropertyResults[propertyName] = result.value;\n                        }\n                    }\n                }\n                else {\n                    const result = boundAuto(previousProperty, newProperty);\n                    if (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n                        changedPropertyKeys.push(propertyName);\n                    }\n                    if (propertyName in properties) {\n                        diffPropertyResults[propertyName] = result.value;\n                    }\n                }\n            }\n            if (runReactions) {\n                const reactionFunctions = this.getDecorator('diffReaction');\n                const executedReactions = [];\n                reactionFunctions.forEach(({ reaction, propertyName }) => {\n                    const propertyChanged = changedPropertyKeys.indexOf(propertyName) !== -1;\n                    const reactionRun = executedReactions.indexOf(reaction) !== -1;\n                    if (propertyChanged && !reactionRun) {\n                        reaction.call(this, this._properties, diffPropertyResults);\n                        executedReactions.push(reaction);\n                    }\n                });\n            }\n            this._properties = diffPropertyResults;\n            this._changedPropertyKeys = changedPropertyKeys;\n        }\n        else {\n            this._initialProperties = false;\n            for (let i = 0; i < propertyNames.length; i++) {\n                const propertyName = propertyNames[i];\n                if (typeof properties[propertyName] === 'function') {\n                    properties[propertyName] = this._bindFunctionProperty(properties[propertyName], bind);\n                }\n                else {\n                    changedPropertyKeys.push(propertyName);\n                }\n            }\n            this._changedPropertyKeys = changedPropertyKeys;\n            this._properties = Object.assign({}, properties);\n        }\n        if (this._changedPropertyKeys.length > 0) {\n            this.invalidate();\n        }\n    }\n    get children() {\n        return this._children;\n    }\n    __setChildren__(children) {\n        if (this._children.length > 0 || children.length > 0) {\n            this._children = children;\n            this.invalidate();\n        }\n    }\n    _filterAndConvert(nodes) {\n        const isArray = Array.isArray(nodes);\n        const filteredNodes = Array.isArray(nodes) ? nodes : [nodes];\n        const convertedNodes = [];\n        for (let i = 0; i < filteredNodes.length; i++) {\n            const node = filteredNodes[i];\n            if (!node) {\n                continue;\n            }\n            if (typeof node === 'string') {\n                convertedNodes.push(toTextVNode(node));\n                continue;\n            }\n            if (isVNode(node) && node.deferredPropertiesCallback) {\n                const properties = node.deferredPropertiesCallback(false);\n                node.originalProperties = node.properties;\n                node.properties = Object.assign({}, properties, node.properties);\n            }\n            if (isWNode(node) && !isWidgetBaseConstructor(node.widgetConstructor)) {\n                if (typeof node.widgetConstructor === 'function') {\n                    let id = lazyWidgetIdMap.get(node.widgetConstructor);\n                    if (!id) {\n                        id = `__lazy_widget_${lazyWidgetId++}`;\n                        lazyWidgetIdMap.set(node.widgetConstructor, id);\n                        this.registry.define(id, node.widgetConstructor);\n                    }\n                    node.widgetConstructor = id;\n                }\n                else if (isLazyDefine(node.widgetConstructor)) {\n                    const { label, registryItem } = node.widgetConstructor;\n                    if (!this.registry.has(label)) {\n                        this.registry.define(label, registryItem);\n                    }\n                    node.widgetConstructor = label;\n                }\n                node.widgetConstructor =\n                    this.registry.get(node.widgetConstructor) || node.widgetConstructor;\n            }\n            if (!node.bind) {\n                node.bind = this;\n            }\n            convertedNodes.push(node);\n            if (node.children && node.children.length) {\n                node.children = this._filterAndConvert(node.children);\n            }\n        }\n        return isArray ? convertedNodes : convertedNodes[0];\n    }\n    __render__() {\n        const instanceData = widgetInstanceMap.get(this);\n        if (instanceData) {\n            instanceData.dirty = false;\n        }\n        const render = this._runBeforeRenders();\n        const dNode = this._filterAndConvert(this._runAfterRenders(render()));\n        this._nodeHandler.clear();\n        return dNode;\n    }\n    invalidate() {\n        const instanceData = widgetInstanceMap.get(this);\n        if (instanceData && instanceData.invalidate) {\n            instanceData.invalidate();\n        }\n    }\n    render() {\n        return v('div', {}, this.children);\n    }\n    /**\n     * Function to add decorators to WidgetBase\n     *\n     * @param decoratorKey The key of the decorator\n     * @param value The value of the decorator\n     */\n    addDecorator(decoratorKey, value) {\n        value = Array.isArray(value) ? value : [value];\n        if (this.hasOwnProperty('constructor')) {\n            let decoratorList = decoratorMap.get(this.constructor);\n            if (!decoratorList) {\n                decoratorList = new Map();\n                decoratorMap.set(this.constructor, decoratorList);\n            }\n            let specificDecoratorList = decoratorList.get(decoratorKey);\n            if (!specificDecoratorList) {\n                specificDecoratorList = [];\n                decoratorList.set(decoratorKey, specificDecoratorList);\n            }\n            specificDecoratorList.push(...value);\n        }\n        else {\n            const decorators = this.getDecorator(decoratorKey);\n            this._decoratorCache.set(decoratorKey, [...decorators, ...value]);\n        }\n    }\n    /**\n     * Function to build the list of decorators from the global decorator map.\n     *\n     * @param decoratorKey  The key of the decorator\n     * @return An array of decorator values\n     * @private\n     */\n    _buildDecoratorList(decoratorKey) {\n        const allDecorators = [];\n        let constructor = this.constructor;\n        while (constructor) {\n            const instanceMap = decoratorMap.get(constructor);\n            if (instanceMap) {\n                const decorators = instanceMap.get(decoratorKey);\n                if (decorators) {\n                    allDecorators.unshift(...decorators);\n                }\n            }\n            constructor = Object.getPrototypeOf(constructor);\n        }\n        return allDecorators;\n    }\n    /**\n     * Function to retrieve decorator values\n     *\n     * @param decoratorKey The key of the decorator\n     * @returns An array of decorator values\n     */\n    getDecorator(decoratorKey) {\n        let allDecorators = this._decoratorCache.get(decoratorKey);\n        if (allDecorators !== undefined) {\n            return allDecorators;\n        }\n        allDecorators = this._buildDecoratorList(decoratorKey);\n        this._decoratorCache.set(decoratorKey, allDecorators);\n        return allDecorators;\n    }\n    /**\n     * Binds unbound property functions to the specified `bind` property\n     *\n     * @param properties properties to check for functions\n     */\n    _bindFunctionProperty(property, bind) {\n        if (typeof property === 'function' && !property[noBind] && isWidgetBaseConstructor(property) === false) {\n            if (this._bindFunctionPropertyMap === undefined) {\n                this._bindFunctionPropertyMap = new WeakMap();\n            }\n            const bindInfo = this._bindFunctionPropertyMap.get(property) || {};\n            let { boundFunc, scope } = bindInfo;\n            if (boundFunc === undefined || scope !== bind) {\n                boundFunc = property.bind(bind);\n                this._bindFunctionPropertyMap.set(property, { boundFunc, scope: bind });\n            }\n            return boundFunc;\n        }\n        return property;\n    }\n    get registry() {\n        if (this._registry === undefined) {\n            this._registry = new RegistryHandler();\n            this.own(this._registry);\n            this.own(this._registry.on('invalidate', this._boundInvalidate));\n        }\n        return this._registry;\n    }\n    _runBeforeProperties(properties) {\n        const beforeProperties = this.getDecorator('beforeProperties');\n        if (beforeProperties.length > 0) {\n            return beforeProperties.reduce((properties, beforePropertiesFunction) => {\n                return Object.assign({}, properties, beforePropertiesFunction.call(this, properties));\n            }, Object.assign({}, properties));\n        }\n        return properties;\n    }\n    /**\n     * Run all registered before renders and return the updated render method\n     */\n    _runBeforeRenders() {\n        const beforeRenders = this.getDecorator('beforeRender');\n        if (beforeRenders.length > 0) {\n            return beforeRenders.reduce((render, beforeRenderFunction) => {\n                const updatedRender = beforeRenderFunction.call(this, render, this._properties, this._children);\n                if (!updatedRender) {\n                    console.warn('Render function not returned from beforeRender, using previous render');\n                    return render;\n                }\n                return updatedRender;\n            }, this._boundRenderFunc);\n        }\n        return this._boundRenderFunc;\n    }\n    /**\n     * Run all registered after renders and return the decorated DNodes\n     *\n     * @param dNode The DNodes to run through the after renders\n     */\n    _runAfterRenders(dNode) {\n        const afterRenders = this.getDecorator('afterRender');\n        if (afterRenders.length > 0) {\n            dNode = afterRenders.reduce((dNode, afterRenderFunction) => {\n                return afterRenderFunction.call(this, dNode);\n            }, dNode);\n        }\n        if (this._metaMap !== undefined) {\n            this._metaMap.forEach((meta) => {\n                meta.afterRender();\n            });\n        }\n        return dNode;\n    }\n    _runAfterConstructors() {\n        const afterConstructors = this.getDecorator('afterConstructor');\n        if (afterConstructors.length > 0) {\n            afterConstructors.forEach((afterConstructor) => afterConstructor.call(this));\n        }\n    }\n    own(handle) {\n        this._handles.push(handle);\n    }\n    destroy() {\n        while (this._handles.length > 0) {\n            const handle = this._handles.pop();\n            if (handle) {\n                handle.destroy();\n            }\n        }\n    }\n}\n/**\n * static identifier\n */\nWidgetBase._type = WIDGET_BASE_TYPE;\nexport default WidgetBase;\n//# sourceMappingURL=WidgetBase.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/WidgetBase.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/WidgetBase.mjs\n// module chunks = title-pane","let browserSpecificTransitionEndEventName = '';\nlet browserSpecificAnimationEndEventName = '';\nfunction determineBrowserStyleNames(element) {\n    if ('WebkitTransition' in element.style) {\n        browserSpecificTransitionEndEventName = 'webkitTransitionEnd';\n        browserSpecificAnimationEndEventName = 'webkitAnimationEnd';\n    }\n    else if ('transition' in element.style || 'MozTransition' in element.style) {\n        browserSpecificTransitionEndEventName = 'transitionend';\n        browserSpecificAnimationEndEventName = 'animationend';\n    }\n    else {\n        throw new Error('Your browser is not supported');\n    }\n}\nfunction initialize(element) {\n    if (browserSpecificAnimationEndEventName === '') {\n        determineBrowserStyleNames(element);\n    }\n}\nfunction runAndCleanUp(element, startAnimation, finishAnimation) {\n    initialize(element);\n    let finished = false;\n    let transitionEnd = function () {\n        if (!finished) {\n            finished = true;\n            element.removeEventListener(browserSpecificTransitionEndEventName, transitionEnd);\n            element.removeEventListener(browserSpecificAnimationEndEventName, transitionEnd);\n            finishAnimation();\n        }\n    };\n    startAnimation();\n    element.addEventListener(browserSpecificAnimationEndEventName, transitionEnd);\n    element.addEventListener(browserSpecificTransitionEndEventName, transitionEnd);\n}\nfunction exit(node, properties, exitAnimation, removeNode) {\n    const activeClass = properties.exitAnimationActive || `${exitAnimation}-active`;\n    runAndCleanUp(node, () => {\n        node.classList.add(exitAnimation);\n        requestAnimationFrame(function () {\n            node.classList.add(activeClass);\n        });\n    }, () => {\n        removeNode();\n    });\n}\nfunction enter(node, properties, enterAnimation) {\n    const activeClass = properties.enterAnimationActive || `${enterAnimation}-active`;\n    runAndCleanUp(node, () => {\n        node.classList.add(enterAnimation);\n        requestAnimationFrame(function () {\n            node.classList.add(activeClass);\n        });\n    }, () => {\n        node.classList.remove(enterAnimation);\n        node.classList.remove(activeClass);\n    });\n}\nexport default {\n    enter,\n    exit\n};\n//# sourceMappingURL=cssTransitions.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/animations/cssTransitions.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/animations/cssTransitions.mjs\n// module chunks = title-pane","import * as tslib_1 from \"tslib\";\n/**\n * The identifier for a WNode type\n */\nexport const WNODE = '__WNODE_TYPE';\n/**\n * The identifier for a VNode type\n */\nexport const VNODE = '__VNODE_TYPE';\n/**\n * The identifier for a VNode type created using dom()\n */\nexport const DOMVNODE = '__DOMVNODE_TYPE';\n/**\n * Helper function that returns true if the `DNode` is a `WNode` using the `type` property\n */\nexport function isWNode(child) {\n    return Boolean(child && typeof child !== 'string' && child.type === WNODE);\n}\n/**\n * Helper function that returns true if the `DNode` is a `VNode` using the `type` property\n */\nexport function isVNode(child) {\n    return Boolean(child && typeof child !== 'string' && (child.type === VNODE || child.type === DOMVNODE));\n}\n/**\n * Helper function that returns true if the `DNode` is a `VNode` created with `dom()` using the `type` property\n */\nexport function isDomVNode(child) {\n    return Boolean(child && typeof child !== 'string' && child.type === DOMVNODE);\n}\nexport function isElementNode(value) {\n    return !!value.tagName;\n}\nexport function decorate(dNodes, optionsOrModifier, predicate) {\n    let shallow = false;\n    let modifier;\n    if (typeof optionsOrModifier === 'function') {\n        modifier = optionsOrModifier;\n    }\n    else {\n        modifier = optionsOrModifier.modifier;\n        predicate = optionsOrModifier.predicate;\n        shallow = optionsOrModifier.shallow || false;\n    }\n    let nodes = Array.isArray(dNodes) ? [...dNodes] : [dNodes];\n    function breaker() {\n        nodes = [];\n    }\n    while (nodes.length) {\n        const node = nodes.shift();\n        if (node) {\n            if (!shallow && (isWNode(node) || isVNode(node)) && node.children) {\n                nodes = [...nodes, ...node.children];\n            }\n            if (!predicate || predicate(node)) {\n                modifier(node, breaker);\n            }\n        }\n    }\n    return dNodes;\n}\nexport function w(widgetConstructorOrNode, properties, children) {\n    if (isWNode(widgetConstructorOrNode)) {\n        properties = Object.assign({}, widgetConstructorOrNode.properties, properties);\n        children = children ? children : widgetConstructorOrNode.children;\n        widgetConstructorOrNode = widgetConstructorOrNode.widgetConstructor;\n    }\n    return {\n        children: children || [],\n        widgetConstructor: widgetConstructorOrNode,\n        properties,\n        type: WNODE\n    };\n}\nexport function v(tag, propertiesOrChildren = {}, children = undefined) {\n    let properties = propertiesOrChildren;\n    let deferredPropertiesCallback;\n    if (Array.isArray(propertiesOrChildren)) {\n        children = propertiesOrChildren;\n        properties = {};\n    }\n    if (typeof properties === 'function') {\n        deferredPropertiesCallback = properties;\n        properties = {};\n    }\n    if (isVNode(tag)) {\n        let { classes = [], styles = {} } = properties, newProperties = tslib_1.__rest(properties, [\"classes\", \"styles\"]);\n        let _a = tag.properties, { classes: nodeClasses = [], styles: nodeStyles = {} } = _a, nodeProperties = tslib_1.__rest(_a, [\"classes\", \"styles\"]);\n        nodeClasses = Array.isArray(nodeClasses) ? nodeClasses : [nodeClasses];\n        classes = Array.isArray(classes) ? classes : [classes];\n        styles = Object.assign({}, nodeStyles, styles);\n        properties = Object.assign({}, nodeProperties, newProperties, { classes: [...nodeClasses, ...classes], styles });\n        children = children ? children : tag.children;\n        tag = tag.tag;\n    }\n    return {\n        tag,\n        deferredPropertiesCallback,\n        originalProperties: {},\n        children,\n        properties,\n        type: VNODE\n    };\n}\n/**\n * Create a VNode for an existing DOM Node.\n */\nexport function dom({ node, attrs = {}, props = {}, on = {}, diffType = 'none', onAttach }, children) {\n    return {\n        tag: isElementNode(node) ? node.tagName.toLowerCase() : '',\n        properties: props,\n        attributes: attrs,\n        events: on,\n        children,\n        type: DOMVNODE,\n        domNode: node,\n        text: isElementNode(node) ? undefined : node.data,\n        diffType,\n        onAttach\n    };\n}\n//# sourceMappingURL=d.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/d.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/d.mjs\n// module chunks = title-pane","import { handleDecorator } from './handleDecorator';\nimport { beforeProperties } from './beforeProperties';\nexport function alwaysRender() {\n    return handleDecorator((target, propertyKey) => {\n        beforeProperties(function () {\n            this.invalidate();\n        })(target);\n    });\n}\nexport default alwaysRender;\n//# sourceMappingURL=alwaysRender.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/decorators/alwaysRender.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/decorators/alwaysRender.mjs\n// module chunks = title-pane","import { handleDecorator } from './handleDecorator';\nexport function beforeProperties(method) {\n    return handleDecorator((target, propertyKey) => {\n        target.addDecorator('beforeProperties', propertyKey ? target[propertyKey] : method);\n    });\n}\nexport default beforeProperties;\n//# sourceMappingURL=beforeProperties.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/decorators/beforeProperties.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/decorators/beforeProperties.mjs\n// module chunks = title-pane","import { CustomElementChildType } from '../registerCustomElement';\nimport Registry from '../Registry';\n/**\n * This Decorator is provided properties that define the behavior of a custom element, and\n * registers that custom element.\n */\nexport function customElement({ tag, properties = [], attributes = [], events = [], childType = CustomElementChildType.DOJO, registryFactory = () => new Registry() }) {\n    return function (target) {\n        target.prototype.__customElementDescriptor = {\n            tagName: tag,\n            attributes,\n            properties,\n            events,\n            childType,\n            registryFactory\n        };\n    };\n}\nexport default customElement;\n//# sourceMappingURL=customElement.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/decorators/customElement.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/decorators/customElement.mjs\n// module chunks = title-pane","import { handleDecorator } from './handleDecorator';\nimport { auto } from './../diff';\n/**\n * Decorator that can be used to register a function as a specific property diff\n *\n * @param propertyName  The name of the property of which the diff function is applied\n * @param diffType      The diff type, default is DiffType.AUTO.\n * @param diffFunction  A diff function to run if diffType if DiffType.CUSTOM\n */\nexport function diffProperty(propertyName, diffFunction = auto, reactionFunction) {\n    return handleDecorator((target, propertyKey) => {\n        target.addDecorator(`diffProperty:${propertyName}`, diffFunction.bind(null));\n        target.addDecorator('registeredDiffProperty', propertyName);\n        if (reactionFunction || propertyKey) {\n            target.addDecorator('diffReaction', {\n                propertyName,\n                reaction: propertyKey ? target[propertyKey] : reactionFunction\n            });\n        }\n    });\n}\nexport default diffProperty;\n//# sourceMappingURL=diffProperty.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/decorators/diffProperty.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/decorators/diffProperty.mjs\n// module chunks = title-pane","/**\n * Generic decorator handler to take care of whether or not the decorator was called at the class level\n * or the method level.\n *\n * @param handler\n */\nexport function handleDecorator(handler) {\n    return function (target, propertyKey, descriptor) {\n        if (typeof target === 'function') {\n            handler(target.prototype, undefined);\n        }\n        else {\n            handler(target, propertyKey);\n        }\n    };\n}\nexport default handleDecorator;\n//# sourceMappingURL=handleDecorator.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/decorators/handleDecorator.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/decorators/handleDecorator.mjs\n// module chunks = title-pane","import WeakMap from '../../shim/WeakMap';\nimport { handleDecorator } from './handleDecorator';\nimport { beforeProperties } from './beforeProperties';\n/**\n * Map of instances against registered injectors.\n */\nconst registeredInjectorsMap = new WeakMap();\n/**\n * Decorator retrieves an injector from an available registry using the name and\n * calls the `getProperties` function with the payload from the injector\n * and current properties with the the injected properties returned.\n *\n * @param InjectConfig the inject configuration\n */\nexport function inject({ name, getProperties }) {\n    return handleDecorator((target, propertyKey) => {\n        beforeProperties(function (properties) {\n            const injectorItem = this.registry.getInjector(name);\n            if (injectorItem) {\n                const { injector, invalidator } = injectorItem;\n                const registeredInjectors = registeredInjectorsMap.get(this) || [];\n                if (registeredInjectors.length === 0) {\n                    registeredInjectorsMap.set(this, registeredInjectors);\n                }\n                if (registeredInjectors.indexOf(injectorItem) === -1) {\n                    this.own(invalidator.on('invalidate', () => {\n                        this.invalidate();\n                    }));\n                    registeredInjectors.push(injectorItem);\n                }\n                return getProperties(injector(), properties);\n            }\n        })(target);\n    });\n}\nexport default inject;\n//# sourceMappingURL=inject.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/decorators/inject.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/decorators/inject.mjs\n// module chunks = title-pane","import { WIDGET_BASE_TYPE } from './Registry';\nfunction isObjectOrArray(value) {\n    return Object.prototype.toString.call(value) === '[object Object]' || Array.isArray(value);\n}\nexport function always(previousProperty, newProperty) {\n    return {\n        changed: true,\n        value: newProperty\n    };\n}\nexport function ignore(previousProperty, newProperty) {\n    return {\n        changed: false,\n        value: newProperty\n    };\n}\nexport function reference(previousProperty, newProperty) {\n    return {\n        changed: previousProperty !== newProperty,\n        value: newProperty\n    };\n}\nexport function shallow(previousProperty, newProperty) {\n    let changed = false;\n    const validOldProperty = previousProperty && isObjectOrArray(previousProperty);\n    const validNewProperty = newProperty && isObjectOrArray(newProperty);\n    if (!validOldProperty || !validNewProperty) {\n        return {\n            changed: true,\n            value: newProperty\n        };\n    }\n    const previousKeys = Object.keys(previousProperty);\n    const newKeys = Object.keys(newProperty);\n    if (previousKeys.length !== newKeys.length) {\n        changed = true;\n    }\n    else {\n        changed = newKeys.some((key) => {\n            return newProperty[key] !== previousProperty[key];\n        });\n    }\n    return {\n        changed,\n        value: newProperty\n    };\n}\nexport function auto(previousProperty, newProperty) {\n    let result;\n    if (typeof newProperty === 'function') {\n        if (newProperty._type === WIDGET_BASE_TYPE) {\n            result = reference(previousProperty, newProperty);\n        }\n        else {\n            result = ignore(previousProperty, newProperty);\n        }\n    }\n    else if (isObjectOrArray(newProperty)) {\n        result = shallow(previousProperty, newProperty);\n    }\n    else {\n        result = reference(previousProperty, newProperty);\n    }\n    return result;\n}\n//# sourceMappingURL=diff.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/diff.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/diff.mjs\n// module chunks = title-pane","import { Destroyable } from '../../core/Destroyable';\nimport Set from '../../shim/Set';\nexport class Base extends Destroyable {\n    constructor(properties) {\n        super();\n        this._requestedNodeKeys = new Set();\n        this._invalidate = properties.invalidate;\n        this.nodeHandler = properties.nodeHandler;\n        if (properties.bind) {\n            this._bind = properties.bind;\n        }\n    }\n    has(key) {\n        return this.nodeHandler.has(key);\n    }\n    getNode(key) {\n        const stringKey = `${key}`;\n        const node = this.nodeHandler.get(stringKey);\n        if (!node && !this._requestedNodeKeys.has(stringKey)) {\n            const handle = this.nodeHandler.on(stringKey, () => {\n                handle.destroy();\n                this._requestedNodeKeys.delete(stringKey);\n                this.invalidate();\n            });\n            this.own(handle);\n            this._requestedNodeKeys.add(stringKey);\n        }\n        return node;\n    }\n    invalidate() {\n        this._invalidate();\n    }\n    afterRender() {\n        // Do nothing by default.\n    }\n}\nexport default Base;\n//# sourceMappingURL=Base.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/meta/Base.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/meta/Base.mjs\n// module chunks = title-pane","import { Base } from './Base';\nimport { deepAssign } from '../../core/util';\nconst defaultDimensions = {\n    client: {\n        height: 0,\n        left: 0,\n        top: 0,\n        width: 0\n    },\n    offset: {\n        height: 0,\n        left: 0,\n        top: 0,\n        width: 0\n    },\n    position: {\n        bottom: 0,\n        left: 0,\n        right: 0,\n        top: 0\n    },\n    scroll: {\n        height: 0,\n        left: 0,\n        top: 0,\n        width: 0\n    },\n    size: {\n        width: 0,\n        height: 0\n    }\n};\nexport class Dimensions extends Base {\n    get(key) {\n        const node = this.getNode(key);\n        if (!node) {\n            return deepAssign({}, defaultDimensions);\n        }\n        const boundingDimensions = node.getBoundingClientRect();\n        return {\n            client: {\n                height: node.clientHeight,\n                left: node.clientLeft,\n                top: node.clientTop,\n                width: node.clientWidth\n            },\n            offset: {\n                height: node.offsetHeight,\n                left: node.offsetLeft,\n                top: node.offsetTop,\n                width: node.offsetWidth\n            },\n            position: {\n                bottom: boundingDimensions.bottom,\n                left: boundingDimensions.left,\n                right: boundingDimensions.right,\n                top: boundingDimensions.top\n            },\n            scroll: {\n                height: node.scrollHeight,\n                left: node.scrollLeft,\n                top: node.scrollTop,\n                width: node.scrollWidth\n            },\n            size: {\n                width: boundingDimensions.width,\n                height: boundingDimensions.height\n            }\n        };\n    }\n}\nexport default Dimensions;\n//# sourceMappingURL=Dimensions.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/meta/Dimensions.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/meta/Dimensions.mjs\n// module chunks = title-pane","import * as tslib_1 from \"tslib\";\nimport { diffProperty } from './../decorators/diffProperty';\nfunction diffFocus(previousProperty, newProperty) {\n    const result = newProperty && newProperty();\n    return {\n        changed: result,\n        value: newProperty\n    };\n}\nexport function FocusMixin(Base) {\n    class Focus extends Base {\n        constructor() {\n            super(...arguments);\n            this._currentToken = 0;\n            this._previousToken = 0;\n            this.shouldFocus = () => {\n                const result = this._currentToken !== this._previousToken;\n                this._previousToken = this._currentToken;\n                return result;\n            };\n        }\n        isFocusedReaction() {\n            this._currentToken++;\n        }\n        focus() {\n            this._currentToken++;\n            this.invalidate();\n        }\n    }\n    tslib_1.__decorate([\n        diffProperty('focus', diffFocus)\n    ], Focus.prototype, \"isFocusedReaction\", null);\n    return Focus;\n}\nexport default FocusMixin;\n//# sourceMappingURL=Focus.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/mixins/Focus.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/mixins/Focus.mjs\n// module chunks = title-pane","import * as tslib_1 from \"tslib\";\nimport { Injector } from './../Injector';\nimport { inject } from './../decorators/inject';\nimport { handleDecorator } from './../decorators/handleDecorator';\nimport { diffProperty } from './../decorators/diffProperty';\nimport { shallow } from './../diff';\nconst THEME_KEY = ' _key';\nexport const INJECTED_THEME_KEY = '__theme_injector';\n/**\n * Decorator for base css classes\n */\nexport function theme(theme) {\n    return handleDecorator((target) => {\n        target.addDecorator('baseThemeClasses', theme);\n    });\n}\n/**\n * Creates a reverse lookup for the classes passed in via the `theme` function.\n *\n * @param classes The baseClasses object\n * @requires\n */\nfunction createThemeClassesLookup(classes) {\n    return classes.reduce((currentClassNames, baseClass) => {\n        Object.keys(baseClass).forEach((key) => {\n            currentClassNames[baseClass[key]] = key;\n        });\n        return currentClassNames;\n    }, {});\n}\n/**\n * Convenience function that is given a theme and an optional registry, the theme\n * injector is defined against the registry, returning the theme.\n *\n * @param theme the theme to set\n * @param themeRegistry registry to define the theme injector against. Defaults\n * to the global registry\n *\n * @returns the theme injector used to set the theme\n */\nexport function registerThemeInjector(theme, themeRegistry) {\n    const themeInjector = new Injector(theme);\n    themeRegistry.defineInjector(INJECTED_THEME_KEY, (invalidator) => {\n        themeInjector.setInvalidator(invalidator);\n        return () => themeInjector.get();\n    });\n    return themeInjector;\n}\n/**\n * Function that returns a class decorated with with Themed functionality\n */\nexport function ThemedMixin(Base) {\n    let Themed = class Themed extends Base {\n        constructor() {\n            super(...arguments);\n            /**\n             * Registered base theme keys\n             */\n            this._registeredBaseThemeKeys = [];\n            /**\n             * Indicates if classes meta data need to be calculated.\n             */\n            this._recalculateClasses = true;\n            /**\n             * Loaded theme\n             */\n            this._theme = {};\n        }\n        theme(classes) {\n            if (this._recalculateClasses) {\n                this._recalculateThemeClasses();\n            }\n            if (Array.isArray(classes)) {\n                return classes.map((className) => this._getThemeClass(className));\n            }\n            return this._getThemeClass(classes);\n        }\n        /**\n         * Function fired when `theme` or `extraClasses` are changed.\n         */\n        onPropertiesChanged() {\n            this._recalculateClasses = true;\n        }\n        _getThemeClass(className) {\n            if (className === undefined || className === null) {\n                return className;\n            }\n            const extraClasses = this.properties.extraClasses || {};\n            const themeClassName = this._baseThemeClassesReverseLookup[className];\n            let resultClassNames = [];\n            if (!themeClassName) {\n                console.warn(`Class name: '${className}' not found in theme`);\n                return null;\n            }\n            if (extraClasses[themeClassName]) {\n                resultClassNames.push(extraClasses[themeClassName]);\n            }\n            if (this._theme[themeClassName]) {\n                resultClassNames.push(this._theme[themeClassName]);\n            }\n            else {\n                resultClassNames.push(this._registeredBaseTheme[themeClassName]);\n            }\n            return resultClassNames.join(' ');\n        }\n        _recalculateThemeClasses() {\n            const { theme = {} } = this.properties;\n            if (!this._registeredBaseTheme) {\n                const baseThemes = this.getDecorator('baseThemeClasses');\n                if (baseThemes.length === 0) {\n                    console.warn('A base theme has not been provided to this widget. Please use the @theme decorator to add a theme.');\n                }\n                this._registeredBaseTheme = baseThemes.reduce((finalBaseTheme, baseTheme) => {\n                    const _a = THEME_KEY, key = baseTheme[_a], classes = tslib_1.__rest(baseTheme, [typeof _a === \"symbol\" ? _a : _a + \"\"]);\n                    this._registeredBaseThemeKeys.push(key);\n                    return Object.assign({}, finalBaseTheme, classes);\n                }, {});\n                this._baseThemeClassesReverseLookup = createThemeClassesLookup(baseThemes);\n            }\n            this._theme = this._registeredBaseThemeKeys.reduce((baseTheme, themeKey) => {\n                return Object.assign({}, baseTheme, theme[themeKey]);\n            }, {});\n            this._recalculateClasses = false;\n        }\n    };\n    tslib_1.__decorate([\n        diffProperty('theme', shallow),\n        diffProperty('extraClasses', shallow)\n    ], Themed.prototype, \"onPropertiesChanged\", null);\n    Themed = tslib_1.__decorate([\n        inject({\n            name: INJECTED_THEME_KEY,\n            getProperties: (theme, properties) => {\n                if (!properties.theme) {\n                    return { theme };\n                }\n                return {};\n            }\n        })\n    ], Themed);\n    return Themed;\n}\nexport default ThemedMixin;\n//# sourceMappingURL=Themed.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/mixins/Themed.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/mixins/Themed.mjs\n// module chunks = title-pane","import * as tslib_1 from \"tslib\";\nimport { WidgetBase, noBind } from './WidgetBase';\nimport { renderer } from './vdom';\nimport { from } from '../shim/array';\nimport { w, dom } from './d';\nimport global from '../shim/global';\nimport { registerThemeInjector } from './mixins/Themed';\nimport { alwaysRender } from './decorators/alwaysRender';\nexport var CustomElementChildType;\n(function (CustomElementChildType) {\n    CustomElementChildType[\"DOJO\"] = \"DOJO\";\n    CustomElementChildType[\"NODE\"] = \"NODE\";\n    CustomElementChildType[\"TEXT\"] = \"TEXT\";\n})(CustomElementChildType || (CustomElementChildType = {}));\nexport function DomToWidgetWrapper(domNode) {\n    let DomToWidgetWrapper = class DomToWidgetWrapper extends WidgetBase {\n        render() {\n            const properties = Object.keys(this.properties).reduce((props, key) => {\n                const value = this.properties[key];\n                if (key.indexOf('on') === 0) {\n                    key = `__${key}`;\n                }\n                props[key] = value;\n                return props;\n            }, {});\n            return dom({ node: domNode, props: properties, diffType: 'dom' });\n        }\n        static get domNode() {\n            return domNode;\n        }\n    };\n    DomToWidgetWrapper = tslib_1.__decorate([\n        alwaysRender()\n    ], DomToWidgetWrapper);\n    return DomToWidgetWrapper;\n}\nexport function create(descriptor, WidgetConstructor) {\n    const { attributes, childType, registryFactory } = descriptor;\n    const attributeMap = {};\n    attributes.forEach((propertyName) => {\n        const attributeName = propertyName.toLowerCase();\n        attributeMap[attributeName] = propertyName;\n    });\n    return class extends HTMLElement {\n        constructor() {\n            super(...arguments);\n            this._properties = {};\n            this._children = [];\n            this._eventProperties = {};\n            this._initialised = false;\n        }\n        connectedCallback() {\n            if (this._initialised) {\n                return;\n            }\n            const domProperties = {};\n            const { attributes, properties, events } = descriptor;\n            this._properties = Object.assign({}, this._properties, this._attributesToProperties(attributes));\n            [...attributes, ...properties].forEach((propertyName) => {\n                const value = this[propertyName];\n                const filteredPropertyName = propertyName.replace(/^on/, '__');\n                if (value !== undefined) {\n                    this._properties[propertyName] = value;\n                }\n                if (filteredPropertyName !== propertyName) {\n                    domProperties[filteredPropertyName] = {\n                        get: () => this._getProperty(propertyName),\n                        set: (value) => this._setProperty(propertyName, value)\n                    };\n                }\n                domProperties[propertyName] = {\n                    get: () => this._getProperty(propertyName),\n                    set: (value) => this._setProperty(propertyName, value)\n                };\n            });\n            events.forEach((propertyName) => {\n                const eventName = propertyName.replace(/^on/, '').toLowerCase();\n                const filteredPropertyName = propertyName.replace(/^on/, '__on');\n                domProperties[filteredPropertyName] = {\n                    get: () => this._getEventProperty(propertyName),\n                    set: (value) => this._setEventProperty(propertyName, value)\n                };\n                this._eventProperties[propertyName] = undefined;\n                this._properties[propertyName] = (...args) => {\n                    const eventCallback = this._getEventProperty(propertyName);\n                    if (typeof eventCallback === 'function') {\n                        eventCallback(...args);\n                    }\n                    this.dispatchEvent(new CustomEvent(eventName, {\n                        bubbles: false,\n                        detail: args\n                    }));\n                };\n            });\n            Object.defineProperties(this, domProperties);\n            const children = childType === CustomElementChildType.TEXT ? this.childNodes : this.children;\n            from(children).forEach((childNode) => {\n                if (childType === CustomElementChildType.DOJO) {\n                    childNode.addEventListener('dojo-ce-render', () => this._render());\n                    childNode.addEventListener('dojo-ce-connected', () => this._render());\n                    this._children.push(DomToWidgetWrapper(childNode));\n                }\n                else {\n                    this._children.push(dom({ node: childNode, diffType: 'dom' }));\n                }\n            });\n            this.addEventListener('dojo-ce-connected', (e) => this._childConnected(e));\n            const widgetProperties = this._properties;\n            const renderChildren = () => this.__children__();\n            const Wrapper = class extends WidgetBase {\n                render() {\n                    return w(WidgetConstructor, widgetProperties, renderChildren());\n                }\n            };\n            const registry = registryFactory();\n            const themeContext = registerThemeInjector(this._getTheme(), registry);\n            global.addEventListener('dojo-theme-set', () => themeContext.set(this._getTheme()));\n            const r = renderer(() => w(Wrapper, {}));\n            this._renderer = r;\n            r.mount({ domNode: this, merge: false, registry });\n            this._initialised = true;\n            this.dispatchEvent(new CustomEvent('dojo-ce-connected', {\n                bubbles: true,\n                detail: this\n            }));\n        }\n        _getTheme() {\n            if (global && global.dojoce && global.dojoce.theme) {\n                return global.dojoce.themes[global.dojoce.theme];\n            }\n        }\n        _childConnected(e) {\n            const node = e.detail;\n            if (node.parentNode === this) {\n                const exists = this._children.some((child) => child.domNode === node);\n                if (!exists) {\n                    node.addEventListener('dojo-ce-render', () => this._render());\n                    this._children.push(DomToWidgetWrapper(node));\n                    this._render();\n                }\n            }\n        }\n        _render() {\n            if (this._renderer) {\n                this._renderer.invalidate();\n                this.dispatchEvent(new CustomEvent('dojo-ce-render', {\n                    bubbles: false,\n                    detail: this\n                }));\n            }\n        }\n        __properties__() {\n            return Object.assign({}, this._properties, this._eventProperties);\n        }\n        __children__() {\n            if (childType === CustomElementChildType.DOJO) {\n                return this._children.filter((Child) => Child.domNode.isWidget).map((Child) => {\n                    const { domNode } = Child;\n                    return w(Child, Object.assign({}, domNode.__properties__()), [...domNode.__children__()]);\n                });\n            }\n            else {\n                return this._children;\n            }\n        }\n        attributeChangedCallback(name, oldValue, value) {\n            const propertyName = attributeMap[name];\n            this._setProperty(propertyName, value);\n        }\n        _setEventProperty(propertyName, value) {\n            this._eventProperties[propertyName] = value;\n        }\n        _getEventProperty(propertyName) {\n            return this._eventProperties[propertyName];\n        }\n        _setProperty(propertyName, value) {\n            if (typeof value === 'function') {\n                value[noBind] = true;\n            }\n            this._properties[propertyName] = value;\n            this._render();\n        }\n        _getProperty(propertyName) {\n            return this._properties[propertyName];\n        }\n        _attributesToProperties(attributes) {\n            return attributes.reduce((properties, propertyName) => {\n                const attributeName = propertyName.toLowerCase();\n                const value = this.getAttribute(attributeName);\n                if (value !== null) {\n                    properties[propertyName] = value;\n                }\n                return properties;\n            }, {});\n        }\n        static get observedAttributes() {\n            return Object.keys(attributeMap);\n        }\n        get isWidget() {\n            return true;\n        }\n    };\n}\nexport function register(WidgetConstructor) {\n    const descriptor = WidgetConstructor.prototype && WidgetConstructor.prototype.__customElementDescriptor;\n    if (!descriptor) {\n        throw new Error('Cannot get descriptor for Custom Element, have you added the @customElement decorator to your Widget?');\n    }\n    global.customElements.define(descriptor.tagName, create(descriptor, WidgetConstructor));\n}\nexport default register;\n//# sourceMappingURL=registerCustomElement.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/registerCustomElement.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/registerCustomElement.mjs\n// module chunks = title-pane","import global from '../shim/global';\nimport has from '../has/has';\nimport { WeakMap } from '../shim/WeakMap';\nimport transitionStrategy from './animations/cssTransitions';\nimport { isVNode, isWNode, WNODE, v, isDomVNode, w } from './d';\nimport { isWidgetBaseConstructor } from './Registry';\nimport { WidgetBase, widgetInstanceMap } from './WidgetBase';\nconst EMPTY_ARRAY = [];\nconst nodeOperations = ['focus', 'blur', 'scrollIntoView', 'click'];\nconst NAMESPACE_W3 = 'http://www.w3.org/';\nconst NAMESPACE_SVG = NAMESPACE_W3 + '2000/svg';\nconst NAMESPACE_XLINK = NAMESPACE_W3 + '1999/xlink';\nfunction isWNodeWrapper(child) {\n    return child && isWNode(child.node);\n}\nfunction isVNodeWrapper(child) {\n    return !!child && isVNode(child.node);\n}\nfunction isAttachApplication(value) {\n    return !!value.type;\n}\nfunction updateAttributes(domNode, previousAttributes, attributes, namespace) {\n    const attrNames = Object.keys(attributes);\n    const attrCount = attrNames.length;\n    for (let i = 0; i < attrCount; i++) {\n        const attrName = attrNames[i];\n        const attrValue = attributes[attrName];\n        const previousAttrValue = previousAttributes[attrName];\n        if (attrValue !== previousAttrValue) {\n            updateAttribute(domNode, attrName, attrValue, namespace);\n        }\n    }\n}\nfunction buildPreviousProperties(domNode, current, next) {\n    const { node: { diffType, properties, attributes } } = current;\n    if (!diffType || diffType === 'vdom') {\n        return {\n            properties: current.node.properties,\n            attributes: current.node.attributes,\n            events: current.node.events\n        };\n    }\n    else if (diffType === 'none') {\n        return { properties: {}, attributes: current.node.attributes ? {} : undefined, events: current.node.events };\n    }\n    let newProperties = {\n        properties: {}\n    };\n    if (attributes) {\n        newProperties.attributes = {};\n        newProperties.events = current.node.events;\n        Object.keys(properties).forEach((propName) => {\n            newProperties.properties[propName] = domNode[propName];\n        });\n        Object.keys(attributes).forEach((attrName) => {\n            newProperties.attributes[attrName] = domNode.getAttribute(attrName);\n        });\n        return newProperties;\n    }\n    newProperties.properties = Object.keys(properties).reduce((props, property) => {\n        props[property] = domNode.getAttribute(property) || domNode[property];\n        return props;\n    }, {});\n    return newProperties;\n}\nfunction checkDistinguishable(wrappers, index, parentWNodeWrapper) {\n    const wrapperToCheck = wrappers[index];\n    if (isVNodeWrapper(wrapperToCheck) && !wrapperToCheck.node.tag) {\n        return;\n    }\n    const { key } = wrapperToCheck.node.properties;\n    let parentName = 'unknown';\n    if (parentWNodeWrapper) {\n        const { node: { widgetConstructor } } = parentWNodeWrapper;\n        parentName = widgetConstructor.name || 'unknown';\n    }\n    if (key === undefined || key === null) {\n        for (let i = 0; i < wrappers.length; i++) {\n            if (i !== index) {\n                const wrapper = wrappers[i];\n                if (same(wrapper, wrapperToCheck)) {\n                    let nodeIdentifier;\n                    if (isWNodeWrapper(wrapper)) {\n                        nodeIdentifier = wrapper.node.widgetConstructor.name || 'unknown';\n                    }\n                    else {\n                        nodeIdentifier = wrapper.node.tag;\n                    }\n                    console.warn(`A widget (${parentName}) has had a child added or removed, but they were not able to uniquely identified. It is recommended to provide a unique 'key' property when using the same widget or element (${nodeIdentifier}) multiple times as siblings`);\n                    break;\n                }\n            }\n        }\n    }\n}\nfunction same(dnode1, dnode2) {\n    if (isVNodeWrapper(dnode1) && isVNodeWrapper(dnode2)) {\n        if (isDomVNode(dnode1.node) && isDomVNode(dnode2.node)) {\n            if (dnode1.node.domNode !== dnode2.node.domNode) {\n                return false;\n            }\n        }\n        if (dnode1.node.tag !== dnode2.node.tag) {\n            return false;\n        }\n        if (dnode1.node.properties.key !== dnode2.node.properties.key) {\n            return false;\n        }\n        return true;\n    }\n    else if (isWNodeWrapper(dnode1) && isWNodeWrapper(dnode2)) {\n        if (dnode1.instance === undefined && typeof dnode2.node.widgetConstructor === 'string') {\n            return false;\n        }\n        if (dnode1.node.widgetConstructor !== dnode2.node.widgetConstructor) {\n            return false;\n        }\n        if (dnode1.node.properties.key !== dnode2.node.properties.key) {\n            return false;\n        }\n        return true;\n    }\n    return false;\n}\nfunction findIndexOfChild(children, sameAs, start) {\n    for (let i = start; i < children.length; i++) {\n        if (same(children[i], sameAs)) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction createClassPropValue(classes = []) {\n    classes = Array.isArray(classes) ? classes : [classes];\n    return classes.join(' ').trim();\n}\nfunction updateAttribute(domNode, attrName, attrValue, namespace) {\n    if (namespace === NAMESPACE_SVG && attrName === 'href' && attrValue) {\n        domNode.setAttributeNS(NAMESPACE_XLINK, attrName, attrValue);\n    }\n    else if ((attrName === 'role' && attrValue === '') || attrValue === undefined) {\n        domNode.removeAttribute(attrName);\n    }\n    else {\n        domNode.setAttribute(attrName, attrValue);\n    }\n}\nfunction runEnterAnimation(next, transitions) {\n    const { domNode, node: { properties }, node: { properties: { enterAnimation } } } = next;\n    if (enterAnimation) {\n        if (typeof enterAnimation === 'function') {\n            return enterAnimation(domNode, properties);\n        }\n        transitions.enter(domNode, properties, enterAnimation);\n    }\n}\nfunction runExitAnimation(current, transitions) {\n    const { domNode, node: { properties }, node: { properties: { exitAnimation } } } = current;\n    const removeDomNode = () => {\n        domNode && domNode.parentNode && domNode.parentNode.removeChild(domNode);\n        current.domNode = undefined;\n    };\n    if (typeof exitAnimation === 'function') {\n        return exitAnimation(domNode, removeDomNode, properties);\n    }\n    transitions.exit(domNode, properties, exitAnimation, removeDomNode);\n}\nfunction arrayFrom(arr) {\n    return Array.prototype.slice.call(arr);\n}\nfunction wrapVNodes(nodes) {\n    return class extends WidgetBase {\n        render() {\n            return nodes;\n        }\n    };\n}\nexport function renderer(renderer) {\n    let _mountOptions = {\n        sync: false,\n        merge: true,\n        transition: transitionStrategy,\n        domNode: global.document.body,\n        registry: null\n    };\n    let _invalidationQueue = [];\n    let _processQueue = [];\n    let _applicationQueue = [];\n    let _eventMap = new WeakMap();\n    let _instanceToWrapperMap = new WeakMap();\n    let _parentWrapperMap = new WeakMap();\n    let _wrapperSiblingMap = new WeakMap();\n    let _renderScheduled;\n    let _afterRenderCallbacks = [];\n    let _deferredRenderCallbacks = [];\n    let parentInvalidate;\n    function nodeOperation(propName, propValue, previousValue, domNode) {\n        let result = propValue && !previousValue;\n        if (typeof propValue === 'function') {\n            result = propValue();\n        }\n        if (result === true) {\n            _afterRenderCallbacks.push(() => {\n                domNode[propName]();\n            });\n        }\n    }\n    function updateEvent(domNode, eventName, currentValue, bind, previousValue) {\n        if (previousValue) {\n            const previousEvent = _eventMap.get(previousValue);\n            domNode.removeEventListener(eventName, previousEvent);\n        }\n        let callback = currentValue.bind(bind);\n        if (eventName === 'input') {\n            callback = function (evt) {\n                currentValue.call(this, evt);\n                evt.target['oninput-value'] = evt.target.value;\n            }.bind(bind);\n        }\n        domNode.addEventListener(eventName, callback);\n        _eventMap.set(currentValue, callback);\n    }\n    function removeOrphanedEvents(domNode, previousProperties, properties, onlyEvents = false) {\n        Object.keys(previousProperties).forEach((propName) => {\n            const isEvent = propName.substr(0, 2) === 'on' || onlyEvents;\n            const eventName = onlyEvents ? propName : propName.substr(2);\n            if (isEvent && !properties[propName]) {\n                const eventCallback = _eventMap.get(previousProperties[propName]);\n                if (eventCallback) {\n                    domNode.removeEventListener(eventName, eventCallback);\n                }\n            }\n        });\n    }\n    function renderedToWrapper(rendered, parent, currentParent) {\n        const wrappedRendered = [];\n        const hasParentWNode = isWNodeWrapper(parent);\n        const currentParentLength = isVNodeWrapper(currentParent) && (currentParent.childrenWrappers || []).length > 1;\n        const requiresInsertBefore = ((parent.requiresInsertBefore || parent.hasPreviousSiblings !== false) && hasParentWNode) ||\n            currentParentLength;\n        let previousItem;\n        for (let i = 0; i < rendered.length; i++) {\n            const renderedItem = rendered[i];\n            const wrapper = {\n                node: renderedItem,\n                depth: parent.depth + 1,\n                requiresInsertBefore,\n                hasParentWNode,\n                namespace: parent.namespace\n            };\n            if (isVNode(renderedItem) && renderedItem.properties.exitAnimation) {\n                parent.hasAnimations = true;\n                let nextParent = _parentWrapperMap.get(parent);\n                while (nextParent) {\n                    if (nextParent.hasAnimations) {\n                        break;\n                    }\n                    nextParent.hasAnimations = true;\n                    nextParent = _parentWrapperMap.get(nextParent);\n                }\n            }\n            _parentWrapperMap.set(wrapper, parent);\n            if (previousItem) {\n                _wrapperSiblingMap.set(previousItem, wrapper);\n            }\n            wrappedRendered.push(wrapper);\n            previousItem = wrapper;\n        }\n        return wrappedRendered;\n    }\n    function findParentWNodeWrapper(currentNode) {\n        let parentWNodeWrapper;\n        let parentWrapper = _parentWrapperMap.get(currentNode);\n        while (!parentWNodeWrapper && parentWrapper) {\n            if (!parentWNodeWrapper && isWNodeWrapper(parentWrapper)) {\n                parentWNodeWrapper = parentWrapper;\n            }\n            parentWrapper = _parentWrapperMap.get(parentWrapper);\n        }\n        return parentWNodeWrapper;\n    }\n    function findParentDomNode(currentNode) {\n        let parentDomNode;\n        let parentWrapper = _parentWrapperMap.get(currentNode);\n        while (!parentDomNode && parentWrapper) {\n            if (!parentDomNode && isVNodeWrapper(parentWrapper) && parentWrapper.domNode) {\n                parentDomNode = parentWrapper.domNode;\n            }\n            parentWrapper = _parentWrapperMap.get(parentWrapper);\n        }\n        return parentDomNode;\n    }\n    function runDeferredProperties(next) {\n        if (next.node.deferredPropertiesCallback) {\n            const properties = next.node.properties;\n            next.node.properties = Object.assign({}, next.node.deferredPropertiesCallback(true), next.node.originalProperties);\n            _afterRenderCallbacks.push(() => {\n                processProperties(next, { properties });\n            });\n        }\n    }\n    function findInsertBefore(next) {\n        let insertBefore = null;\n        let searchNode = next;\n        while (!insertBefore) {\n            const nextSibling = _wrapperSiblingMap.get(searchNode);\n            if (nextSibling) {\n                if (isVNodeWrapper(nextSibling)) {\n                    if (nextSibling.domNode && nextSibling.domNode.parentNode) {\n                        insertBefore = nextSibling.domNode;\n                        break;\n                    }\n                    searchNode = nextSibling;\n                    continue;\n                }\n                if (nextSibling.domNode && nextSibling.domNode.parentNode) {\n                    insertBefore = nextSibling.domNode;\n                    break;\n                }\n                searchNode = nextSibling;\n                continue;\n            }\n            searchNode = _parentWrapperMap.get(searchNode);\n            if (!searchNode || isVNodeWrapper(searchNode)) {\n                break;\n            }\n        }\n        return insertBefore;\n    }\n    function setProperties(domNode, currentProperties = {}, nextWrapper, includesEventsAndAttributes = true) {\n        const propNames = Object.keys(nextWrapper.node.properties);\n        const propCount = propNames.length;\n        if (propNames.indexOf('classes') === -1 && currentProperties.classes) {\n            domNode.removeAttribute('class');\n        }\n        includesEventsAndAttributes && removeOrphanedEvents(domNode, currentProperties, nextWrapper.node.properties);\n        for (let i = 0; i < propCount; i++) {\n            const propName = propNames[i];\n            let propValue = nextWrapper.node.properties[propName];\n            const previousValue = currentProperties[propName];\n            if (propName === 'classes') {\n                const previousClassString = createClassPropValue(previousValue);\n                let currentClassString = createClassPropValue(propValue);\n                if (previousClassString !== currentClassString) {\n                    if (currentClassString) {\n                        if (nextWrapper.merged) {\n                            const domClasses = (domNode.getAttribute('class') || '').split(' ');\n                            for (let i = 0; i < domClasses.length; i++) {\n                                if (currentClassString.indexOf(domClasses[i]) === -1) {\n                                    currentClassString = `${domClasses[i]} ${currentClassString}`;\n                                }\n                            }\n                        }\n                        domNode.setAttribute('class', currentClassString);\n                    }\n                    else {\n                        domNode.removeAttribute('class');\n                    }\n                }\n            }\n            else if (nodeOperations.indexOf(propName) !== -1) {\n                nodeOperation(propName, propValue, previousValue, domNode);\n            }\n            else if (propName === 'styles') {\n                const styleNames = Object.keys(propValue);\n                const styleCount = styleNames.length;\n                for (let j = 0; j < styleCount; j++) {\n                    const styleName = styleNames[j];\n                    const newStyleValue = propValue[styleName];\n                    const oldStyleValue = previousValue && previousValue[styleName];\n                    if (newStyleValue === oldStyleValue) {\n                        continue;\n                    }\n                    domNode.style[styleName] = newStyleValue || '';\n                }\n            }\n            else {\n                if (!propValue && typeof previousValue === 'string') {\n                    propValue = '';\n                }\n                if (propName === 'value') {\n                    const domValue = domNode[propName];\n                    if (domValue !== propValue &&\n                        (domNode['oninput-value']\n                            ? domValue === domNode['oninput-value']\n                            : propValue !== previousValue)) {\n                        domNode[propName] = propValue;\n                        domNode['oninput-value'] = undefined;\n                    }\n                }\n                else if (propName !== 'key' && propValue !== previousValue) {\n                    const type = typeof propValue;\n                    if (type === 'function' && propName.lastIndexOf('on', 0) === 0 && includesEventsAndAttributes) {\n                        updateEvent(domNode, propName.substr(2), propValue, nextWrapper.node.bind, previousValue);\n                    }\n                    else if (type === 'string' && propName !== 'innerHTML' && includesEventsAndAttributes) {\n                        updateAttribute(domNode, propName, propValue, nextWrapper.namespace);\n                    }\n                    else if (propName === 'scrollLeft' || propName === 'scrollTop') {\n                        if (domNode[propName] !== propValue) {\n                            domNode[propName] = propValue;\n                        }\n                    }\n                    else {\n                        domNode[propName] = propValue;\n                    }\n                }\n            }\n        }\n    }\n    function runDeferredRenderCallbacks() {\n        const { sync } = _mountOptions;\n        const callbacks = _deferredRenderCallbacks;\n        _deferredRenderCallbacks = [];\n        if (callbacks.length) {\n            const run = () => {\n                let callback;\n                while ((callback = callbacks.shift())) {\n                    callback();\n                }\n            };\n            if (sync) {\n                run();\n            }\n            else {\n                global.requestAnimationFrame(run);\n            }\n        }\n    }\n    function runAfterRenderCallbacks() {\n        const { sync } = _mountOptions;\n        const callbacks = _afterRenderCallbacks;\n        _afterRenderCallbacks = [];\n        if (callbacks.length) {\n            const run = () => {\n                let callback;\n                while ((callback = callbacks.shift())) {\n                    callback();\n                }\n            };\n            if (sync) {\n                run();\n            }\n            else {\n                if (global.requestIdleCallback) {\n                    global.requestIdleCallback(run);\n                }\n                else {\n                    setTimeout(run);\n                }\n            }\n        }\n    }\n    function processProperties(next, previousProperties) {\n        if (next.node.attributes && next.node.events) {\n            updateAttributes(next.domNode, previousProperties.attributes || {}, next.node.attributes, next.namespace);\n            setProperties(next.domNode, previousProperties.properties, next, false);\n            const events = next.node.events || {};\n            if (previousProperties.events) {\n                removeOrphanedEvents(next.domNode, previousProperties.events || {}, next.node.events, true);\n            }\n            previousProperties.events = previousProperties.events || {};\n            Object.keys(events).forEach((event) => {\n                updateEvent(next.domNode, event, events[event], next.node.bind, previousProperties.events[event]);\n            });\n        }\n        else {\n            setProperties(next.domNode, previousProperties.properties, next);\n        }\n    }\n    function mount(mountOptions = {}) {\n        _mountOptions = Object.assign({}, _mountOptions, mountOptions);\n        const { domNode } = _mountOptions;\n        let renderResult = renderer();\n        if (isVNode(renderResult)) {\n            renderResult = w(wrapVNodes(renderResult), {});\n        }\n        const nextWrapper = {\n            node: renderResult,\n            depth: 1\n        };\n        _parentWrapperMap.set(nextWrapper, { depth: 0, domNode, node: v('fake') });\n        _processQueue.push({\n            current: [],\n            next: [nextWrapper],\n            meta: { mergeNodes: arrayFrom(domNode.childNodes) }\n        });\n        _runProcessQueue();\n        _mountOptions.merge = false;\n        _runDomInstructionQueue();\n        _runCallbacks();\n    }\n    function invalidate() {\n        parentInvalidate && parentInvalidate();\n    }\n    function _schedule() {\n        const { sync } = _mountOptions;\n        if (sync) {\n            _runInvalidationQueue();\n        }\n        else if (!_renderScheduled) {\n            _renderScheduled = global.requestAnimationFrame(() => {\n                _runInvalidationQueue();\n            });\n        }\n    }\n    function _runInvalidationQueue() {\n        _renderScheduled = undefined;\n        const invalidationQueue = [..._invalidationQueue];\n        const previouslyRendered = [];\n        _invalidationQueue = [];\n        invalidationQueue.sort((a, b) => b.depth - a.depth);\n        let item;\n        while ((item = invalidationQueue.pop())) {\n            let { instance } = item;\n            if (previouslyRendered.indexOf(instance) === -1 && _instanceToWrapperMap.has(instance)) {\n                previouslyRendered.push(instance);\n                const current = _instanceToWrapperMap.get(instance);\n                const instanceData = widgetInstanceMap.get(instance);\n                const parent = _parentWrapperMap.get(current);\n                const sibling = _wrapperSiblingMap.get(current);\n                const { constructor, children } = instance;\n                const next = {\n                    node: {\n                        type: WNODE,\n                        widgetConstructor: constructor,\n                        properties: instanceData.inputProperties,\n                        children: children,\n                        bind: current.node.bind\n                    },\n                    instance,\n                    depth: current.depth\n                };\n                parent && _parentWrapperMap.set(next, parent);\n                sibling && _wrapperSiblingMap.set(next, sibling);\n                const { item } = _updateWidget({ current, next });\n                if (item) {\n                    _processQueue.push(item);\n                    instance && _instanceToWrapperMap.set(instance, next);\n                    _runProcessQueue();\n                }\n            }\n        }\n        _runDomInstructionQueue();\n        _runCallbacks();\n    }\n    function _runProcessQueue() {\n        let item;\n        while ((item = _processQueue.pop())) {\n            if (isAttachApplication(item)) {\n                _applicationQueue.push(item);\n            }\n            else {\n                const { current, next, meta } = item;\n                _process(current || EMPTY_ARRAY, next || EMPTY_ARRAY, meta);\n            }\n        }\n    }\n    function _runDomInstructionQueue() {\n        _applicationQueue.reverse();\n        let item;\n        while ((item = _applicationQueue.pop())) {\n            if (item.type === 'create') {\n                const { parentDomNode, next, next: { domNode, merged, requiresInsertBefore, node: { properties } } } = item;\n                processProperties(next, { properties: {} });\n                runDeferredProperties(next);\n                if (!merged) {\n                    let insertBefore;\n                    if (requiresInsertBefore) {\n                        insertBefore = findInsertBefore(next);\n                    }\n                    parentDomNode.insertBefore(domNode, insertBefore);\n                    if (isDomVNode(next.node) && next.node.onAttach) {\n                        next.node.onAttach();\n                    }\n                }\n                runEnterAnimation(next, _mountOptions.transition);\n                const instanceData = widgetInstanceMap.get(next.node.bind);\n                if (properties.key != null && instanceData) {\n                    instanceData.nodeHandler.add(domNode, `${properties.key}`);\n                }\n                item.next.inserted = true;\n            }\n            else if (item.type === 'update') {\n                const { next, next: { domNode, node }, current } = item;\n                const parent = _parentWrapperMap.get(next);\n                if (parent && isWNodeWrapper(parent) && parent.instance) {\n                    const instanceData = widgetInstanceMap.get(parent.instance);\n                    instanceData && instanceData.nodeHandler.addRoot();\n                }\n                const previousProperties = buildPreviousProperties(domNode, current, next);\n                const instanceData = widgetInstanceMap.get(next.node.bind);\n                processProperties(next, previousProperties);\n                runDeferredProperties(next);\n                if (instanceData && node.properties.key != null) {\n                    instanceData.nodeHandler.add(next.domNode, `${node.properties.key}`);\n                }\n            }\n            else if (item.type === 'delete') {\n                const { current } = item;\n                if (current.node.properties.exitAnimation) {\n                    runExitAnimation(current, _mountOptions.transition);\n                }\n                else {\n                    current.domNode.parentNode.removeChild(current.domNode);\n                    current.domNode = undefined;\n                }\n            }\n            else if (item.type === 'attach') {\n                const { instance, attached } = item;\n                const instanceData = widgetInstanceMap.get(instance);\n                instanceData.nodeHandler.addRoot();\n                attached && instanceData.onAttach();\n            }\n            else if (item.type === 'detach') {\n                if (item.current.instance) {\n                    const instanceData = widgetInstanceMap.get(item.current.instance);\n                    instanceData && instanceData.onDetach();\n                }\n                item.current.domNode = undefined;\n                item.current.node.bind = undefined;\n                item.current.instance = undefined;\n            }\n        }\n    }\n    function _runCallbacks() {\n        runAfterRenderCallbacks();\n        runDeferredRenderCallbacks();\n    }\n    function _processMergeNodes(next, mergeNodes) {\n        const { merge } = _mountOptions;\n        if (merge && mergeNodes.length) {\n            if (isVNodeWrapper(next)) {\n                let { node: { tag } } = next;\n                for (let i = 0; i < mergeNodes.length; i++) {\n                    const domElement = mergeNodes[i];\n                    if (tag.toUpperCase() === (domElement.tagName || '')) {\n                        mergeNodes.splice(i, 1);\n                        next.domNode = domElement;\n                        break;\n                    }\n                }\n            }\n            else {\n                next.mergeNodes = mergeNodes;\n            }\n        }\n    }\n    function registerDistinguishableCallback(childNodes, index) {\n        _afterRenderCallbacks.push(() => {\n            const parentWNodeWrapper = findParentWNodeWrapper(childNodes[index]);\n            checkDistinguishable(childNodes, index, parentWNodeWrapper);\n        });\n    }\n    function _process(current, next, meta = {}) {\n        let { mergeNodes = [], oldIndex = 0, newIndex = 0 } = meta;\n        const currentLength = current.length;\n        const nextLength = next.length;\n        const hasPreviousSiblings = currentLength > 1 || (currentLength > 0 && currentLength < nextLength);\n        const instructions = [];\n        if (newIndex < nextLength) {\n            let currentWrapper = oldIndex < currentLength ? current[oldIndex] : undefined;\n            const nextWrapper = next[newIndex];\n            nextWrapper.hasPreviousSiblings = hasPreviousSiblings;\n            _processMergeNodes(nextWrapper, mergeNodes);\n            if (currentWrapper && same(currentWrapper, nextWrapper)) {\n                oldIndex++;\n                newIndex++;\n                if (isVNodeWrapper(currentWrapper) && isVNodeWrapper(nextWrapper)) {\n                    nextWrapper.inserted = currentWrapper.inserted;\n                }\n                instructions.push({ current: currentWrapper, next: nextWrapper });\n            }\n            else if (!currentWrapper || findIndexOfChild(current, nextWrapper, oldIndex + 1) === -1) {\n                has('dojo-debug') && current.length && registerDistinguishableCallback(next, newIndex);\n                instructions.push({ current: undefined, next: nextWrapper });\n                newIndex++;\n            }\n            else if (findIndexOfChild(next, currentWrapper, newIndex + 1) === -1) {\n                has('dojo-debug') && registerDistinguishableCallback(current, oldIndex);\n                instructions.push({ current: currentWrapper, next: undefined });\n                oldIndex++;\n            }\n            else {\n                has('dojo-debug') && registerDistinguishableCallback(next, newIndex);\n                has('dojo-debug') && registerDistinguishableCallback(current, oldIndex);\n                instructions.push({ current: currentWrapper, next: undefined });\n                instructions.push({ current: undefined, next: nextWrapper });\n                oldIndex++;\n                newIndex++;\n            }\n        }\n        if (newIndex < nextLength) {\n            _processQueue.push({ current, next, meta: { mergeNodes, oldIndex, newIndex } });\n        }\n        if (currentLength > oldIndex && newIndex >= nextLength) {\n            for (let i = oldIndex; i < currentLength; i++) {\n                has('dojo-debug') && registerDistinguishableCallback(current, i);\n                instructions.push({ current: current[i], next: undefined });\n            }\n        }\n        for (let i = 0; i < instructions.length; i++) {\n            const { item, dom, widget } = _processOne(instructions[i]);\n            widget && _processQueue.push(widget);\n            item && _processQueue.push(item);\n            dom && _applicationQueue.push(dom);\n        }\n    }\n    function _processOne({ current, next }) {\n        if (current !== next) {\n            if (!current && next) {\n                if (isVNodeWrapper(next)) {\n                    return _createDom({ next });\n                }\n                else {\n                    return _createWidget({ next });\n                }\n            }\n            else if (current && next) {\n                if (isVNodeWrapper(current) && isVNodeWrapper(next)) {\n                    return _updateDom({ current, next });\n                }\n                else if (isWNodeWrapper(current) && isWNodeWrapper(next)) {\n                    return _updateWidget({ current, next });\n                }\n            }\n            else if (current && !next) {\n                if (isVNodeWrapper(current)) {\n                    return _removeDom({ current });\n                }\n                else if (isWNodeWrapper(current)) {\n                    return _removeWidget({ current });\n                }\n            }\n        }\n        return {};\n    }\n    function _createWidget({ next }) {\n        let { node: { widgetConstructor } } = next;\n        let { registry } = _mountOptions;\n        if (!isWidgetBaseConstructor(widgetConstructor)) {\n            return {};\n        }\n        const instance = new widgetConstructor();\n        if (registry) {\n            instance.registry.base = registry;\n        }\n        const instanceData = widgetInstanceMap.get(instance);\n        instanceData.invalidate = () => {\n            instanceData.dirty = true;\n            if (!instanceData.rendering && _instanceToWrapperMap.has(instance)) {\n                _invalidationQueue.push({ instance, depth: next.depth });\n                _schedule();\n            }\n        };\n        instanceData.rendering = true;\n        instance.__setProperties__(next.node.properties, next.node.bind);\n        instance.__setChildren__(next.node.children);\n        next.instance = instance;\n        let rendered = instance.__render__();\n        instanceData.rendering = false;\n        if (rendered) {\n            rendered = Array.isArray(rendered) ? rendered : [rendered];\n            next.childrenWrappers = renderedToWrapper(rendered, next, null);\n        }\n        if (next.instance) {\n            _instanceToWrapperMap.set(next.instance, next);\n            if (!parentInvalidate) {\n                parentInvalidate = next.instance.invalidate.bind(next.instance);\n            }\n        }\n        return {\n            item: { next: next.childrenWrappers, meta: { mergeNodes: next.mergeNodes } },\n            widget: { type: 'attach', instance, attached: true }\n        };\n    }\n    function _updateWidget({ current, next }) {\n        current = (current.instance && _instanceToWrapperMap.get(current.instance)) || current;\n        const { instance, domNode, hasAnimations } = current;\n        if (!instance) {\n            return [];\n        }\n        const instanceData = widgetInstanceMap.get(instance);\n        next.instance = instance;\n        next.domNode = domNode;\n        next.hasAnimations = hasAnimations;\n        instanceData.rendering = true;\n        instance.__setProperties__(next.node.properties, next.node.bind);\n        instance.__setChildren__(next.node.children);\n        _instanceToWrapperMap.set(next.instance, next);\n        if (instanceData.dirty) {\n            let rendered = instance.__render__();\n            instanceData.rendering = false;\n            if (rendered) {\n                rendered = Array.isArray(rendered) ? rendered : [rendered];\n                next.childrenWrappers = renderedToWrapper(rendered, next, current);\n            }\n            return {\n                item: { current: current.childrenWrappers, next: next.childrenWrappers, meta: {} },\n                widget: { type: 'attach', instance, attached: false }\n            };\n        }\n        instanceData.rendering = false;\n        next.childrenWrappers = current.childrenWrappers;\n        return {\n            widget: { type: 'attach', instance, attached: false }\n        };\n    }\n    function _removeWidget({ current }) {\n        current = current.instance ? _instanceToWrapperMap.get(current.instance) : current;\n        _wrapperSiblingMap.delete(current);\n        _parentWrapperMap.delete(current);\n        _instanceToWrapperMap.delete(current.instance);\n        return {\n            item: { current: current.childrenWrappers, meta: {} },\n            widget: { type: 'detach', current }\n        };\n    }\n    function _createDom({ next }) {\n        let mergeNodes = [];\n        if (!next.domNode) {\n            if (next.node.domNode) {\n                next.domNode = next.node.domNode;\n            }\n            else {\n                if (next.node.tag === 'svg') {\n                    next.namespace = NAMESPACE_SVG;\n                }\n                if (next.node.tag) {\n                    if (next.namespace) {\n                        next.domNode = global.document.createElementNS(next.namespace, next.node.tag);\n                    }\n                    else {\n                        next.domNode = global.document.createElement(next.node.tag);\n                    }\n                }\n                else if (next.node.text != null) {\n                    next.domNode = global.document.createTextNode(next.node.text);\n                }\n            }\n        }\n        else {\n            next.merged = true;\n        }\n        if (next.domNode) {\n            if (_mountOptions.merge) {\n                mergeNodes = arrayFrom(next.domNode.childNodes);\n            }\n            if (next.node.children) {\n                next.childrenWrappers = renderedToWrapper(next.node.children, next, null);\n            }\n        }\n        const parentWNodeWrapper = findParentWNodeWrapper(next);\n        if (parentWNodeWrapper && !parentWNodeWrapper.domNode) {\n            parentWNodeWrapper.domNode = next.domNode;\n        }\n        const dom = {\n            next: next,\n            parentDomNode: findParentDomNode(next),\n            type: 'create'\n        };\n        if (next.childrenWrappers) {\n            return {\n                item: { current: [], next: next.childrenWrappers, meta: { mergeNodes } },\n                dom\n            };\n        }\n        return { dom };\n    }\n    function _updateDom({ current, next }) {\n        const parentDomNode = findParentDomNode(current);\n        next.domNode = current.domNode;\n        next.namespace = current.namespace;\n        if (next.node.text && next.node.text !== current.node.text) {\n            const updatedTextNode = parentDomNode.ownerDocument.createTextNode(next.node.text);\n            parentDomNode.replaceChild(updatedTextNode, next.domNode);\n            next.domNode = updatedTextNode;\n        }\n        else if (next.node.children) {\n            const children = renderedToWrapper(next.node.children, next, current);\n            next.childrenWrappers = children;\n        }\n        return {\n            item: { current: current.childrenWrappers, next: next.childrenWrappers, meta: {} },\n            dom: { type: 'update', next, current }\n        };\n    }\n    function _removeDom({ current }) {\n        _wrapperSiblingMap.delete(current);\n        _parentWrapperMap.delete(current);\n        current.node.bind = undefined;\n        if (current.hasAnimations) {\n            return {\n                item: { current: current.childrenWrappers, meta: {} },\n                dom: { type: 'delete', current }\n            };\n        }\n        if (current.childrenWrappers) {\n            _afterRenderCallbacks.push(() => {\n                let wrappers = current.childrenWrappers || [];\n                let wrapper;\n                while ((wrapper = wrappers.pop())) {\n                    if (wrapper.childrenWrappers) {\n                        wrappers.push(...wrapper.childrenWrappers);\n                        wrapper.childrenWrappers = undefined;\n                    }\n                    if (isWNodeWrapper(wrapper)) {\n                        if (wrapper.instance) {\n                            _instanceToWrapperMap.delete(wrapper.instance);\n                            const instanceData = widgetInstanceMap.get(wrapper.instance);\n                            instanceData && instanceData.onDetach();\n                        }\n                        wrapper.instance = undefined;\n                    }\n                    _wrapperSiblingMap.delete(wrapper);\n                    _parentWrapperMap.delete(wrapper);\n                    wrapper.domNode = undefined;\n                    wrapper.node.bind = undefined;\n                }\n            });\n        }\n        return {\n            dom: { type: 'delete', current }\n        };\n    }\n    return {\n        mount,\n        invalidate\n    };\n}\nexport default renderer;\n//# sourceMappingURL=vdom.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/vdom.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/vdom.mjs\n// module chunks = title-pane","/*** IMPORTS FROM imports-loader ***/\nvar widgetFactory = require(\"src/title-pane\");\n\nvar registerCustomElement = require('@dojo/framework/widget-core/registerCustomElement').default;\n\nvar defaultExport = widgetFactory.default;\ndefaultExport && registerCustomElement(defaultExport);\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/imports-loader?widgetFactory=src/title-pane!./node_modules/@dojo/cli-build-widget/template/custom-element.js\n// module id = ./node_modules/imports-loader/index.js?widgetFactory=src/title-pane!./node_modules/@dojo/cli-build-widget/template/custom-element.js\n// module chunks = title-pane","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = ./node_modules/process/browser.js\n// module chunks = title-pane","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslib/tslib.es6.js\n// module id = ./node_modules/tslib/tslib.es6.js\n// module chunks = title-pane","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = ./node_modules/webpack/buildin/global.js\n// module chunks = title-pane","// removed by extract-text-webpack-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/base\",\"visuallyHidden\":\"base-m__visuallyHidden__1AeWe\",\"focusable\":\"base-m__focusable__1_qAN\",\"hidden\":\"base-m__hidden__3QddU\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/common/styles/base.m.css\n// module id = ./src/common/styles/base.m.css\n// module chunks = title-pane","import { AriaPropertyObject } from './interfaces';\n\nexport enum Keys {\n\tDown = 40,\n\tEnd = 35,\n\tEnter = 13,\n\tEscape = 27,\n\tHome = 36,\n\tLeft = 37,\n\tPageDown = 34,\n\tPageUp = 33,\n\tRight = 39,\n\tSpace = 32,\n\tTab = 9,\n\tUp = 38\n}\n\nexport function formatAriaProperties(aria: AriaPropertyObject): AriaPropertyObject {\n\tconst formattedAria = Object.keys(aria).reduce((a: AriaPropertyObject, key: string) => {\n\t\ta[`aria-${key.toLowerCase()}`] = aria[key];\n\t\treturn a;\n\t}, {});\n\treturn formattedAria;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./node_modules/@dojo/webpack-contrib/css-module-dts-loader?type=ts&instanceName=0_title-pane!./src/common/util.ts","import global from '@dojo/framework/shim/global';\nimport WidgetBase from '@dojo/framework/widget-core/WidgetBase';\nimport { DNode } from '@dojo/framework/widget-core/interfaces';\nimport { diffProperty } from '@dojo/framework/widget-core/decorators/diffProperty';\nimport { shallow } from '@dojo/framework/widget-core/diff';\n\nexport interface ListenerObject {\n\t[index: string]: (event?: any) => void;\n}\n\nexport interface GlobalEventProperties extends Partial<RegisteredListeners> {\n\twindow?: ListenerObject;\n\tdocument?: ListenerObject;\n}\n\nexport interface RegisteredListeners {\n\twindow: ListenerObject;\n\tdocument: ListenerObject;\n}\n\nexport class GlobalEvent extends WidgetBase<GlobalEventProperties> {\n\n\tprivate _listeners: RegisteredListeners = {\n\t\twindow: {},\n\t\tdocument: {}\n\t};\n\n\tprivate _registerListeners(type: 'window' | 'document', previousListeners: RegisteredListeners, newListeners: RegisteredListeners) {\n\t\tconst registeredListeners: ListenerObject = {};\n\t\tpreviousListeners[type] && Object.keys(previousListeners[type]).forEach((eventName) => {\n\t\t\tconst newListener = newListeners[type][eventName];\n\t\t\tif (newListener === undefined) {\n\t\t\t\tglobal[type].removeEventListener(eventName, this._listeners[type][eventName]);\n\t\t\t}\n\t\t\telse if (previousListeners[type][eventName] !== newListener) {\n\t\t\t\tglobal[type].removeEventListener(eventName, this._listeners[type][eventName]);\n\t\t\t\tglobal[type].addEventListener(eventName, newListener);\n\t\t\t\tregisteredListeners[eventName] = newListener;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tregisteredListeners[eventName] = newListener;\n\t\t\t}\n\t\t});\n\n\t\tnewListeners[type] && Object.keys(newListeners[type]).forEach((eventName) => {\n\t\t\tif (previousListeners[type] === undefined || previousListeners[type][eventName] === undefined) {\n\t\t\t\tglobal[type].addEventListener(eventName, newListeners[type][eventName]);\n\t\t\t\tregisteredListeners[eventName] = newListeners[type][eventName];\n\t\t\t}\n\t\t});\n\t\tthis._listeners[type] = registeredListeners;\n\t}\n\n\tprivate _removeAllRegisteredListeners(type: 'window' | 'document') {\n\t\tObject.keys(this._listeners[type]).forEach((eventName) => {\n\t\t\tglobal[type].removeEventListener(eventName, this._listeners[type][eventName]);\n\t\t});\n\t}\n\n\t@diffProperty('window', shallow)\n\tprotected onWindowListenersChange(previousListeners: RegisteredListeners, newListeners: RegisteredListeners) {\n\t\tthis._registerListeners('window', previousListeners, newListeners);\n\t}\n\n\t@diffProperty('document', shallow)\n\tprotected onDocumentListenersChange(previousListeners: RegisteredListeners, newListeners: RegisteredListeners) {\n\t\tthis._registerListeners('document', previousListeners, newListeners);\n\t}\n\n\tprotected onDetach() {\n\t\tthis._removeAllRegisteredListeners('window');\n\t\tthis._removeAllRegisteredListeners('document');\n\t}\n\n\tprotected render(): DNode | DNode[] {\n\t\tif (this.children.length > 0) {\n\t\t\treturn this.children;\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport default GlobalEvent;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./node_modules/@dojo/webpack-contrib/css-module-dts-loader?type=ts&instanceName=0_title-pane!./src/global-event/index.ts","import { WidgetBase } from '@dojo/framework/widget-core/WidgetBase';\nimport { DNode } from '@dojo/framework/widget-core/interfaces';\nimport { ThemedMixin, ThemedProperties, theme } from '@dojo/framework/widget-core/mixins/Themed';\nimport { v } from '@dojo/framework/widget-core/d';\nimport { CustomAriaProperties } from '../common/interfaces';\nimport { formatAriaProperties } from '../common/util';\nimport * as css from '../theme/icon.m.css';\nimport * as baseCss from '../common/styles/base.m.css';\nimport { customElement } from '@dojo/framework/widget-core/decorators/customElement';\n\nexport type IconType = keyof typeof css;\n\n/**\n * @type IconProperties\n *\n * Properties that can be set on an Icon component\n *\n * @property type           Icon type, e.g. downIcon, searchIcon, etc.\n * @property altText        An optional, visually hidden label for the icon\n */\nexport interface IconProperties extends ThemedProperties, CustomAriaProperties {\n\ttype: IconType;\n\taltText?: string;\n}\n\nexport const ThemedBase = ThemedMixin(WidgetBase);\n\n@theme(css)\n@customElement<IconProperties>({\n\ttag: 'dojo-icon',\n\tproperties: [\n\t\t'theme',\n\t\t'aria',\n\t\t'extraClasses'\n\t],\n\tattributes: [ 'type', 'altText' ]\n})\nexport class IconBase<P extends IconProperties = IconProperties> extends ThemedBase<P, null> {\n\n\tprotected renderAltText(altText: string): DNode {\n\t\treturn v('span', { classes: [ baseCss.visuallyHidden ] }, [ altText ]);\n\t}\n\n\trender(): DNode {\n\t\tconst {\n\t\t\taria = {\n\t\t\t\thidden: 'true'\n\t\t\t},\n\t\t\ttype,\n\t\t\taltText\n\t\t} = this.properties;\n\n\t\treturn v('span', { classes: this.theme(css.root) }, [\n\t\t\tv('i', {\n\t\t\t\t...formatAriaProperties(aria),\n\t\t\t\tclasses: this.theme([ css.icon, css[type] ])\n\t\t\t}),\n\t\t\taltText ? this.renderAltText(altText) : null\n\t\t]);\n\t}\n}\n\nexport default class Icon extends IconBase<IconProperties> {}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./node_modules/@dojo/webpack-contrib/css-module-dts-loader?type=ts&instanceName=0_title-pane!./src/icon/index.ts","// removed by extract-text-webpack-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/icon\",\"root\":\"icon-m__root__2L6Ls\",\"icon\":\"icon-m__icon__3tF1v\",\"downIcon\":\"icon-m__downIcon__3GFyI\",\"leftIcon\":\"icon-m__leftIcon__1db8D\",\"rightIcon\":\"icon-m__rightIcon__2a143\",\"closeIcon\":\"icon-m__closeIcon__w1WZi\",\"plusIcon\":\"icon-m__plusIcon__2V_90\",\"minusIcon\":\"icon-m__minusIcon__27KOe\",\"checkIcon\":\"icon-m__checkIcon__mKil4\",\"upIcon\":\"icon-m__upIcon__Rw4TX\",\"upAltIcon\":\"icon-m__upAltIcon__b2BPq\",\"downAltIcon\":\"icon-m__downAltIcon__3QpkE\",\"searchIcon\":\"icon-m__searchIcon__3MWqs\",\"barsIcon\":\"icon-m__barsIcon__3uXWm\",\"settingsIcon\":\"icon-m__settingsIcon__3V--O\",\"alertIcon\":\"icon-m__alertIcon__3YjJO\",\"helpIcon\":\"icon-m__helpIcon__3mL91\",\"infoIcon\":\"icon-m__infoIcon__dZLeo\",\"phoneIcon\":\"icon-m__phoneIcon__1vzkN\",\"editIcon\":\"icon-m__editIcon__2y3IH\",\"dateIcon\":\"icon-m__dateIcon__1_x6R\",\"linkIcon\":\"icon-m__linkIcon__HkV2v\",\"locationIcon\":\"icon-m__locationIcon__24-7y\",\"secureIcon\":\"icon-m__secureIcon__2cTDx\",\"mailIcon\":\"icon-m__mailIcon__12PMY\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/theme/icon.m.css\n// module id = ./src/theme/icon.m.css\n// module chunks = title-pane","// removed by extract-text-webpack-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/title-pane\",\"title\":\"title-pane-m__title__1gwpz\",\"closeable\":\"title-pane-m__closeable__2H5fz\",\"arrow\":\"title-pane-m__arrow__3mO_t\",\"root\":\"title-pane-m__root__3J-5z\",\"open\":\"title-pane-m__open__1bhv7\",\"content\":\"title-pane-m__content__bQNuo\",\"titleButton\":\"title-pane-m__titleButton__1NKNS\",\"contentTransition\":\"title-pane-m__contentTransition__2SrMd\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/theme/title-pane.m.css\n// module id = ./src/theme/title-pane.m.css\n// module chunks = title-pane","import { uuid } from '@dojo/framework/core/util';\nimport { DNode } from '@dojo/framework/widget-core/interfaces';\nimport { theme, ThemedMixin, ThemedProperties } from '@dojo/framework/widget-core/mixins/Themed';\nimport { FocusMixin, FocusProperties } from '@dojo/framework/widget-core/mixins/Focus';\nimport { v, w } from '@dojo/framework/widget-core/d';\nimport { WidgetBase } from '@dojo/framework/widget-core/WidgetBase';\n\nimport Icon from '../icon/index';\nimport * as fixedCss from './styles/title-pane.m.css';\nimport * as css from '../theme/title-pane.m.css';\nimport { Dimensions } from '@dojo/framework/widget-core/meta/Dimensions';\nimport { customElement } from '@dojo/framework/widget-core/decorators/customElement';\nimport GlobalEvent from '../global-event/index';\n\n/**\n * @type TitlePaneProperties\n *\n * Properties that can be set on a TitlePane component\n *\n * @property closeable          If false the pane will not collapse in response to clicking the title\n * @property headingLevel       'aria-level' for the title's DOM node\n * @property onRequestClose     Called when the title of an open pane is clicked\n * @property onRequestOpen      Called when the title of a closed pane is clicked\n * @property open               If true the pane is opened and content is visible\n * @property title              Title to display above the content\n */\nexport interface TitlePaneProperties extends ThemedProperties, FocusProperties {\n\tcloseable?: boolean;\n\theadingLevel?: number;\n\tonRequestClose?(key: string | number | undefined): void;\n\tonRequestOpen?(key: string | number | undefined): void;\n\topen?: boolean;\n\ttitle: string;\n}\n\nexport const ThemedBase = ThemedMixin(FocusMixin(WidgetBase));\n\n@theme(css)\n@customElement<TitlePaneProperties>({\n\ttag: 'dojo-title-pane',\n\tproperties: [ 'theme', 'extraClasses', 'open', 'closeable', 'headingLevel' ],\n\tattributes: [ 'title', 'key' ],\n\tevents: [\n\t\t'onRequestClose',\n\t\t'onRequestOpen'\n\t]\n})\nexport class TitlePaneBase<P extends TitlePaneProperties = TitlePaneProperties> extends ThemedBase<P> {\n\tprivate _id = uuid();\n\tprivate _open: boolean | undefined;\n\n\tprivate _onWindowResize = () => {\n\t\tthis.invalidate();\n\t}\n\n\tprivate _onTitleClick(event: MouseEvent) {\n\t\tevent.stopPropagation();\n\t\tthis._toggle();\n\t}\n\n\tprivate _toggle() {\n\t\tconst {\n\t\t\tcloseable = true,\n\t\t\tkey,\n\t\t\tonRequestClose,\n\t\t\tonRequestOpen,\n\t\t\topen = true\n\t\t} = this.properties;\n\n\t\tif (!closeable) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (open) {\n\t\t\tonRequestClose && onRequestClose(key);\n\t\t}\n\t\telse {\n\t\t\tonRequestOpen && onRequestOpen(key);\n\t\t}\n\t}\n\n\tprotected getButtonContent(): DNode {\n\t\treturn this.properties.title;\n\t}\n\n\tprotected getFixedModifierClasses(): (string | null)[] {\n\t\tconst { closeable = true } = this.properties;\n\t\treturn [\n\t\t\tcloseable ? fixedCss.closeableFixed : null\n\t\t];\n\t}\n\n\tprotected getModifierClasses(): (string | null)[] {\n\t\tconst { closeable = true } = this.properties;\n\t\treturn [\n\t\t\tcloseable ? css.closeable : null\n\t\t];\n\t}\n\n\tprotected getPaneContent(): DNode[] {\n\t\treturn this.children;\n\t}\n\n\tprotected renderExpandIcon(): DNode {\n\t\tconst { open = true, theme } = this.properties;\n\t\treturn v('span', { classes: this.theme(css.arrow) }, [\n\t\t\tw(Icon, { type: open ? 'downIcon' : 'rightIcon', theme })\n\t\t]);\n\t}\n\n\tprotected getPaneStyles(): any {\n\t\tconst { open = true } = this.properties;\n\t\tconst contentDimensions = this.meta(Dimensions).get('content');\n\t\treturn { marginTop: open ? '0px' : `-${contentDimensions.offset.height}px` };\n\t}\n\n\tprotected render(): DNode {\n\t\tconst {\n\t\t\tcloseable = true,\n\t\t\theadingLevel,\n\t\t\topen = true\n\t\t} = this.properties;\n\n\t\tlet transition = false;\n\n\t\tif (open !== this._open) {\n\t\t\ttransition = true;\n\t\t\tthis._open = open;\n\t\t}\n\n\t\treturn v('div', {\n\t\t\tclasses: [ ...this.theme([\n\t\t\t\tcss.root,\n\t\t\t\topen ? css.open : null\n\t\t\t]), fixedCss.rootFixed ]\n\t\t}, [\n\t\t\tw(GlobalEvent, { key: 'global', window: { resize: this._onWindowResize } }),\n\t\t\tv('div', {\n\t\t\t\t'aria-level': headingLevel ? `${headingLevel}` : null,\n\t\t\t\tclasses: [ ...this.theme([ css.title, ...this.getModifierClasses() ]), fixedCss.titleFixed, ...this.getFixedModifierClasses() ],\n\t\t\t\trole: 'heading'\n\t\t\t}, [\n\t\t\t\tv('button', {\n\t\t\t\t\t'aria-controls': `${this._id}-content`,\n\t\t\t\t\t'aria-expanded': `${open}`,\n\t\t\t\t\tdisabled: !closeable,\n\t\t\t\t\tclasses: [ fixedCss.titleButtonFixed, ...this.theme([css.titleButton]) ],\n\t\t\t\t\tfocus: this.shouldFocus,\n\t\t\t\t\tid: `${this._id}-title`,\n\t\t\t\t\ttype: 'button',\n\t\t\t\t\tonclick: this._onTitleClick\n\t\t\t\t}, [\n\t\t\t\t\tthis.renderExpandIcon(),\n\t\t\t\t\tthis.getButtonContent()\n\t\t\t\t])\n\t\t\t]),\n\t\t\tv('div', {\n\t\t\t\t'aria-hidden': open ? null : 'true',\n\t\t\t\t'aria-labelledby': `${this._id}-title`,\n\t\t\t\tclasses: [ ...this.theme([ css.content, transition ? css.contentTransition : null ]), fixedCss.contentFixed ],\n\t\t\t\tid: `${this._id}-content`,\n\t\t\t\tkey: 'content',\n\t\t\t\tstyles: this.getPaneStyles()\n\t\t\t}, this.getPaneContent())\n\t\t]);\n\t}\n}\n\nexport default class TitlePane extends TitlePaneBase<TitlePaneProperties> {}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./node_modules/@dojo/webpack-contrib/css-module-dts-loader?type=ts&instanceName=0_title-pane!./src/title-pane/index.ts","// removed by extract-text-webpack-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/title-pane\",\"rootFixed\":\"title-pane-m__rootFixed__oPswN\",\"titleFixed\":\"title-pane-m__titleFixed__1-iVY\",\"titleButtonFixed\":\"title-pane-m__titleButtonFixed__3JEqs\",\"contentFixed\":\"title-pane-m__contentFixed__3kE1q\",\"closeableFixed\":\"title-pane-m__closeableFixed__x4J9P\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/title-pane/styles/title-pane.m.css\n// module id = ./src/title-pane/styles/title-pane.m.css\n// module chunks = title-pane"],"sourceRoot":""}