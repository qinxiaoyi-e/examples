{"version":3,"sources":["webpack:///webpack/bootstrap 65b52e0833e868cc0e8d","webpack:///./node_modules/@dojo/framework/core/Destroyable.mjs","webpack:///./node_modules/@dojo/framework/core/Evented.mjs","webpack:///./node_modules/@dojo/framework/core/util.mjs","webpack:///./node_modules/@dojo/framework/has/has.mjs","webpack:///./node_modules/@dojo/framework/shim/Map.mjs","webpack:///./node_modules/@dojo/framework/shim/Promise.mjs","webpack:///./node_modules/@dojo/framework/shim/Set.mjs","webpack:///./node_modules/@dojo/framework/shim/Symbol.mjs","webpack:///./node_modules/@dojo/framework/shim/WeakMap.mjs","webpack:///./node_modules/@dojo/framework/shim/array.mjs","webpack:///./node_modules/@dojo/framework/shim/global.mjs","webpack:///./node_modules/@dojo/framework/shim/iterator.mjs","webpack:///./node_modules/@dojo/framework/shim/number.mjs","webpack:///./node_modules/@dojo/framework/shim/object.mjs","webpack:///./node_modules/@dojo/framework/shim/string.mjs","webpack:///./node_modules/@dojo/framework/shim/support/has.mjs","webpack:///./node_modules/@dojo/framework/shim/support/queue.mjs","webpack:///./node_modules/@dojo/framework/shim/support/util.mjs","webpack:///./node_modules/@dojo/framework/widget-core/Injector.mjs","webpack:///./node_modules/@dojo/framework/widget-core/NodeHandler.mjs","webpack:///./node_modules/@dojo/framework/widget-core/Registry.mjs","webpack:///./node_modules/@dojo/framework/widget-core/RegistryHandler.mjs","webpack:///./node_modules/@dojo/framework/widget-core/WidgetBase.mjs","webpack:///./node_modules/@dojo/framework/widget-core/animations/cssTransitions.mjs","webpack:///./node_modules/@dojo/framework/widget-core/d.mjs","webpack:///./node_modules/@dojo/framework/widget-core/decorators/alwaysRender.mjs","webpack:///./node_modules/@dojo/framework/widget-core/decorators/beforeProperties.mjs","webpack:///./node_modules/@dojo/framework/widget-core/decorators/customElement.mjs","webpack:///./node_modules/@dojo/framework/widget-core/decorators/diffProperty.mjs","webpack:///./node_modules/@dojo/framework/widget-core/decorators/handleDecorator.mjs","webpack:///./node_modules/@dojo/framework/widget-core/decorators/inject.mjs","webpack:///./node_modules/@dojo/framework/widget-core/diff.mjs","webpack:///./node_modules/@dojo/framework/widget-core/meta/Base.mjs","webpack:///./node_modules/@dojo/framework/widget-core/meta/Dimensions.mjs","webpack:///./node_modules/@dojo/framework/widget-core/mixins/Themed.mjs","webpack:///./node_modules/@dojo/framework/widget-core/registerCustomElement.mjs","webpack:///./node_modules/@dojo/framework/widget-core/vdom.mjs","webpack:///./node_modules/@dojo/cli-build-widget/template/custom-element.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/global-event/index.ts","webpack:///./src/split-pane/index.ts","webpack:///./src/split-pane/styles/split-pane.m.css?799e","webpack:///./src/theme/split-pane.m.css?b7aa"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_IMPORTED_MODULE_0__shim_Promise__","noop","resolve","destroyed","Error","Destroyable","[object Object]","this","handles","handle","_handles","push","splice","indexOf","destroy","forEach","own","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0__shim_Map__","__WEBPACK_IMPORTED_MODULE_1__Destroyable__","regexMap","Evented","super","arguments","listenersMap","event","methods","type","globString","targetString","regex","has","RegExp","replace","set","test","isGlobMatch","method","listener","Array","isArray","map","_addListener","listeners","target","sources","_mixin","deep","inherited","slice","shouldDeepCopyObject","value","toString","copyArray","array","item","kwArgs","copied","copiedClone","length","source","undefined","key","targetValue","global","process","add","testCache","testFunctions","testThenables","globalScope","window","self","staticFeatures","DojoHasEnvironment","staticCache","apply","feature","overwrite","normalizedFeature","toLowerCase","Boolean","exists","TypeError","then","isFeatureTestThenable","resolvedValue","result","document","location","versions","node","Map","__WEBPACK_IMPORTED_MODULE_1__global__","__WEBPACK_IMPORTED_MODULE_0__global__","ShimPromise","Promise","Set","__WEBPACK_IMPORTED_MODULE_2__support_util__","Symbol","wellKnown","for","WeakMap","from","__WEBPACK_IMPORTED_MODULE_4__support_util__","of","copyWithin","fill","find","findIndex","includes","globalObject","Math","pow","assign","getOwnPropertyDescriptor","getOwnPropertyNames","getOwnPropertySymbols","is","keys","getOwnPropertyDescriptors","entries","values","fromCodePoint","raw","codePointAt","endsWith","normalize","repeat","startsWith","padEnd","padStart","String","__WEBPACK_IMPORTED_MODULE_0__has_has__","every","Number","POSITIVE_INFINITY","e","imul","Observable","getCallSite","callSite","substitutions","key1","key2","freeze","postMessage","requestAnimationFrame","setImmediate","MutationObserver","WebKitMutationObserver","example","createElement","observer","observe","attributes","style","setProperty","takeRecords","Animation","KeyframeEffect","AbortController","AbortSignal","executeTask","isActive","callback","getQueueHandle","destructor","enqueue","queue","addEventListener","data","stopPropagation","shift","queueTask","id","queueAnimationTask","rafId","bind","cancelAnimationFrame","writable","nativeFunction","args","__WEBPACK_IMPORTED_MODULE_0__core_Evented__","Injector","payload","_payload","invalidator","_invalidator","NodeEventType","__WEBPACK_IMPORTED_MODULE_1__shim_Map__","_nodeMap","element","emit","Widget","Projector","clear","isWidgetBaseConstructor","__WEBPACK_IMPORTED_MODULE_2__core_Evented__","WIDGET_BASE_TYPE","_type","Registry","widgetLabel","action","label","_widgetRegistry","widgetCtor","emitLoadedEvent","error","injectorFactory","_injectorRegistry","injectorItem","injector","promise","default","isWidgetConstructorDefaultExport","hasInjector","__WEBPACK_IMPORTED_MODULE_1__core_Evented__","__WEBPACK_IMPORTED_MODULE_2__Registry__","_registry","_registryWidgetLabelMap","_registryInjectorLabelMap","baseRegistry","delete","base","widget","define","defineInjector","globalPrecedence","_get","getFunctionName","labelMap","registries","registry","registeredLabels","on","__WEBPACK_IMPORTED_MODULE_1__shim_WeakMap__","__WEBPACK_IMPORTED_MODULE_2__d__","__WEBPACK_IMPORTED_MODULE_3__diff__","__WEBPACK_IMPORTED_MODULE_4__RegistryHandler__","__WEBPACK_IMPORTED_MODULE_5__NodeHandler__","__WEBPACK_IMPORTED_MODULE_6__Registry__","lazyWidgetId","lazyWidgetIdMap","decoratorMap","widgetInstanceMap","boundAuto","noBind","WidgetBase","_initialProperties","_changedPropertyKeys","_nodeHandler","_children","_decoratorCache","_properties","_boundRenderFunc","render","_boundInvalidate","invalidate","dirty","onAttach","onDetach","nodeHandler","rendering","inputProperties","_runAfterConstructors","MetaType","_metaMap","cached","properties","changedPropertyKeys","originalProperties","instanceData","_runBeforeProperties","registeredDiffPropertyNames","getDecorator","propertyNames","allProperties","checkedProperties","diffPropertyResults","runReactions","propertyName","previousProperty","newProperty","_bindFunctionProperty","diffFunctions","changed","executedReactions","reaction","propertyChanged","reactionRun","children","nodes","filteredNodes","convertedNodes","deferredPropertiesCallback","widgetConstructor","registryItem","_filterAndConvert","tag","text","_runBeforeRenders","dNode","_runAfterRenders","decoratorKey","decoratorList","constructor","specificDecoratorList","decorators","allDecorators","instanceMap","unshift","getPrototypeOf","_buildDecoratorList","_bindFunctionPropertyMap","bindInfo","boundFunc","scope","beforeProperties","reduce","beforePropertiesFunction","beforeRenders","beforeRenderFunction","updatedRender","console","warn","afterRenders","afterRenderFunction","meta","afterRender","afterConstructors","afterConstructor","pop","browserSpecificTransitionEndEventName","browserSpecificAnimationEndEventName","initialize","determineBrowserStyleNames","runAndCleanUp","startAnimation","finishAnimation","finished","transitionEnd","removeEventListener","enter","enterAnimation","activeClass","enterAnimationActive","classList","remove","exit","exitAnimation","removeNode","exitAnimationActive","isWNode","isVNode","child","DOMVNODE","widgetConstructorOrNode","WNODE","propertiesOrChildren","classes","styles","newProperties","__WEBPACK_IMPORTED_MODULE_0_tslib__","_a","nodeClasses","nodeStyles","nodeProperties","VNODE","attrs","props","diffType","isElementNode","tagName","events","domNode","alwaysRender","__WEBPACK_IMPORTED_MODULE_0__handleDecorator__","__WEBPACK_IMPORTED_MODULE_1__beforeProperties__","propertyKey","addDecorator","customElement","__WEBPACK_IMPORTED_MODULE_0__registerCustomElement__","__WEBPACK_IMPORTED_MODULE_1__Registry__","childType","DOJO","registryFactory","__customElementDescriptor","diffProperty","__WEBPACK_IMPORTED_MODULE_1__diff__","diffFunction","reactionFunction","handleDecorator","handler","descriptor","inject","__WEBPACK_IMPORTED_MODULE_0__shim_WeakMap__","__WEBPACK_IMPORTED_MODULE_1__handleDecorator__","__WEBPACK_IMPORTED_MODULE_2__beforeProperties__","registeredInjectorsMap","getProperties","getInjector","registeredInjectors","shallow","__WEBPACK_IMPORTED_MODULE_0__Registry__","reference","ignore","isObjectOrArray","validOldProperty","validNewProperty","previousKeys","newKeys","some","__WEBPACK_IMPORTED_MODULE_0__core_Destroyable__","__WEBPACK_IMPORTED_MODULE_1__shim_Set__","Base","_requestedNodeKeys","_invalidate","_bind","stringKey","__WEBPACK_IMPORTED_MODULE_0__Base__","__WEBPACK_IMPORTED_MODULE_1__core_util__","defaultDimensions","client","height","left","top","width","offset","position","bottom","right","scroll","size","Dimensions","getNode","boundingDimensions","getBoundingClientRect","clientHeight","clientLeft","clientTop","clientWidth","offsetHeight","offsetLeft","offsetTop","offsetWidth","scrollHeight","scrollLeft","scrollTop","scrollWidth","theme","__WEBPACK_IMPORTED_MODULE_3__decorators_handleDecorator__","themeRegistry","themeInjector","__WEBPACK_IMPORTED_MODULE_1__Injector__","INJECTED_THEME_KEY","setInvalidator","ThemedMixin","__WEBPACK_IMPORTED_MODULE_2__decorators_inject__","__WEBPACK_IMPORTED_MODULE_4__decorators_diffProperty__","__WEBPACK_IMPORTED_MODULE_5__diff__","THEME_KEY","Themed","_registeredBaseThemeKeys","_recalculateClasses","_theme","_recalculateThemeClasses","className","_getThemeClass","extraClasses","themeClassName","_baseThemeClassesReverseLookup","resultClassNames","_registeredBaseTheme","join","baseThemes","finalBaseTheme","baseTheme","currentClassNames","baseClass","themeKey","CustomElementChildType","DomToWidgetWrapper","create","register","__WEBPACK_IMPORTED_MODULE_1__WidgetBase__","__WEBPACK_IMPORTED_MODULE_2__vdom__","__WEBPACK_IMPORTED_MODULE_3__shim_array__","__WEBPACK_IMPORTED_MODULE_4__d__","__WEBPACK_IMPORTED_MODULE_5__shim_global__","__WEBPACK_IMPORTED_MODULE_6__mixins_Themed__","__WEBPACK_IMPORTED_MODULE_7__decorators_alwaysRender__","WidgetConstructor","attributeMap","attributeName","HTMLElement","_eventProperties","_initialised","domProperties","_attributesToProperties","filteredPropertyName","_getProperty","_setProperty","eventName","_getEventProperty","_setEventProperty","eventCallback","dispatchEvent","CustomEvent","bubbles","detail","defineProperties","TEXT","childNodes","childNode","_render","_childConnected","widgetProperties","renderChildren","__children__","themeContext","_getTheme","r","_renderer","mount","merge","dojoce","themes","parentNode","filter","Child","isWidget","__properties__","oldValue","getAttribute","observedAttributes","customElements","renderer","__WEBPACK_IMPORTED_MODULE_0__shim_global__","__WEBPACK_IMPORTED_MODULE_1__has_has__","__WEBPACK_IMPORTED_MODULE_2__shim_WeakMap__","__WEBPACK_IMPORTED_MODULE_3__animations_cssTransitions__","__WEBPACK_IMPORTED_MODULE_5__Registry__","__WEBPACK_IMPORTED_MODULE_6__WidgetBase__","EMPTY_ARRAY","nodeOperations","NAMESPACE_SVG","NAMESPACE_W3","NAMESPACE_XLINK","isWNodeWrapper","isVNodeWrapper","buildPreviousProperties","current","next","propName","attrName","same","dnode1","dnode2","instance","findIndexOfChild","sameAs","start","createClassPropValue","trim","updateAttribute","attrValue","namespace","setAttributeNS","removeAttribute","setAttribute","runEnterAnimation","transitions","runExitAnimation","removeDomNode","removeChild","arrayFrom","arr","_renderScheduled","parentInvalidate","_mountOptions","sync","transition","body","_invalidationQueue","_processQueue","_applicationQueue","_eventMap","_instanceToWrapperMap","_parentWrapperMap","_wrapperSiblingMap","_afterRenderCallbacks","_deferredRenderCallbacks","nodeOperation","propValue","previousValue","updateEvent","currentValue","previousEvent","evt","removeOrphanedEvents","previousProperties","onlyEvents","isEvent","substr","renderedToWrapper","rendered","parent","currentParent","wrappedRendered","hasParentWNode","currentParentLength","childrenWrappers","requiresInsertBefore","hasPreviousSiblings","previousItem","renderedItem","wrapper","depth","hasAnimations","nextParent","findParentWNodeWrapper","currentNode","parentWNodeWrapper","parentWrapper","findParentDomNode","parentDomNode","runDeferredProperties","processProperties","findInsertBefore","insertBefore","searchNode","nextSibling","setProperties","currentProperties","nextWrapper","includesEventsAndAttributes","propNames","propCount","previousClassString","currentClassString","merged","domClasses","split","styleNames","styleCount","j","styleName","newStyleValue","domValue","lastIndexOf","previousAttributes","attrNames","attrCount","updateAttributes","_runInvalidationQueue","invalidationQueue","previouslyRendered","sort","a","b","sibling","_updateWidget","_runProcessQueue","_runDomInstructionQueue","_runCallbacks","_process","reverse","inserted","addRoot","attached","callbacks","run","requestIdleCallback","setTimeout","runAfterRenderCallbacks","runDeferredRenderCallbacks","registerDistinguishableCallback","index","wrappers","wrapperToCheck","parentName","nodeIdentifier","checkDistinguishable","mergeNodes","oldIndex","newIndex","currentLength","nextLength","instructions","currentWrapper","domElement","toUpperCase","_processMergeNodes","dom","_processOne","createElementNS","createTextNode","_createDom","_schedule","__setProperties__","__setChildren__","__render__","_createWidget","updatedTextNode","ownerDocument","replaceChild","_updateDom","_removeDom","_removeWidget","mountOptions","renderResult","widgetFactory","registerCustomElement","defaultExport","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","marker","runClearTimeout","Item","nextTick","title","browser","env","argv","version","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","t","desc","Reflect","decorate","metadataKey","metadataValue","metadata","setPrototypeOf","g","Function","eval","GlobalEvent","__WEBPACK_IMPORTED_MODULE_2__dojo_framework_widget_core_WidgetBase__","_listeners","previousListeners","newListeners","registeredListeners","newListener","__WEBPACK_IMPORTED_MODULE_1__dojo_framework_shim_global__","_registerListeners","_removeAllRegisteredListeners","__WEBPACK_IMPORTED_MODULE_3__dojo_framework_widget_core_decorators_diffProperty__","__WEBPACK_IMPORTED_MODULE_4__dojo_framework_widget_core_diff__","Direction","ThemedBase","__WEBPACK_IMPORTED_MODULE_1__dojo_framework_widget_core_mixins_Themed__","__WEBPACK_IMPORTED_MODULE_3__dojo_framework_widget_core_WidgetBase__","DEFAULT_SIZE","SplitPaneBase","_position","_collapsed","_onDragMove","_dragging","direction","column","onResize","currentPosition","_getPosition","newSize","_lastSize","rootDimensions","__WEBPACK_IMPORTED_MODULE_8__dojo_framework_widget_core_meta_Dimensions__","dividerDimensions","maxSize","_onDragEnd","_onResize","collapseWidth","isCollapsed","_collapseIfNecessary","changedTouches","clientX","clientY","preventDefault","oldProperty","content","computedSize","onCollapse","row","__WEBPACK_IMPORTED_MODULE_2__dojo_framework_widget_core_d__","__WEBPACK_IMPORTED_MODULE_7__theme_split_pane_m_css__","__WEBPACK_IMPORTED_MODULE_6__styles_split_pane_m_css__","__WEBPACK_IMPORTED_MODULE_9__global_event_index__","mouseup","mousemove","touchmove","resize","getPaneStyles","getPaneContent","onmousedown","_onDragStart","ontouchend","ontouchstart","__WEBPACK_IMPORTED_MODULE_5__dojo_framework_widget_core_decorators_diffProperty__","__WEBPACK_IMPORTED_MODULE_10__dojo_framework_widget_core_decorators_customElement__"," _key","rootFixed","rowFixed","dividerFixed","leadingFixed","columnFixed","trailingFixed","collapsedFixed","root","divider","leading","trailing","collapsed"],"mappings":"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","file":"split-pane-4.0.0.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 65b52e0833e868cc0e8d","import Promise from '../shim/Promise';\n/**\n * No op function used to replace a Destroyable instance's `destroy` method, once the instance has been destroyed\n */\nfunction noop() {\n    return Promise.resolve(false);\n}\n/**\n * No op function used to replace a Destroyable instance's `own` method, once the instance has been destroyed\n */\nfunction destroyed() {\n    throw new Error('Call made to destroyed method');\n}\nexport class Destroyable {\n    /**\n     * @constructor\n     */\n    constructor() {\n        this.handles = [];\n    }\n    /**\n     * Register handles for the instance that will be destroyed when `this.destroy` is called\n     *\n     * @param {Handle} handle The handle to add for the instance\n     * @returns {Handle} A wrapper Handle. When the wrapper Handle's `destroy` method is invoked, the original handle is\n     *                   removed from the instance, and its `destroy` method is invoked.\n     */\n    own(handle) {\n        const { handles: _handles } = this;\n        _handles.push(handle);\n        return {\n            destroy() {\n                _handles.splice(_handles.indexOf(handle));\n                handle.destroy();\n            }\n        };\n    }\n    /**\n     * Destroys all handlers registered for the instance\n     *\n     * @returns {Promise<any} A Promise that resolves once all handles have been destroyed\n     */\n    destroy() {\n        return new Promise((resolve) => {\n            this.handles.forEach((handle) => {\n                handle && handle.destroy && handle.destroy();\n            });\n            this.destroy = noop;\n            this.own = destroyed;\n            resolve(true);\n        });\n    }\n}\nexport default Destroyable;\n//# sourceMappingURL=Destroyable.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/core/Destroyable.mjs\n// module id = ./node_modules/@dojo/framework/core/Destroyable.mjs\n// module chunks = split-pane","import Map from '../shim/Map';\nimport { Destroyable } from './Destroyable';\n/**\n * Map of computed regular expressions, keyed by string\n */\nconst regexMap = new Map();\n/**\n * Determines if the event type glob has been matched\n *\n * @returns boolean that indicates if the glob is matched\n */\nexport function isGlobMatch(globString, targetString) {\n    if (typeof targetString === 'string' && typeof globString === 'string' && globString.indexOf('*') !== -1) {\n        let regex;\n        if (regexMap.has(globString)) {\n            regex = regexMap.get(globString);\n        }\n        else {\n            regex = new RegExp(`^${globString.replace(/\\*/g, '.*')}$`);\n            regexMap.set(globString, regex);\n        }\n        return regex.test(targetString);\n    }\n    else {\n        return globString === targetString;\n    }\n}\n/**\n * Event Class\n */\nexport class Evented extends Destroyable {\n    constructor() {\n        super(...arguments);\n        /**\n         * map of listeners keyed by event type\n         */\n        this.listenersMap = new Map();\n    }\n    emit(event) {\n        this.listenersMap.forEach((methods, type) => {\n            if (isGlobMatch(type, event.type)) {\n                [...methods].forEach((method) => {\n                    method.call(this, event);\n                });\n            }\n        });\n    }\n    on(type, listener) {\n        if (Array.isArray(listener)) {\n            const handles = listener.map((listener) => this._addListener(type, listener));\n            return {\n                destroy() {\n                    handles.forEach((handle) => handle.destroy());\n                }\n            };\n        }\n        return this._addListener(type, listener);\n    }\n    _addListener(type, listener) {\n        const listeners = this.listenersMap.get(type) || [];\n        listeners.push(listener);\n        this.listenersMap.set(type, listeners);\n        return {\n            destroy: () => {\n                const listeners = this.listenersMap.get(type) || [];\n                listeners.splice(listeners.indexOf(listener), 1);\n            }\n        };\n    }\n}\nexport default Evented;\n//# sourceMappingURL=Evented.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/core/Evented.mjs\n// module id = ./node_modules/@dojo/framework/core/Evented.mjs\n// module chunks = split-pane","const slice = Array.prototype.slice;\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Type guard that ensures that the value can be coerced to Object\n * to weed out host objects that do not derive from Object.\n * This function is used to check if we want to deep copy an object or not.\n * Note: In ES6 it is possible to modify an object's Symbol.toStringTag property, which will\n * change the value returned by `toString`. This is a rare edge case that is difficult to handle,\n * so it is not handled here.\n * @param  value The value to check\n * @return       If the value is coercible into an Object\n */\nfunction shouldDeepCopyObject(value) {\n    return Object.prototype.toString.call(value) === '[object Object]';\n}\nfunction copyArray(array, inherited) {\n    return array.map(function (item) {\n        if (Array.isArray(item)) {\n            return copyArray(item, inherited);\n        }\n        return !shouldDeepCopyObject(item)\n            ? item\n            : _mixin({\n                deep: true,\n                inherited: inherited,\n                sources: [item],\n                target: {}\n            });\n    });\n}\nfunction _mixin(kwArgs) {\n    const deep = kwArgs.deep;\n    const inherited = kwArgs.inherited;\n    const target = kwArgs.target;\n    const copied = kwArgs.copied || [];\n    const copiedClone = [...copied];\n    for (let i = 0; i < kwArgs.sources.length; i++) {\n        const source = kwArgs.sources[i];\n        if (source === null || source === undefined) {\n            continue;\n        }\n        for (let key in source) {\n            if (inherited || hasOwnProperty.call(source, key)) {\n                let value = source[key];\n                if (copiedClone.indexOf(value) !== -1) {\n                    continue;\n                }\n                if (deep) {\n                    if (Array.isArray(value)) {\n                        value = copyArray(value, inherited);\n                    }\n                    else if (shouldDeepCopyObject(value)) {\n                        const targetValue = target[key] || {};\n                        copied.push(source);\n                        value = _mixin({\n                            deep: true,\n                            inherited: inherited,\n                            sources: [value],\n                            target: targetValue,\n                            copied\n                        });\n                    }\n                }\n                target[key] = value;\n            }\n        }\n    }\n    return target;\n}\nexport function deepAssign(target, ...sources) {\n    return _mixin({\n        deep: true,\n        inherited: false,\n        sources: sources,\n        target: target\n    });\n}\nexport function deepMixin(target, ...sources) {\n    return _mixin({\n        deep: true,\n        inherited: true,\n        sources: sources,\n        target: target\n    });\n}\nexport function mixin(target, ...sources) {\n    return _mixin({\n        deep: false,\n        inherited: true,\n        sources: sources,\n        target: target\n    });\n}\n/**\n * Returns a function which invokes the given function with the given arguments prepended to its argument list.\n * Like `Function.prototype.bind`, but does not alter execution context.\n *\n * @param targetFunction The function that needs to be bound\n * @param suppliedArgs An optional array of arguments to prepend to the `targetFunction` arguments list\n * @return The bound function\n */\nexport function partial(targetFunction, ...suppliedArgs) {\n    return function () {\n        const args = arguments.length ? suppliedArgs.concat(slice.call(arguments)) : suppliedArgs;\n        return targetFunction.apply(this, args);\n    };\n}\nexport function guaranteeMinimumTimeout(callback, delay) {\n    const startTime = Date.now();\n    let timerId;\n    function timeoutHandler() {\n        const delta = Date.now() - startTime;\n        if (delay == null || delta >= delay) {\n            callback();\n        }\n        else {\n            timerId = setTimeout(timeoutHandler, delay - delta);\n        }\n    }\n    timerId = setTimeout(timeoutHandler, delay);\n    return {\n        destroy: () => {\n            if (timerId != null) {\n                clearTimeout(timerId);\n                timerId = null;\n            }\n        }\n    };\n}\nexport function debounce(callback, delay) {\n    let timer;\n    return function () {\n        timer && timer.destroy();\n        let context = this;\n        let args = arguments;\n        timer = guaranteeMinimumTimeout(function () {\n            callback.apply(context, args);\n            args = context = timer = null;\n        }, delay);\n    };\n}\nexport function throttle(callback, delay) {\n    let ran;\n    return function () {\n        if (ran) {\n            return;\n        }\n        ran = true;\n        callback.apply(this, arguments);\n        guaranteeMinimumTimeout(function () {\n            ran = null;\n        }, delay);\n    };\n}\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        const r = (Math.random() * 16) | 0, v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\n//# sourceMappingURL=util.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/core/util.mjs\n// module id = ./node_modules/@dojo/framework/core/util.mjs\n// module chunks = split-pane","function isFeatureTestThenable(value) {\n    return value && value.then;\n}\n/**\n * A cache of results of feature tests\n */\nexport const testCache = {};\n/**\n * A cache of the un-resolved feature tests\n */\nexport const testFunctions = {};\n/**\n * A cache of unresolved thenables (probably promises)\n * @type {{}}\n */\nconst testThenables = {};\n/**\n * A reference to the global scope (`window` in a browser, `global` in NodeJS)\n */\nconst globalScope = (function () {\n    /* istanbul ignore else */\n    if (typeof window !== 'undefined') {\n        // Browsers\n        return window;\n    }\n    else if (typeof global !== 'undefined') {\n        // Node\n        return global;\n    }\n    else if (typeof self !== 'undefined') {\n        // Web workers\n        return self;\n    }\n    /* istanbul ignore next */\n    return {};\n})();\n/* Grab the staticFeatures if there are available */\nconst { staticFeatures } = globalScope.DojoHasEnvironment || {};\n/* Cleaning up the DojoHasEnviornment */\nif ('DojoHasEnvironment' in globalScope) {\n    delete globalScope.DojoHasEnvironment;\n}\n/**\n * Custom type guard to narrow the `staticFeatures` to either a map or a function that\n * returns a map.\n *\n * @param value The value to guard for\n */\nfunction isStaticFeatureFunction(value) {\n    return typeof value === 'function';\n}\n/**\n * The cache of asserted features that were available in the global scope when the\n * module loaded\n */\nconst staticCache = staticFeatures\n    ? isStaticFeatureFunction(staticFeatures)\n        ? staticFeatures.apply(globalScope)\n        : staticFeatures\n    : {}; /* Providing an empty cache, if none was in the environment\n\n/**\n* AMD plugin function.\n*\n* Conditional loads modules based on a has feature test value.\n*\n* @param resourceId Gives the resolved module id to load.\n* @param require The loader require function with respect to the module that contained the plugin resource in its\n*                dependency list.\n* @param load Callback to loader that consumes result of plugin demand.\n*/\nexport function load(resourceId, require, load, config) {\n    resourceId ? require([resourceId], load) : load();\n}\n/**\n * AMD plugin function.\n *\n * Resolves resourceId into a module id based on possibly-nested tenary expression that branches on has feature test\n * value(s).\n *\n * @param resourceId The id of the module\n * @param normalize Resolves a relative module id into an absolute module id\n */\nexport function normalize(resourceId, normalize) {\n    const tokens = resourceId.match(/[\\?:]|[^:\\?]*/g) || [];\n    let i = 0;\n    function get(skip) {\n        const term = tokens[i++];\n        if (term === ':') {\n            // empty string module name, resolves to null\n            return null;\n        }\n        else {\n            // postfixed with a ? means it is a feature to branch on, the term is the name of the feature\n            if (tokens[i++] === '?') {\n                if (!skip && has(term)) {\n                    // matched the feature, get the first value from the options\n                    return get();\n                }\n                else {\n                    // did not match, get the second value, passing over the first\n                    get(true);\n                    return get(skip);\n                }\n            }\n            // a module\n            return term;\n        }\n    }\n    const id = get();\n    return id && normalize(id);\n}\n/**\n * Check if a feature has already been registered\n *\n * @param feature the name of the feature\n */\nexport function exists(feature) {\n    const normalizedFeature = feature.toLowerCase();\n    return Boolean(normalizedFeature in staticCache || normalizedFeature in testCache || testFunctions[normalizedFeature]);\n}\n/**\n * Register a new test for a named feature.\n *\n * @example\n * has.add('dom-addeventlistener', !!document.addEventListener);\n *\n * @example\n * has.add('touch-events', function () {\n *    return 'ontouchstart' in document\n * });\n *\n * @param feature the name of the feature\n * @param value the value reported of the feature, or a function that will be executed once on first test\n * @param overwrite if an existing value should be overwritten. Defaults to false.\n */\nexport function add(feature, value, overwrite = false) {\n    const normalizedFeature = feature.toLowerCase();\n    if (exists(normalizedFeature) && !overwrite && !(normalizedFeature in staticCache)) {\n        throw new TypeError(`Feature \"${feature}\" exists and overwrite not true.`);\n    }\n    if (typeof value === 'function') {\n        testFunctions[normalizedFeature] = value;\n    }\n    else if (isFeatureTestThenable(value)) {\n        testThenables[feature] = value.then((resolvedValue) => {\n            testCache[feature] = resolvedValue;\n            delete testThenables[feature];\n        }, () => {\n            delete testThenables[feature];\n        });\n    }\n    else {\n        testCache[normalizedFeature] = value;\n        delete testFunctions[normalizedFeature];\n    }\n}\n/**\n * Return the current value of a named feature.\n *\n * @param feature The name of the feature to test.\n */\nexport default function has(feature) {\n    let result;\n    const normalizedFeature = feature.toLowerCase();\n    if (normalizedFeature in staticCache) {\n        result = staticCache[normalizedFeature];\n    }\n    else if (testFunctions[normalizedFeature]) {\n        result = testCache[normalizedFeature] = testFunctions[normalizedFeature].call(null);\n        delete testFunctions[normalizedFeature];\n    }\n    else if (normalizedFeature in testCache) {\n        result = testCache[normalizedFeature];\n    }\n    else if (feature in testThenables) {\n        return false;\n    }\n    else {\n        throw new TypeError(`Attempt to detect unregistered has feature \"${feature}\"`);\n    }\n    return result;\n}\n/*\n * Out of the box feature tests\n */\n/* Environments */\n/* Used as a value to provide a debug only code path */\nadd('debug', true);\n/* flag for dojo debug, default to false */\nadd('dojo-debug', false);\n/* Detects if the environment is \"browser like\" */\nadd('host-browser', typeof document !== 'undefined' && typeof location !== 'undefined');\n/* Detects if the environment appears to be NodeJS */\nadd('host-node', function () {\n    if (typeof process === 'object' && process.versions && process.versions.node) {\n        return process.versions.node;\n    }\n});\n//# sourceMappingURL=has.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/has/has.mjs\n// module id = ./node_modules/@dojo/framework/has/has.mjs\n// module chunks = split-pane","import { isArrayLike, ShimIterator } from './iterator';\nimport global from './global';\nimport { is as objectIs } from './object';\nimport has from './support/has';\nimport './Symbol';\nexport let Map = global.Map;\nif (!true) {\n    Map = (_a = class Map {\n            constructor(iterable) {\n                this._keys = [];\n                this._values = [];\n                this[Symbol.toStringTag] = 'Map';\n                if (iterable) {\n                    if (isArrayLike(iterable)) {\n                        for (let i = 0; i < iterable.length; i++) {\n                            const value = iterable[i];\n                            this.set(value[0], value[1]);\n                        }\n                    }\n                    else {\n                        for (const value of iterable) {\n                            this.set(value[0], value[1]);\n                        }\n                    }\n                }\n            }\n            /**\n             * An alternative to Array.prototype.indexOf using Object.is\n             * to check for equality. See http://mzl.la/1zuKO2V\n             */\n            _indexOfKey(keys, key) {\n                for (let i = 0, length = keys.length; i < length; i++) {\n                    if (objectIs(keys[i], key)) {\n                        return i;\n                    }\n                }\n                return -1;\n            }\n            get size() {\n                return this._keys.length;\n            }\n            clear() {\n                this._keys.length = this._values.length = 0;\n            }\n            delete(key) {\n                const index = this._indexOfKey(this._keys, key);\n                if (index < 0) {\n                    return false;\n                }\n                this._keys.splice(index, 1);\n                this._values.splice(index, 1);\n                return true;\n            }\n            entries() {\n                const values = this._keys.map((key, i) => {\n                    return [key, this._values[i]];\n                });\n                return new ShimIterator(values);\n            }\n            forEach(callback, context) {\n                const keys = this._keys;\n                const values = this._values;\n                for (let i = 0, length = keys.length; i < length; i++) {\n                    callback.call(context, values[i], keys[i], this);\n                }\n            }\n            get(key) {\n                const index = this._indexOfKey(this._keys, key);\n                return index < 0 ? undefined : this._values[index];\n            }\n            has(key) {\n                return this._indexOfKey(this._keys, key) > -1;\n            }\n            keys() {\n                return new ShimIterator(this._keys);\n            }\n            set(key, value) {\n                let index = this._indexOfKey(this._keys, key);\n                index = index < 0 ? this._keys.length : index;\n                this._keys[index] = key;\n                this._values[index] = value;\n                return this;\n            }\n            values() {\n                return new ShimIterator(this._values);\n            }\n            [Symbol.iterator]() {\n                return this.entries();\n            }\n        },\n        _a[Symbol.species] = _a,\n        _a);\n}\nexport default Map;\nvar _a;\n//# sourceMappingURL=Map.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/Map.mjs\n// module id = ./node_modules/@dojo/framework/shim/Map.mjs\n// module chunks = split-pane","import global from './global';\nimport { queueMicroTask } from './support/queue';\nimport './Symbol';\nimport has from './support/has';\nexport let ShimPromise = global.Promise;\nexport const isThenable = function isThenable(value) {\n    return value && typeof value.then === 'function';\n};\nif (!true) {\n    global.Promise = ShimPromise = (_a = class Promise {\n            /**\n             * Creates a new Promise.\n             *\n             * @constructor\n             *\n             * @param executor\n             * The executor function is called immediately when the Promise is instantiated. It is responsible for\n             * starting the asynchronous operation when it is invoked.\n             *\n             * The executor must call either the passed `resolve` function when the asynchronous operation has completed\n             * successfully, or the `reject` function when the operation fails.\n             */\n            constructor(executor) {\n                /**\n                 * The current state of this promise.\n                 */\n                this.state = 1 /* Pending */;\n                this[Symbol.toStringTag] = 'Promise';\n                /**\n                 * If true, the resolution of this promise is chained (\"locked in\") to another promise.\n                 */\n                let isChained = false;\n                /**\n                 * Whether or not this promise is in a resolved state.\n                 */\n                const isResolved = () => {\n                    return this.state !== 1 /* Pending */ || isChained;\n                };\n                /**\n                 * Callbacks that should be invoked once the asynchronous operation has completed.\n                 */\n                let callbacks = [];\n                /**\n                 * Initially pushes callbacks onto a queue for execution once this promise settles. After the promise settles,\n                 * enqueues callbacks for execution on the next event loop turn.\n                 */\n                let whenFinished = function (callback) {\n                    if (callbacks) {\n                        callbacks.push(callback);\n                    }\n                };\n                /**\n                 * Settles this promise.\n                 *\n                 * @param newState The resolved state for this promise.\n                 * @param {T|any} value The resolved value for this promise.\n                 */\n                const settle = (newState, value) => {\n                    // A promise can only be settled once.\n                    if (this.state !== 1 /* Pending */) {\n                        return;\n                    }\n                    this.state = newState;\n                    this.resolvedValue = value;\n                    whenFinished = queueMicroTask;\n                    // Only enqueue a callback runner if there are callbacks so that initially fulfilled Promises don't have to\n                    // wait an extra turn.\n                    if (callbacks && callbacks.length > 0) {\n                        queueMicroTask(function () {\n                            if (callbacks) {\n                                let count = callbacks.length;\n                                for (let i = 0; i < count; ++i) {\n                                    callbacks[i].call(null);\n                                }\n                                callbacks = null;\n                            }\n                        });\n                    }\n                };\n                /**\n                 * Resolves this promise.\n                 *\n                 * @param newState The resolved state for this promise.\n                 * @param {T|any} value The resolved value for this promise.\n                 */\n                const resolve = (newState, value) => {\n                    if (isResolved()) {\n                        return;\n                    }\n                    if (isThenable(value)) {\n                        value.then(settle.bind(null, 0 /* Fulfilled */), settle.bind(null, 2 /* Rejected */));\n                        isChained = true;\n                    }\n                    else {\n                        settle(newState, value);\n                    }\n                };\n                this.then = (onFulfilled, onRejected) => {\n                    return new Promise((resolve, reject) => {\n                        // whenFinished initially queues up callbacks for execution after the promise has settled. Once the\n                        // promise has settled, whenFinished will schedule callbacks for execution on the next turn through the\n                        // event loop.\n                        whenFinished(() => {\n                            const callback = this.state === 2 /* Rejected */ ? onRejected : onFulfilled;\n                            if (typeof callback === 'function') {\n                                try {\n                                    resolve(callback(this.resolvedValue));\n                                }\n                                catch (error) {\n                                    reject(error);\n                                }\n                            }\n                            else if (this.state === 2 /* Rejected */) {\n                                reject(this.resolvedValue);\n                            }\n                            else {\n                                resolve(this.resolvedValue);\n                            }\n                        });\n                    });\n                };\n                try {\n                    executor(resolve.bind(null, 0 /* Fulfilled */), resolve.bind(null, 2 /* Rejected */));\n                }\n                catch (error) {\n                    settle(2 /* Rejected */, error);\n                }\n            }\n            static all(iterable) {\n                return new this(function (resolve, reject) {\n                    const values = [];\n                    let complete = 0;\n                    let total = 0;\n                    let populating = true;\n                    function fulfill(index, value) {\n                        values[index] = value;\n                        ++complete;\n                        finish();\n                    }\n                    function finish() {\n                        if (populating || complete < total) {\n                            return;\n                        }\n                        resolve(values);\n                    }\n                    function processItem(index, item) {\n                        ++total;\n                        if (isThenable(item)) {\n                            // If an item Promise rejects, this Promise is immediately rejected with the item\n                            // Promise's rejection error.\n                            item.then(fulfill.bind(null, index), reject);\n                        }\n                        else {\n                            Promise.resolve(item).then(fulfill.bind(null, index));\n                        }\n                    }\n                    let i = 0;\n                    for (const value of iterable) {\n                        processItem(i, value);\n                        i++;\n                    }\n                    populating = false;\n                    finish();\n                });\n            }\n            static race(iterable) {\n                return new this(function (resolve, reject) {\n                    for (const item of iterable) {\n                        if (item instanceof Promise) {\n                            // If a Promise item rejects, this Promise is immediately rejected with the item\n                            // Promise's rejection error.\n                            item.then(resolve, reject);\n                        }\n                        else {\n                            Promise.resolve(item).then(resolve);\n                        }\n                    }\n                });\n            }\n            static reject(reason) {\n                return new this(function (resolve, reject) {\n                    reject(reason);\n                });\n            }\n            static resolve(value) {\n                return new this(function (resolve) {\n                    resolve(value);\n                });\n            }\n            catch(onRejected) {\n                return this.then(undefined, onRejected);\n            }\n        },\n        _a[Symbol.species] = ShimPromise,\n        _a);\n}\nexport default ShimPromise;\nvar _a;\n//# sourceMappingURL=Promise.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/Promise.mjs\n// module id = ./node_modules/@dojo/framework/shim/Promise.mjs\n// module chunks = split-pane","import global from './global';\nimport { isArrayLike, ShimIterator } from './iterator';\nimport has from './support/has';\nimport './Symbol';\nexport let Set = global.Set;\nif (!true) {\n    Set = (_a = class Set {\n            constructor(iterable) {\n                this._setData = [];\n                this[Symbol.toStringTag] = 'Set';\n                if (iterable) {\n                    if (isArrayLike(iterable)) {\n                        for (let i = 0; i < iterable.length; i++) {\n                            this.add(iterable[i]);\n                        }\n                    }\n                    else {\n                        for (const value of iterable) {\n                            this.add(value);\n                        }\n                    }\n                }\n            }\n            add(value) {\n                if (this.has(value)) {\n                    return this;\n                }\n                this._setData.push(value);\n                return this;\n            }\n            clear() {\n                this._setData.length = 0;\n            }\n            delete(value) {\n                const idx = this._setData.indexOf(value);\n                if (idx === -1) {\n                    return false;\n                }\n                this._setData.splice(idx, 1);\n                return true;\n            }\n            entries() {\n                return new ShimIterator(this._setData.map((value) => [value, value]));\n            }\n            forEach(callbackfn, thisArg) {\n                const iterator = this.values();\n                let result = iterator.next();\n                while (!result.done) {\n                    callbackfn.call(thisArg, result.value, result.value, this);\n                    result = iterator.next();\n                }\n            }\n            has(value) {\n                return this._setData.indexOf(value) > -1;\n            }\n            keys() {\n                return new ShimIterator(this._setData);\n            }\n            get size() {\n                return this._setData.length;\n            }\n            values() {\n                return new ShimIterator(this._setData);\n            }\n            [Symbol.iterator]() {\n                return new ShimIterator(this._setData);\n            }\n        },\n        _a[Symbol.species] = _a,\n        _a);\n}\nexport default Set;\nvar _a;\n//# sourceMappingURL=Set.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/Set.mjs\n// module id = ./node_modules/@dojo/framework/shim/Set.mjs\n// module chunks = split-pane","import has from './support/has';\nimport global from './global';\nimport { getValueDescriptor } from './support/util';\nexport let Symbol = global.Symbol;\nif (!true) {\n    /**\n     * Throws if the value is not a symbol, used internally within the Shim\n     * @param  {any}    value The value to check\n     * @return {symbol}       Returns the symbol or throws\n     */\n    const validateSymbol = function validateSymbol(value) {\n        if (!isSymbol(value)) {\n            throw new TypeError(value + ' is not a symbol');\n        }\n        return value;\n    };\n    const defineProperties = Object.defineProperties;\n    const defineProperty = Object.defineProperty;\n    const create = Object.create;\n    const objPrototype = Object.prototype;\n    const globalSymbols = {};\n    const getSymbolName = (function () {\n        const created = create(null);\n        return function (desc) {\n            let postfix = 0;\n            let name;\n            while (created[String(desc) + (postfix || '')]) {\n                ++postfix;\n            }\n            desc += String(postfix || '');\n            created[desc] = true;\n            name = '@@' + desc;\n            // FIXME: Temporary guard until the duplicate execution when testing can be\n            // pinned down.\n            if (!Object.getOwnPropertyDescriptor(objPrototype, name)) {\n                defineProperty(objPrototype, name, {\n                    set: function (value) {\n                        defineProperty(this, name, getValueDescriptor(value));\n                    }\n                });\n            }\n            return name;\n        };\n    })();\n    const InternalSymbol = function Symbol(description) {\n        if (this instanceof InternalSymbol) {\n            throw new TypeError('TypeError: Symbol is not a constructor');\n        }\n        return Symbol(description);\n    };\n    Symbol = global.Symbol = function Symbol(description) {\n        if (this instanceof Symbol) {\n            throw new TypeError('TypeError: Symbol is not a constructor');\n        }\n        const sym = Object.create(InternalSymbol.prototype);\n        description = description === undefined ? '' : String(description);\n        return defineProperties(sym, {\n            __description__: getValueDescriptor(description),\n            __name__: getValueDescriptor(getSymbolName(description))\n        });\n    };\n    /* Decorate the Symbol function with the appropriate properties */\n    defineProperty(Symbol, 'for', getValueDescriptor(function (key) {\n        if (globalSymbols[key]) {\n            return globalSymbols[key];\n        }\n        return (globalSymbols[key] = Symbol(String(key)));\n    }));\n    defineProperties(Symbol, {\n        keyFor: getValueDescriptor(function (sym) {\n            let key;\n            validateSymbol(sym);\n            for (key in globalSymbols) {\n                if (globalSymbols[key] === sym) {\n                    return key;\n                }\n            }\n        }),\n        hasInstance: getValueDescriptor(Symbol.for('hasInstance'), false, false),\n        isConcatSpreadable: getValueDescriptor(Symbol.for('isConcatSpreadable'), false, false),\n        iterator: getValueDescriptor(Symbol.for('iterator'), false, false),\n        match: getValueDescriptor(Symbol.for('match'), false, false),\n        observable: getValueDescriptor(Symbol.for('observable'), false, false),\n        replace: getValueDescriptor(Symbol.for('replace'), false, false),\n        search: getValueDescriptor(Symbol.for('search'), false, false),\n        species: getValueDescriptor(Symbol.for('species'), false, false),\n        split: getValueDescriptor(Symbol.for('split'), false, false),\n        toPrimitive: getValueDescriptor(Symbol.for('toPrimitive'), false, false),\n        toStringTag: getValueDescriptor(Symbol.for('toStringTag'), false, false),\n        unscopables: getValueDescriptor(Symbol.for('unscopables'), false, false)\n    });\n    /* Decorate the InternalSymbol object */\n    defineProperties(InternalSymbol.prototype, {\n        constructor: getValueDescriptor(Symbol),\n        toString: getValueDescriptor(function () {\n            return this.__name__;\n        }, false, false)\n    });\n    /* Decorate the Symbol.prototype */\n    defineProperties(Symbol.prototype, {\n        toString: getValueDescriptor(function () {\n            return 'Symbol (' + validateSymbol(this).__description__ + ')';\n        }),\n        valueOf: getValueDescriptor(function () {\n            return validateSymbol(this);\n        })\n    });\n    defineProperty(Symbol.prototype, Symbol.toPrimitive, getValueDescriptor(function () {\n        return validateSymbol(this);\n    }));\n    defineProperty(Symbol.prototype, Symbol.toStringTag, getValueDescriptor('Symbol', false, false, true));\n    defineProperty(InternalSymbol.prototype, Symbol.toPrimitive, getValueDescriptor(Symbol.prototype[Symbol.toPrimitive], false, false, true));\n    defineProperty(InternalSymbol.prototype, Symbol.toStringTag, getValueDescriptor(Symbol.prototype[Symbol.toStringTag], false, false, true));\n}\n/**\n * A custom guard function that determines if an object is a symbol or not\n * @param  {any}       value The value to check to see if it is a symbol or not\n * @return {is symbol}       Returns true if a symbol or not (and narrows the type guard)\n */\nexport function isSymbol(value) {\n    return (value && (typeof value === 'symbol' || value['@@toStringTag'] === 'Symbol')) || false;\n}\n/**\n * Fill any missing well known symbols if the native Symbol is missing them\n */\n[\n    'hasInstance',\n    'isConcatSpreadable',\n    'iterator',\n    'species',\n    'replace',\n    'search',\n    'split',\n    'match',\n    'toPrimitive',\n    'toStringTag',\n    'unscopables',\n    'observable'\n].forEach((wellKnown) => {\n    if (!Symbol[wellKnown]) {\n        Object.defineProperty(Symbol, wellKnown, getValueDescriptor(Symbol.for(wellKnown), false, false));\n    }\n});\nexport default Symbol;\n//# sourceMappingURL=Symbol.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/Symbol.mjs\n// module id = ./node_modules/@dojo/framework/shim/Symbol.mjs\n// module chunks = split-pane","import global from './global';\nimport { isArrayLike } from './iterator';\nimport has from './support/has';\nimport './Symbol';\nexport let WeakMap = global.WeakMap;\nif (!true) {\n    const DELETED = {};\n    const getUID = function getUID() {\n        return Math.floor(Math.random() * 100000000);\n    };\n    const generateName = (function () {\n        let startId = Math.floor(Date.now() % 100000000);\n        return function generateName() {\n            return '__wm' + getUID() + (startId++ + '__');\n        };\n    })();\n    WeakMap = class WeakMap {\n        constructor(iterable) {\n            this[Symbol.toStringTag] = 'WeakMap';\n            this._name = generateName();\n            this._frozenEntries = [];\n            if (iterable) {\n                if (isArrayLike(iterable)) {\n                    for (let i = 0; i < iterable.length; i++) {\n                        const item = iterable[i];\n                        this.set(item[0], item[1]);\n                    }\n                }\n                else {\n                    for (const [key, value] of iterable) {\n                        this.set(key, value);\n                    }\n                }\n            }\n        }\n        _getFrozenEntryIndex(key) {\n            for (let i = 0; i < this._frozenEntries.length; i++) {\n                if (this._frozenEntries[i].key === key) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n        delete(key) {\n            if (key === undefined || key === null) {\n                return false;\n            }\n            const entry = key[this._name];\n            if (entry && entry.key === key && entry.value !== DELETED) {\n                entry.value = DELETED;\n                return true;\n            }\n            const frozenIndex = this._getFrozenEntryIndex(key);\n            if (frozenIndex >= 0) {\n                this._frozenEntries.splice(frozenIndex, 1);\n                return true;\n            }\n            return false;\n        }\n        get(key) {\n            if (key === undefined || key === null) {\n                return undefined;\n            }\n            const entry = key[this._name];\n            if (entry && entry.key === key && entry.value !== DELETED) {\n                return entry.value;\n            }\n            const frozenIndex = this._getFrozenEntryIndex(key);\n            if (frozenIndex >= 0) {\n                return this._frozenEntries[frozenIndex].value;\n            }\n        }\n        has(key) {\n            if (key === undefined || key === null) {\n                return false;\n            }\n            const entry = key[this._name];\n            if (Boolean(entry && entry.key === key && entry.value !== DELETED)) {\n                return true;\n            }\n            const frozenIndex = this._getFrozenEntryIndex(key);\n            if (frozenIndex >= 0) {\n                return true;\n            }\n            return false;\n        }\n        set(key, value) {\n            if (!key || (typeof key !== 'object' && typeof key !== 'function')) {\n                throw new TypeError('Invalid value used as weak map key');\n            }\n            let entry = key[this._name];\n            if (!entry || entry.key !== key) {\n                entry = Object.create(null, {\n                    key: { value: key }\n                });\n                if (Object.isFrozen(key)) {\n                    this._frozenEntries.push(entry);\n                }\n                else {\n                    Object.defineProperty(key, this._name, {\n                        value: entry\n                    });\n                }\n            }\n            entry.value = value;\n            return this;\n        }\n    };\n}\nexport default WeakMap;\n//# sourceMappingURL=WeakMap.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/WeakMap.mjs\n// module id = ./node_modules/@dojo/framework/shim/WeakMap.mjs\n// module chunks = split-pane","import global from './global';\nimport { isArrayLike, isIterable } from './iterator';\nimport { MAX_SAFE_INTEGER } from './number';\nimport has from './support/has';\nimport { wrapNative } from './support/util';\nexport let from;\n/**\n * Creates a new array from the function parameters.\n *\n * @param arguments Any number of arguments for the array\n * @return An array from the given arguments\n */\nexport let of;\n/* ES6 Array instance methods */\n/**\n * Copies data internally within an array or array-like object.\n *\n * @param target The target array-like object\n * @param offset The index to start copying values to; if negative, it counts backwards from length\n * @param start The first (inclusive) index to copy; if negative, it counts backwards from length\n * @param end The last (exclusive) index to copy; if negative, it counts backwards from length\n * @return The target\n */\nexport let copyWithin;\n/**\n * Fills elements of an array-like object with the specified value.\n *\n * @param target The target to fill\n * @param value The value to fill each element of the target with\n * @param start The first index to fill\n * @param end The (exclusive) index at which to stop filling\n * @return The filled target\n */\nexport let fill;\n/**\n * Finds and returns the first instance matching the callback or undefined if one is not found.\n *\n * @param target An array-like object\n * @param callback A function returning if the current value matches a criteria\n * @param thisArg The execution context for the find function\n * @return The first element matching the callback, or undefined if one does not exist\n */\nexport let find;\n/**\n * Performs a linear search and returns the first index whose value satisfies the passed callback,\n * or -1 if no values satisfy it.\n *\n * @param target An array-like object\n * @param callback A function returning true if the current value satisfies its criteria\n * @param thisArg The execution context for the find function\n * @return The first index whose value satisfies the passed callback, or -1 if no values satisfy it\n */\nexport let findIndex;\n/* ES7 Array instance methods */\n/**\n * Determines whether an array includes a given value\n *\n * @param target the target array-like object\n * @param searchElement the item to search for\n * @param fromIndex the starting index to search from\n * @return `true` if the array includes the element, otherwise `false`\n */\nexport let includes;\nif (true && true) {\n    from = global.Array.from;\n    of = global.Array.of;\n    copyWithin = wrapNative(global.Array.prototype.copyWithin);\n    fill = wrapNative(global.Array.prototype.fill);\n    find = wrapNative(global.Array.prototype.find);\n    findIndex = wrapNative(global.Array.prototype.findIndex);\n}\nelse {\n    // It is only older versions of Safari/iOS that have a bad fill implementation and so aren't in the wild\n    // To make things easier, if there is a bad fill implementation, the whole set of functions will be filled\n    /**\n     * Ensures a non-negative, non-infinite, safe integer.\n     *\n     * @param length The number to validate\n     * @return A proper length\n     */\n    const toLength = function toLength(length) {\n        if (isNaN(length)) {\n            return 0;\n        }\n        length = Number(length);\n        if (isFinite(length)) {\n            length = Math.floor(length);\n        }\n        // Ensure a non-negative, real, safe integer\n        return Math.min(Math.max(length, 0), MAX_SAFE_INTEGER);\n    };\n    /**\n     * From ES6 7.1.4 ToInteger()\n     *\n     * @param value A value to convert\n     * @return An integer\n     */\n    const toInteger = function toInteger(value) {\n        value = Number(value);\n        if (isNaN(value)) {\n            return 0;\n        }\n        if (value === 0 || !isFinite(value)) {\n            return value;\n        }\n        return (value > 0 ? 1 : -1) * Math.floor(Math.abs(value));\n    };\n    /**\n     * Normalizes an offset against a given length, wrapping it if negative.\n     *\n     * @param value The original offset\n     * @param length The total length to normalize against\n     * @return If negative, provide a distance from the end (length); otherwise provide a distance from 0\n     */\n    const normalizeOffset = function normalizeOffset(value, length) {\n        return value < 0 ? Math.max(length + value, 0) : Math.min(value, length);\n    };\n    from = function from(arrayLike, mapFunction, thisArg) {\n        if (arrayLike == null) {\n            throw new TypeError('from: requires an array-like object');\n        }\n        if (mapFunction && thisArg) {\n            mapFunction = mapFunction.bind(thisArg);\n        }\n        /* tslint:disable-next-line:variable-name */\n        const Constructor = this;\n        const length = toLength(arrayLike.length);\n        // Support extension\n        const array = typeof Constructor === 'function' ? Object(new Constructor(length)) : new Array(length);\n        if (!isArrayLike(arrayLike) && !isIterable(arrayLike)) {\n            return array;\n        }\n        // if this is an array and the normalized length is 0, just return an empty array. this prevents a problem\n        // with the iteration on IE when using a NaN array length.\n        if (isArrayLike(arrayLike)) {\n            if (length === 0) {\n                return [];\n            }\n            for (let i = 0; i < arrayLike.length; i++) {\n                array[i] = mapFunction ? mapFunction(arrayLike[i], i) : arrayLike[i];\n            }\n        }\n        else {\n            let i = 0;\n            for (const value of arrayLike) {\n                array[i] = mapFunction ? mapFunction(value, i) : value;\n                i++;\n            }\n        }\n        if (arrayLike.length !== undefined) {\n            array.length = length;\n        }\n        return array;\n    };\n    of = function of(...items) {\n        return Array.prototype.slice.call(items);\n    };\n    copyWithin = function copyWithin(target, offset, start, end) {\n        if (target == null) {\n            throw new TypeError('copyWithin: target must be an array-like object');\n        }\n        const length = toLength(target.length);\n        offset = normalizeOffset(toInteger(offset), length);\n        start = normalizeOffset(toInteger(start), length);\n        end = normalizeOffset(end === undefined ? length : toInteger(end), length);\n        let count = Math.min(end - start, length - offset);\n        let direction = 1;\n        if (offset > start && offset < start + count) {\n            direction = -1;\n            start += count - 1;\n            offset += count - 1;\n        }\n        while (count > 0) {\n            if (start in target) {\n                target[offset] = target[start];\n            }\n            else {\n                delete target[offset];\n            }\n            offset += direction;\n            start += direction;\n            count--;\n        }\n        return target;\n    };\n    fill = function fill(target, value, start, end) {\n        const length = toLength(target.length);\n        let i = normalizeOffset(toInteger(start), length);\n        end = normalizeOffset(end === undefined ? length : toInteger(end), length);\n        while (i < end) {\n            target[i++] = value;\n        }\n        return target;\n    };\n    find = function find(target, callback, thisArg) {\n        const index = findIndex(target, callback, thisArg);\n        return index !== -1 ? target[index] : undefined;\n    };\n    findIndex = function findIndex(target, callback, thisArg) {\n        const length = toLength(target.length);\n        if (!callback) {\n            throw new TypeError('find: second argument must be a function');\n        }\n        if (thisArg) {\n            callback = callback.bind(thisArg);\n        }\n        for (let i = 0; i < length; i++) {\n            if (callback(target[i], i, target)) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\nif (true) {\n    includes = wrapNative(global.Array.prototype.includes);\n}\nelse {\n    /**\n     * Ensures a non-negative, non-infinite, safe integer.\n     *\n     * @param length The number to validate\n     * @return A proper length\n     */\n    const toLength = function toLength(length) {\n        length = Number(length);\n        if (isNaN(length)) {\n            return 0;\n        }\n        if (isFinite(length)) {\n            length = Math.floor(length);\n        }\n        // Ensure a non-negative, real, safe integer\n        return Math.min(Math.max(length, 0), MAX_SAFE_INTEGER);\n    };\n    includes = function includes(target, searchElement, fromIndex = 0) {\n        let len = toLength(target.length);\n        for (let i = fromIndex; i < len; ++i) {\n            const currentElement = target[i];\n            if (searchElement === currentElement ||\n                (searchElement !== searchElement && currentElement !== currentElement)) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\n//# sourceMappingURL=array.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/array.mjs\n// module id = ./node_modules/@dojo/framework/shim/array.mjs\n// module chunks = split-pane","const globalObject = (function () {\n    // the only reliable means to get the global object is\n    // `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n})();\nexport default globalObject;\n//# sourceMappingURL=global.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/global.mjs\n// module id = ./node_modules/@dojo/framework/shim/global.mjs\n// module chunks = split-pane","import './Symbol';\nimport { HIGH_SURROGATE_MAX, HIGH_SURROGATE_MIN } from './string';\nconst staticDone = { done: true, value: undefined };\n/**\n * A class that _shims_ an iterator interface on array like objects.\n */\nexport class ShimIterator {\n    constructor(list) {\n        this._nextIndex = -1;\n        if (isIterable(list)) {\n            this._nativeIterator = list[Symbol.iterator]();\n        }\n        else {\n            this._list = list;\n        }\n    }\n    /**\n     * Return the next iteration result for the Iterator\n     */\n    next() {\n        if (this._nativeIterator) {\n            return this._nativeIterator.next();\n        }\n        if (!this._list) {\n            return staticDone;\n        }\n        if (++this._nextIndex < this._list.length) {\n            return {\n                done: false,\n                value: this._list[this._nextIndex]\n            };\n        }\n        return staticDone;\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n}\n/**\n * A type guard for checking if something has an Iterable interface\n *\n * @param value The value to type guard against\n */\nexport function isIterable(value) {\n    return value && typeof value[Symbol.iterator] === 'function';\n}\n/**\n * A type guard for checking if something is ArrayLike\n *\n * @param value The value to type guard against\n */\nexport function isArrayLike(value) {\n    return value && typeof value.length === 'number';\n}\n/**\n * Returns the iterator for an object\n *\n * @param iterable The iterable object to return the iterator for\n */\nexport function get(iterable) {\n    if (isIterable(iterable)) {\n        return iterable[Symbol.iterator]();\n    }\n    else if (isArrayLike(iterable)) {\n        return new ShimIterator(iterable);\n    }\n}\n/**\n * Shims the functionality of `for ... of` blocks\n *\n * @param iterable The object the provides an interator interface\n * @param callback The callback which will be called for each item of the iterable\n * @param thisArg Optional scope to pass the callback\n */\nexport function forOf(iterable, callback, thisArg) {\n    let broken = false;\n    function doBreak() {\n        broken = true;\n    }\n    /* We need to handle iteration of double byte strings properly */\n    if (isArrayLike(iterable) && typeof iterable === 'string') {\n        const l = iterable.length;\n        for (let i = 0; i < l; ++i) {\n            let char = iterable[i];\n            if (i + 1 < l) {\n                const code = char.charCodeAt(0);\n                if (code >= HIGH_SURROGATE_MIN && code <= HIGH_SURROGATE_MAX) {\n                    char += iterable[++i];\n                }\n            }\n            callback.call(thisArg, char, iterable, doBreak);\n            if (broken) {\n                return;\n            }\n        }\n    }\n    else {\n        const iterator = get(iterable);\n        if (iterator) {\n            let result = iterator.next();\n            while (!result.done) {\n                callback.call(thisArg, result.value, iterable, doBreak);\n                if (broken) {\n                    return;\n                }\n                result = iterator.next();\n            }\n        }\n    }\n}\n//# sourceMappingURL=iterator.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/iterator.mjs\n// module id = ./node_modules/@dojo/framework/shim/iterator.mjs\n// module chunks = split-pane","import global from './global';\n/**\n * The smallest interval between two representable numbers.\n */\nexport const EPSILON = 1;\n/**\n * The maximum safe integer in JavaScript\n */\nexport const MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n/**\n * The minimum safe integer in JavaScript\n */\nexport const MIN_SAFE_INTEGER = -MAX_SAFE_INTEGER;\n/**\n * Determines whether the passed value is NaN without coersion.\n *\n * @param value The value to test\n * @return true if the value is NaN, false if it is not\n */\nexport function isNaN(value) {\n    return typeof value === 'number' && global.isNaN(value);\n}\n/**\n * Determines whether the passed value is a finite number without coersion.\n *\n * @param value The value to test\n * @return true if the value is finite, false if it is not\n */\nexport function isFinite(value) {\n    return typeof value === 'number' && global.isFinite(value);\n}\n/**\n * Determines whether the passed value is an integer.\n *\n * @param value The value to test\n * @return true if the value is an integer, false if it is not\n */\nexport function isInteger(value) {\n    return isFinite(value) && Math.floor(value) === value;\n}\n/**\n * Determines whether the passed value is an integer that is 'safe,' meaning:\n *   1. it can be expressed as an IEEE-754 double precision number\n *   2. it has a one-to-one mapping to a mathematical integer, meaning its\n *      IEEE-754 representation cannot be the result of rounding any other\n *      integer to fit the IEEE-754 representation\n *\n * @param value The value to test\n * @return true if the value is an integer, false if it is not\n */\nexport function isSafeInteger(value) {\n    return isInteger(value) && Math.abs(value) <= MAX_SAFE_INTEGER;\n}\n//# sourceMappingURL=number.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/number.mjs\n// module id = ./node_modules/@dojo/framework/shim/number.mjs\n// module chunks = split-pane","import global from './global';\nimport has from './support/has';\nimport { isSymbol } from './Symbol';\nexport let assign;\n/**\n * Gets the own property descriptor of the specified object.\n * An own property descriptor is one that is defined directly on the object and is not\n * inherited from the object's prototype.\n * @param o Object that contains the property.\n * @param p Name of the property.\n */\nexport let getOwnPropertyDescriptor;\n/**\n * Returns the names of the own properties of an object. The own properties of an object are those that are defined directly\n * on that object, and are not inherited from the object's prototype. The properties of an object include both fields (objects) and functions.\n * @param o Object that contains the own properties.\n */\nexport let getOwnPropertyNames;\n/**\n * Returns an array of all symbol properties found directly on object o.\n * @param o Object to retrieve the symbols from.\n */\nexport let getOwnPropertySymbols;\n/**\n * Returns true if the values are the same value, false otherwise.\n * @param value1 The first value.\n * @param value2 The second value.\n */\nexport let is;\n/**\n * Returns the names of the enumerable properties and methods of an object.\n * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n */\nexport let keys;\n/* ES7 Object static methods */\nexport let getOwnPropertyDescriptors;\nexport let entries;\nexport let values;\nif (true) {\n    const globalObject = global.Object;\n    assign = globalObject.assign;\n    getOwnPropertyDescriptor = globalObject.getOwnPropertyDescriptor;\n    getOwnPropertyNames = globalObject.getOwnPropertyNames;\n    getOwnPropertySymbols = globalObject.getOwnPropertySymbols;\n    is = globalObject.is;\n    keys = globalObject.keys;\n}\nelse {\n    keys = function symbolAwareKeys(o) {\n        return Object.keys(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n    };\n    assign = function assign(target, ...sources) {\n        if (target == null) {\n            // TypeError if undefined or null\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        const to = Object(target);\n        sources.forEach((nextSource) => {\n            if (nextSource) {\n                // Skip over if undefined or null\n                keys(nextSource).forEach((nextKey) => {\n                    to[nextKey] = nextSource[nextKey];\n                });\n            }\n        });\n        return to;\n    };\n    getOwnPropertyDescriptor = function (o, prop) {\n        if (isSymbol(prop)) {\n            return Object.getOwnPropertyDescriptor(o, prop);\n        }\n        else {\n            return Object.getOwnPropertyDescriptor(o, prop);\n        }\n    };\n    getOwnPropertyNames = function getOwnPropertyNames(o) {\n        return Object.getOwnPropertyNames(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n    };\n    getOwnPropertySymbols = function getOwnPropertySymbols(o) {\n        return Object.getOwnPropertyNames(o)\n            .filter((key) => Boolean(key.match(/^@@.+/)))\n            .map((key) => Symbol.for(key.substring(2)));\n    };\n    is = function is(value1, value2) {\n        if (value1 === value2) {\n            return value1 !== 0 || 1 / value1 === 1 / value2; // -0\n        }\n        return value1 !== value1 && value2 !== value2; // NaN\n    };\n}\nif (true) {\n    const globalObject = global.Object;\n    getOwnPropertyDescriptors = globalObject.getOwnPropertyDescriptors;\n    entries = globalObject.entries;\n    values = globalObject.values;\n}\nelse {\n    getOwnPropertyDescriptors = function getOwnPropertyDescriptors(o) {\n        return getOwnPropertyNames(o).reduce((previous, key) => {\n            previous[key] = getOwnPropertyDescriptor(o, key);\n            return previous;\n        }, {});\n    };\n    entries = function entries(o) {\n        return keys(o).map((key) => [key, o[key]]);\n    };\n    values = function values(o) {\n        return keys(o).map((key) => o[key]);\n    };\n}\n//# sourceMappingURL=object.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/object.mjs\n// module id = ./node_modules/@dojo/framework/shim/object.mjs\n// module chunks = split-pane","import global from './global';\nimport has from './support/has';\nimport { wrapNative } from './support/util';\n/**\n * The minimum location of high surrogates\n */\nexport const HIGH_SURROGATE_MIN = 0xd800;\n/**\n * The maximum location of high surrogates\n */\nexport const HIGH_SURROGATE_MAX = 0xdbff;\n/**\n * The minimum location of low surrogates\n */\nexport const LOW_SURROGATE_MIN = 0xdc00;\n/**\n * The maximum location of low surrogates\n */\nexport const LOW_SURROGATE_MAX = 0xdfff;\n/* ES6 static methods */\n/**\n * Return the String value whose elements are, in order, the elements in the List elements.\n * If length is 0, the empty string is returned.\n * @param codePoints The code points to generate the string\n */\nexport let fromCodePoint;\n/**\n * `raw` is intended for use as a tag function of a Tagged Template String. When called\n * as such the first argument will be a well formed template call site object and the rest\n * parameter will contain the substitution values.\n * @param template A well-formed template string call site representation.\n * @param substitutions A set of substitution values.\n */\nexport let raw;\n/* ES6 instance methods */\n/**\n * Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\n * value of the UTF-16 encoded code point starting at the string element at position pos in\n * the String resulting from converting this object to a String.\n * If there is no element at that position, the result is undefined.\n * If a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.\n */\nexport let codePointAt;\n/**\n * Returns true if the sequence of elements of searchString converted to a String is the\n * same as the corresponding elements of this object (converted to a String) starting at\n * endPosition – length(this). Otherwise returns false.\n */\nexport let endsWith;\n/**\n * Returns true if searchString appears as a substring of the result of converting this\n * object to a String, at one or more positions that are\n * greater than or equal to position; otherwise, returns false.\n * @param target The target string\n * @param searchString search string\n * @param position If position is undefined, 0 is assumed, so as to search all of the String.\n */\nexport let includes;\n/**\n * Returns the String value result of normalizing the string into the normalization form\n * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n * @param target The target string\n * @param form Applicable values: \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", If not specified default\n * is \"NFC\"\n */\nexport let normalize;\n/**\n * Returns a String value that is made from count copies appended together. If count is 0,\n * T is the empty String is returned.\n * @param count number of copies to append\n */\nexport let repeat;\n/**\n * Returns true if the sequence of elements of searchString converted to a String is the\n * same as the corresponding elements of this object (converted to a String) starting at\n * position. Otherwise returns false.\n */\nexport let startsWith;\n/* ES7 instance methods */\n/**\n * Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\n * The padding is applied from the end (right) of the current string.\n *\n * @param target The target string\n * @param maxLength The length of the resulting string once the current string has been padded.\n *        If this parameter is smaller than the current string's length, the current string will be returned as it is.\n *\n * @param fillString The string to pad the current string with.\n *        If this string is too long, it will be truncated and the left-most part will be applied.\n *        The default value for this parameter is \" \" (U+0020).\n */\nexport let padEnd;\n/**\n * Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\n * The padding is applied from the start (left) of the current string.\n *\n * @param target The target string\n * @param maxLength The length of the resulting string once the current string has been padded.\n *        If this parameter is smaller than the current string's length, the current string will be returned as it is.\n *\n * @param fillString The string to pad the current string with.\n *        If this string is too long, it will be truncated and the left-most part will be applied.\n *        The default value for this parameter is \" \" (U+0020).\n */\nexport let padStart;\nif (true && true) {\n    fromCodePoint = global.String.fromCodePoint;\n    raw = global.String.raw;\n    codePointAt = wrapNative(global.String.prototype.codePointAt);\n    endsWith = wrapNative(global.String.prototype.endsWith);\n    includes = wrapNative(global.String.prototype.includes);\n    normalize = wrapNative(global.String.prototype.normalize);\n    repeat = wrapNative(global.String.prototype.repeat);\n    startsWith = wrapNative(global.String.prototype.startsWith);\n}\nelse {\n    /**\n     * Validates that text is defined, and normalizes position (based on the given default if the input is NaN).\n     * Used by startsWith, includes, and endsWith.\n     *\n     * @return Normalized position.\n     */\n    const normalizeSubstringArgs = function (name, text, search, position, isEnd = false) {\n        if (text == null) {\n            throw new TypeError('string.' + name + ' requires a valid string to search against.');\n        }\n        const length = text.length;\n        position = position !== position ? (isEnd ? length : 0) : position;\n        return [text, String(search), Math.min(Math.max(position, 0), length)];\n    };\n    fromCodePoint = function fromCodePoint(...codePoints) {\n        // Adapted from https://github.com/mathiasbynens/String.fromCodePoint\n        const length = arguments.length;\n        if (!length) {\n            return '';\n        }\n        const fromCharCode = String.fromCharCode;\n        const MAX_SIZE = 0x4000;\n        let codeUnits = [];\n        let index = -1;\n        let result = '';\n        while (++index < length) {\n            let codePoint = Number(arguments[index]);\n            // Code points must be finite integers within the valid range\n            let isValid = isFinite(codePoint) && Math.floor(codePoint) === codePoint && codePoint >= 0 && codePoint <= 0x10ffff;\n            if (!isValid) {\n                throw RangeError('string.fromCodePoint: Invalid code point ' + codePoint);\n            }\n            if (codePoint <= 0xffff) {\n                // BMP code point\n                codeUnits.push(codePoint);\n            }\n            else {\n                // Astral code point; split in surrogate halves\n                // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n                codePoint -= 0x10000;\n                let highSurrogate = (codePoint >> 10) + HIGH_SURROGATE_MIN;\n                let lowSurrogate = (codePoint % 0x400) + LOW_SURROGATE_MIN;\n                codeUnits.push(highSurrogate, lowSurrogate);\n            }\n            if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n                result += fromCharCode.apply(null, codeUnits);\n                codeUnits.length = 0;\n            }\n        }\n        return result;\n    };\n    raw = function raw(callSite, ...substitutions) {\n        let rawStrings = callSite.raw;\n        let result = '';\n        let numSubstitutions = substitutions.length;\n        if (callSite == null || callSite.raw == null) {\n            throw new TypeError('string.raw requires a valid callSite object with a raw value');\n        }\n        for (let i = 0, length = rawStrings.length; i < length; i++) {\n            result += rawStrings[i] + (i < numSubstitutions && i < length - 1 ? substitutions[i] : '');\n        }\n        return result;\n    };\n    codePointAt = function codePointAt(text, position = 0) {\n        // Adapted from https://github.com/mathiasbynens/String.prototype.codePointAt\n        if (text == null) {\n            throw new TypeError('string.codePointAt requries a valid string.');\n        }\n        const length = text.length;\n        if (position !== position) {\n            position = 0;\n        }\n        if (position < 0 || position >= length) {\n            return undefined;\n        }\n        // Get the first code unit\n        const first = text.charCodeAt(position);\n        if (first >= HIGH_SURROGATE_MIN && first <= HIGH_SURROGATE_MAX && length > position + 1) {\n            // Start of a surrogate pair (high surrogate and there is a next code unit); check for low surrogate\n            // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            const second = text.charCodeAt(position + 1);\n            if (second >= LOW_SURROGATE_MIN && second <= LOW_SURROGATE_MAX) {\n                return (first - HIGH_SURROGATE_MIN) * 0x400 + second - LOW_SURROGATE_MIN + 0x10000;\n            }\n        }\n        return first;\n    };\n    endsWith = function endsWith(text, search, endPosition) {\n        if (search === '') {\n            return true;\n        }\n        if (typeof endPosition === 'undefined') {\n            endPosition = text.length;\n        }\n        else if (endPosition === null || isNaN(endPosition)) {\n            return false;\n        }\n        [text, search, endPosition] = normalizeSubstringArgs('endsWith', text, search, endPosition, true);\n        const start = endPosition - search.length;\n        if (start < 0) {\n            return false;\n        }\n        return text.slice(start, endPosition) === search;\n    };\n    includes = function includes(text, search, position = 0) {\n        [text, search, position] = normalizeSubstringArgs('includes', text, search, position);\n        return text.indexOf(search, position) !== -1;\n    };\n    repeat = function repeat(text, count = 0) {\n        // Adapted from https://github.com/mathiasbynens/String.prototype.repeat\n        if (text == null) {\n            throw new TypeError('string.repeat requires a valid string.');\n        }\n        if (count !== count) {\n            count = 0;\n        }\n        if (count < 0 || count === Infinity) {\n            throw new RangeError('string.repeat requires a non-negative finite count.');\n        }\n        let result = '';\n        while (count) {\n            if (count % 2) {\n                result += text;\n            }\n            if (count > 1) {\n                text += text;\n            }\n            count >>= 1;\n        }\n        return result;\n    };\n    startsWith = function startsWith(text, search, position = 0) {\n        search = String(search);\n        [text, search, position] = normalizeSubstringArgs('startsWith', text, search, position);\n        const end = position + search.length;\n        if (end > text.length) {\n            return false;\n        }\n        return text.slice(position, end) === search;\n    };\n}\nif (true) {\n    padEnd = wrapNative(global.String.prototype.padEnd);\n    padStart = wrapNative(global.String.prototype.padStart);\n}\nelse {\n    padEnd = function padEnd(text, maxLength, fillString = ' ') {\n        if (text === null || text === undefined) {\n            throw new TypeError('string.repeat requires a valid string.');\n        }\n        if (maxLength === Infinity) {\n            throw new RangeError('string.padEnd requires a non-negative finite count.');\n        }\n        if (maxLength === null || maxLength === undefined || maxLength < 0) {\n            maxLength = 0;\n        }\n        let strText = String(text);\n        const padding = maxLength - strText.length;\n        if (padding > 0) {\n            strText +=\n                repeat(fillString, Math.floor(padding / fillString.length)) +\n                    fillString.slice(0, padding % fillString.length);\n        }\n        return strText;\n    };\n    padStart = function padStart(text, maxLength, fillString = ' ') {\n        if (text === null || text === undefined) {\n            throw new TypeError('string.repeat requires a valid string.');\n        }\n        if (maxLength === Infinity) {\n            throw new RangeError('string.padStart requires a non-negative finite count.');\n        }\n        if (maxLength === null || maxLength === undefined || maxLength < 0) {\n            maxLength = 0;\n        }\n        let strText = String(text);\n        const padding = maxLength - strText.length;\n        if (padding > 0) {\n            strText =\n                repeat(fillString, Math.floor(padding / fillString.length)) +\n                    fillString.slice(0, padding % fillString.length) +\n                    strText;\n        }\n        return strText;\n    };\n}\n//# sourceMappingURL=string.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/string.mjs\n// module id = ./node_modules/@dojo/framework/shim/string.mjs\n// module chunks = split-pane","import has, { add } from '../../has/has';\nimport global from '../global';\nexport default has;\nexport * from '../../has/has';\n/* ECMAScript 6 and 7 Features */\n/* Array */\nadd('es6-array', () => {\n    return (['from', 'of'].every((key) => key in global.Array) &&\n        ['findIndex', 'find', 'copyWithin'].every((key) => key in global.Array.prototype));\n}, true);\nadd('es6-array-fill', () => {\n    if ('fill' in global.Array.prototype) {\n        /* Some versions of Safari do not properly implement this */\n        return [1].fill(9, Number.POSITIVE_INFINITY)[0] === 1;\n    }\n    return false;\n}, true);\nadd('es7-array', () => 'includes' in global.Array.prototype, true);\n/* Map */\nadd('es6-map', () => {\n    if (typeof global.Map === 'function') {\n        /*\n    IE11 and older versions of Safari are missing critical ES6 Map functionality\n    We wrap this in a try/catch because sometimes the Map constructor exists, but does not\n    take arguments (iOS 8.4)\n     */\n        try {\n            const map = new global.Map([[0, 1]]);\n            return map.has(0) &&\n                typeof map.keys === 'function' &&\n                true &&\n                typeof map.values === 'function' &&\n                typeof map.entries === 'function';\n        }\n        catch (e) {\n            /* istanbul ignore next: not testing on iOS at the moment */\n            return false;\n        }\n    }\n    return false;\n}, true);\n/* Math */\nadd('es6-math', () => {\n    return [\n        'clz32',\n        'sign',\n        'log10',\n        'log2',\n        'log1p',\n        'expm1',\n        'cosh',\n        'sinh',\n        'tanh',\n        'acosh',\n        'asinh',\n        'atanh',\n        'trunc',\n        'fround',\n        'cbrt',\n        'hypot'\n    ].every((name) => typeof global.Math[name] === 'function');\n}, true);\nadd('es6-math-imul', () => {\n    if ('imul' in global.Math) {\n        /* Some versions of Safari on ios do not properly implement this */\n        return Math.imul(0xffffffff, 5) === -5;\n    }\n    return false;\n}, true);\n/* Object */\nadd('es6-object', () => {\n    return true &&\n        ['assign', 'is', 'getOwnPropertySymbols', 'setPrototypeOf'].every((name) => typeof global.Object[name] === 'function');\n}, true);\nadd('es2017-object', () => {\n    return ['values', 'entries', 'getOwnPropertyDescriptors'].every((name) => typeof global.Object[name] === 'function');\n}, true);\n/* Observable */\nadd('es-observable', () => typeof global.Observable !== 'undefined', true);\n/* Promise */\nadd('es6-promise', () => typeof global.Promise !== 'undefined' && true, true);\n/* Set */\nadd('es6-set', () => {\n    if (typeof global.Set === 'function') {\n        /* IE11 and older versions of Safari are missing critical ES6 Set functionality */\n        const set = new global.Set([1]);\n        return set.has(1) && 'keys' in set && typeof set.keys === 'function' && true;\n    }\n    return false;\n}, true);\n/* String */\nadd('es6-string', () => {\n    return ([\n        /* static methods */\n        'fromCodePoint'\n    ].every((key) => typeof global.String[key] === 'function') &&\n        [\n            /* instance methods */\n            'codePointAt',\n            'normalize',\n            'repeat',\n            'startsWith',\n            'endsWith',\n            'includes'\n        ].every((key) => typeof global.String.prototype[key] === 'function'));\n}, true);\nadd('es6-string-raw', () => {\n    function getCallSite(callSite, ...substitutions) {\n        const result = [...callSite];\n        result.raw = callSite.raw;\n        return result;\n    }\n    if ('raw' in global.String) {\n        let b = 1;\n        let callSite = getCallSite `a\\n${b}`;\n        callSite.raw = ['a\\\\n'];\n        const supportsTrunc = global.String.raw(callSite, 42) === 'a\\\\n';\n        return supportsTrunc;\n    }\n    return false;\n}, true);\nadd('es2017-string', () => {\n    return ['padStart', 'padEnd'].every((key) => typeof global.String.prototype[key] === 'function');\n}, true);\n/* Symbol */\nadd('es6-symbol', () => typeof global.Symbol !== 'undefined' && typeof Symbol() === 'symbol', true);\n/* WeakMap */\nadd('es6-weakmap', () => {\n    if (typeof global.WeakMap !== 'undefined') {\n        /* IE11 and older versions of Safari are missing critical ES6 Map functionality */\n        const key1 = {};\n        const key2 = {};\n        const map = new global.WeakMap([[key1, 1]]);\n        Object.freeze(key1);\n        return map.get(key1) === 1 && map.set(key2, 2) === map && true;\n    }\n    return false;\n}, true);\n/* Miscellaneous features */\nadd('microtasks', () => true || false || true, true);\nadd('postmessage', () => {\n    // If window is undefined, and we have postMessage, it probably means we're in a web worker. Web workers have\n    // post message but it doesn't work how we expect it to, so it's best just to pretend it doesn't exist.\n    return typeof global.window !== 'undefined' && typeof global.postMessage === 'function';\n}, true);\nadd('raf', () => typeof global.requestAnimationFrame === 'function', true);\nadd('setimmediate', () => typeof global.setImmediate !== 'undefined', true);\n/* DOM Features */\nadd('dom-mutationobserver', () => {\n    if (true && Boolean(global.MutationObserver || global.WebKitMutationObserver)) {\n        // IE11 has an unreliable MutationObserver implementation where setProperty() does not\n        // generate a mutation event, observers can crash, and the queue does not drain\n        // reliably. The following feature test was adapted from\n        // https://gist.github.com/t10ko/4aceb8c71681fdb275e33efe5e576b14\n        const example = document.createElement('div');\n        /* tslint:disable-next-line:variable-name */\n        const HostMutationObserver = global.MutationObserver || global.WebKitMutationObserver;\n        const observer = new HostMutationObserver(function () { });\n        observer.observe(example, { attributes: true });\n        example.style.setProperty('display', 'block');\n        return Boolean(observer.takeRecords().length);\n    }\n    return false;\n}, true);\nadd('dom-webanimation', () => true && global.Animation !== undefined && global.KeyframeEffect !== undefined, true);\nadd('abort-controller', () => typeof global.AbortController !== 'undefined');\nadd('abort-signal', () => typeof global.AbortSignal !== 'undefined');\n//# sourceMappingURL=has.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/support/has.mjs\n// module id = ./node_modules/@dojo/framework/shim/support/has.mjs\n// module chunks = split-pane","import global from '../global';\nimport has from './has';\nfunction executeTask(item) {\n    if (item && item.isActive && item.callback) {\n        item.callback();\n    }\n}\nfunction getQueueHandle(item, destructor) {\n    return {\n        destroy: function () {\n            this.destroy = function () { };\n            item.isActive = false;\n            item.callback = null;\n            if (destructor) {\n                destructor();\n            }\n        }\n    };\n}\nlet checkMicroTaskQueue;\nlet microTasks;\n/**\n * Schedules a callback to the macrotask queue.\n *\n * @param callback the function to be queued and later executed.\n * @returns An object with a `destroy` method that, when called, prevents the registered callback from executing.\n */\nexport const queueTask = (function () {\n    let destructor;\n    let enqueue;\n    // Since the IE implementation of `setImmediate` is not flawless, we will test for `postMessage` first.\n    if (true) {\n        const queue = [];\n        global.addEventListener('message', function (event) {\n            // Confirm that the event was triggered by the current window and by this particular implementation.\n            if (event.source === global && event.data === 'dojo-queue-message') {\n                event.stopPropagation();\n                if (queue.length) {\n                    executeTask(queue.shift());\n                }\n            }\n        });\n        enqueue = function (item) {\n            queue.push(item);\n            global.postMessage('dojo-queue-message', '*');\n        };\n    }\n    else if (false) {\n        destructor = global.clearImmediate;\n        enqueue = function (item) {\n            return setImmediate(executeTask.bind(null, item));\n        };\n    }\n    else {\n        destructor = global.clearTimeout;\n        enqueue = function (item) {\n            return setTimeout(executeTask.bind(null, item), 0);\n        };\n    }\n    function queueTask(callback) {\n        const item = {\n            isActive: true,\n            callback: callback\n        };\n        const id = enqueue(item);\n        return getQueueHandle(item, destructor &&\n            function () {\n                destructor(id);\n            });\n    }\n    // TODO: Use aspect.before when it is available.\n    return true\n        ? queueTask\n        : function (callback) {\n            checkMicroTaskQueue();\n            return queueTask(callback);\n        };\n})();\n// When no mechanism for registering microtasks is exposed by the environment, microtasks will\n// be queued and then executed in a single macrotask before the other macrotasks are executed.\nif (!true) {\n    let isMicroTaskQueued = false;\n    microTasks = [];\n    checkMicroTaskQueue = function () {\n        if (!isMicroTaskQueued) {\n            isMicroTaskQueued = true;\n            queueTask(function () {\n                isMicroTaskQueued = false;\n                if (microTasks.length) {\n                    let item;\n                    while ((item = microTasks.shift())) {\n                        executeTask(item);\n                    }\n                }\n            });\n        }\n    };\n}\n/**\n * Schedules an animation task with `window.requestAnimationFrame` if it exists, or with `queueTask` otherwise.\n *\n * Since requestAnimationFrame's behavior does not match that expected from `queueTask`, it is not used there.\n * However, at times it makes more sense to delegate to requestAnimationFrame; hence the following method.\n *\n * @param callback the function to be queued and later executed.\n * @returns An object with a `destroy` method that, when called, prevents the registered callback from executing.\n */\nexport const queueAnimationTask = (function () {\n    if (!true) {\n        return queueTask;\n    }\n    function queueAnimationTask(callback) {\n        const item = {\n            isActive: true,\n            callback: callback\n        };\n        const rafId = requestAnimationFrame(executeTask.bind(null, item));\n        return getQueueHandle(item, function () {\n            cancelAnimationFrame(rafId);\n        });\n    }\n    // TODO: Use aspect.before when it is available.\n    return true\n        ? queueAnimationTask\n        : function (callback) {\n            checkMicroTaskQueue();\n            return queueAnimationTask(callback);\n        };\n})();\n/**\n * Schedules a callback to the microtask queue.\n *\n * Any callbacks registered with `queueMicroTask` will be executed before the next macrotask. If no native\n * mechanism for scheduling macrotasks is exposed, then any callbacks will be fired before any macrotask\n * registered with `queueTask` or `queueAnimationTask`.\n *\n * @param callback the function to be queued and later executed.\n * @returns An object with a `destroy` method that, when called, prevents the registered callback from executing.\n */\nexport let queueMicroTask = (function () {\n    let enqueue;\n    if (false) {\n        enqueue = function (item) {\n            global.process.nextTick(executeTask.bind(null, item));\n        };\n    }\n    else if (true) {\n        enqueue = function (item) {\n            global.Promise.resolve(item).then(executeTask);\n        };\n    }\n    else if (true) {\n        /* tslint:disable-next-line:variable-name */\n        const HostMutationObserver = global.MutationObserver || global.WebKitMutationObserver;\n        const node = document.createElement('div');\n        const queue = [];\n        const observer = new HostMutationObserver(function () {\n            while (queue.length > 0) {\n                const item = queue.shift();\n                if (item && item.isActive && item.callback) {\n                    item.callback();\n                }\n            }\n        });\n        observer.observe(node, { attributes: true });\n        enqueue = function (item) {\n            queue.push(item);\n            node.setAttribute('queueStatus', '1');\n        };\n    }\n    else {\n        enqueue = function (item) {\n            checkMicroTaskQueue();\n            microTasks.push(item);\n        };\n    }\n    return function (callback) {\n        const item = {\n            isActive: true,\n            callback: callback\n        };\n        enqueue(item);\n        return getQueueHandle(item);\n    };\n})();\n//# sourceMappingURL=queue.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/support/queue.mjs\n// module id = ./node_modules/@dojo/framework/shim/support/queue.mjs\n// module chunks = split-pane","/**\n * Helper function to generate a value property descriptor\n *\n * @param value        The value the property descriptor should be set to\n * @param enumerable   If the property should be enumberable, defaults to false\n * @param writable     If the property should be writable, defaults to true\n * @param configurable If the property should be configurable, defaults to true\n * @return             The property descriptor object\n */\nexport function getValueDescriptor(value, enumerable = false, writable = true, configurable = true) {\n    return {\n        value: value,\n        enumerable: enumerable,\n        writable: writable,\n        configurable: configurable\n    };\n}\nexport function wrapNative(nativeFunction) {\n    return function (target, ...args) {\n        return nativeFunction.apply(target, args);\n    };\n}\n//# sourceMappingURL=util.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/shim/support/util.mjs\n// module id = ./node_modules/@dojo/framework/shim/support/util.mjs\n// module chunks = split-pane","import { Evented } from '../core/Evented';\nexport class Injector extends Evented {\n    constructor(payload) {\n        super();\n        this._payload = payload;\n    }\n    setInvalidator(invalidator) {\n        this._invalidator = invalidator;\n    }\n    get() {\n        return this._payload;\n    }\n    set(payload) {\n        this._payload = payload;\n        if (this._invalidator) {\n            this._invalidator();\n        }\n    }\n}\nexport default Injector;\n//# sourceMappingURL=Injector.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/Injector.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/Injector.mjs\n// module chunks = split-pane","import { Evented } from '../core/Evented';\nimport Map from '../shim/Map';\n/**\n * Enum to identify the type of event.\n * Listening to 'Projector' will notify when projector is created or updated\n * Listening to 'Widget' will notify when widget root is created or updated\n */\nexport var NodeEventType;\n(function (NodeEventType) {\n    NodeEventType[\"Projector\"] = \"Projector\";\n    NodeEventType[\"Widget\"] = \"Widget\";\n})(NodeEventType || (NodeEventType = {}));\nexport class NodeHandler extends Evented {\n    constructor() {\n        super(...arguments);\n        this._nodeMap = new Map();\n    }\n    get(key) {\n        return this._nodeMap.get(key);\n    }\n    has(key) {\n        return this._nodeMap.has(key);\n    }\n    add(element, key) {\n        this._nodeMap.set(key, element);\n        this.emit({ type: key });\n    }\n    addRoot() {\n        this.emit({ type: NodeEventType.Widget });\n    }\n    addProjector() {\n        this.emit({ type: NodeEventType.Projector });\n    }\n    clear() {\n        this._nodeMap.clear();\n    }\n}\nexport default NodeHandler;\n//# sourceMappingURL=NodeHandler.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/NodeHandler.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/NodeHandler.mjs\n// module chunks = split-pane","import Promise from '../shim/Promise';\nimport Map from '../shim/Map';\nimport { Evented } from '../core/Evented';\n/**\n * Widget base type\n */\nexport const WIDGET_BASE_TYPE = '__widget_base_type';\n/**\n * Checks is the item is a subclass of WidgetBase (or a WidgetBase)\n *\n * @param item the item to check\n * @returns true/false indicating if the item is a WidgetBaseConstructor\n */\nexport function isWidgetBaseConstructor(item) {\n    return Boolean(item && item._type === WIDGET_BASE_TYPE);\n}\nexport function isWidgetConstructorDefaultExport(item) {\n    return Boolean(item &&\n        item.hasOwnProperty('__esModule') &&\n        item.hasOwnProperty('default') &&\n        isWidgetBaseConstructor(item.default));\n}\n/**\n * The Registry implementation\n */\nexport class Registry extends Evented {\n    /**\n     * Emit loaded event for registry label\n     */\n    emitLoadedEvent(widgetLabel, item) {\n        this.emit({\n            type: widgetLabel,\n            action: 'loaded',\n            item\n        });\n    }\n    define(label, item) {\n        if (this._widgetRegistry === undefined) {\n            this._widgetRegistry = new Map();\n        }\n        if (this._widgetRegistry.has(label)) {\n            throw new Error(`widget has already been registered for '${label.toString()}'`);\n        }\n        this._widgetRegistry.set(label, item);\n        if (item instanceof Promise) {\n            item.then((widgetCtor) => {\n                this._widgetRegistry.set(label, widgetCtor);\n                this.emitLoadedEvent(label, widgetCtor);\n                return widgetCtor;\n            }, (error) => {\n                throw error;\n            });\n        }\n        else if (isWidgetBaseConstructor(item)) {\n            this.emitLoadedEvent(label, item);\n        }\n    }\n    defineInjector(label, injectorFactory) {\n        if (this._injectorRegistry === undefined) {\n            this._injectorRegistry = new Map();\n        }\n        if (this._injectorRegistry.has(label)) {\n            throw new Error(`injector has already been registered for '${label.toString()}'`);\n        }\n        const invalidator = new Evented();\n        const injectorItem = {\n            injector: injectorFactory(() => invalidator.emit({ type: 'invalidate' })),\n            invalidator\n        };\n        this._injectorRegistry.set(label, injectorItem);\n        this.emitLoadedEvent(label, injectorItem);\n    }\n    get(label) {\n        if (!this._widgetRegistry || !this.has(label)) {\n            return null;\n        }\n        const item = this._widgetRegistry.get(label);\n        if (isWidgetBaseConstructor(item)) {\n            return item;\n        }\n        if (item instanceof Promise) {\n            return null;\n        }\n        const promise = item();\n        this._widgetRegistry.set(label, promise);\n        promise.then((widgetCtor) => {\n            if (isWidgetConstructorDefaultExport(widgetCtor)) {\n                widgetCtor = widgetCtor.default;\n            }\n            this._widgetRegistry.set(label, widgetCtor);\n            this.emitLoadedEvent(label, widgetCtor);\n            return widgetCtor;\n        }, (error) => {\n            throw error;\n        });\n        return null;\n    }\n    getInjector(label) {\n        if (!this._injectorRegistry || !this.hasInjector(label)) {\n            return null;\n        }\n        return this._injectorRegistry.get(label);\n    }\n    has(label) {\n        return Boolean(this._widgetRegistry && this._widgetRegistry.has(label));\n    }\n    hasInjector(label) {\n        return Boolean(this._injectorRegistry && this._injectorRegistry.has(label));\n    }\n}\nexport default Registry;\n//# sourceMappingURL=Registry.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/Registry.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/Registry.mjs\n// module chunks = split-pane","import { Map } from '../shim/Map';\nimport { Evented } from '../core/Evented';\nimport { Registry } from './Registry';\nexport class RegistryHandler extends Evented {\n    constructor() {\n        super();\n        this._registry = new Registry();\n        this._registryWidgetLabelMap = new Map();\n        this._registryInjectorLabelMap = new Map();\n        this.own(this._registry);\n        const destroy = () => {\n            if (this.baseRegistry) {\n                this._registryWidgetLabelMap.delete(this.baseRegistry);\n                this._registryInjectorLabelMap.delete(this.baseRegistry);\n                this.baseRegistry = undefined;\n            }\n        };\n        this.own({ destroy });\n    }\n    set base(baseRegistry) {\n        if (this.baseRegistry) {\n            this._registryWidgetLabelMap.delete(this.baseRegistry);\n            this._registryInjectorLabelMap.delete(this.baseRegistry);\n        }\n        this.baseRegistry = baseRegistry;\n    }\n    define(label, widget) {\n        this._registry.define(label, widget);\n    }\n    defineInjector(label, injector) {\n        this._registry.defineInjector(label, injector);\n    }\n    has(label) {\n        return this._registry.has(label) || Boolean(this.baseRegistry && this.baseRegistry.has(label));\n    }\n    hasInjector(label) {\n        return this._registry.hasInjector(label) || Boolean(this.baseRegistry && this.baseRegistry.hasInjector(label));\n    }\n    get(label, globalPrecedence = false) {\n        return this._get(label, globalPrecedence, 'get', this._registryWidgetLabelMap);\n    }\n    getInjector(label, globalPrecedence = false) {\n        return this._get(label, globalPrecedence, 'getInjector', this._registryInjectorLabelMap);\n    }\n    _get(label, globalPrecedence, getFunctionName, labelMap) {\n        const registries = globalPrecedence ? [this.baseRegistry, this._registry] : [this._registry, this.baseRegistry];\n        for (let i = 0; i < registries.length; i++) {\n            const registry = registries[i];\n            if (!registry) {\n                continue;\n            }\n            const item = registry[getFunctionName](label);\n            const registeredLabels = labelMap.get(registry) || [];\n            if (item) {\n                return item;\n            }\n            else if (registeredLabels.indexOf(label) === -1) {\n                const handle = registry.on(label, (event) => {\n                    if (event.action === 'loaded' &&\n                        this[getFunctionName](label, globalPrecedence) === event.item) {\n                        this.emit({ type: 'invalidate' });\n                    }\n                });\n                this.own(handle);\n                labelMap.set(registry, [...registeredLabels, label]);\n            }\n        }\n        return null;\n    }\n}\nexport default RegistryHandler;\n//# sourceMappingURL=RegistryHandler.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/RegistryHandler.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/RegistryHandler.mjs\n// module chunks = split-pane","import Map from '../shim/Map';\nimport WeakMap from '../shim/WeakMap';\nimport { v, VNODE, isVNode, isWNode } from './d';\nimport { auto } from './diff';\nimport RegistryHandler from './RegistryHandler';\nimport NodeHandler from './NodeHandler';\nimport { isWidgetBaseConstructor, WIDGET_BASE_TYPE } from './Registry';\nlet lazyWidgetId = 0;\nconst lazyWidgetIdMap = new WeakMap();\nconst decoratorMap = new Map();\nexport const widgetInstanceMap = new WeakMap();\nconst boundAuto = auto.bind(null);\nexport const noBind = '__dojo_no_bind';\nfunction toTextVNode(data) {\n    return {\n        tag: '',\n        properties: {},\n        children: undefined,\n        text: `${data}`,\n        type: VNODE\n    };\n}\nfunction isLazyDefine(item) {\n    return Boolean(item && item.label);\n}\n/**\n * Main widget base for all widgets to extend\n */\nexport class WidgetBase {\n    /**\n     * @constructor\n     */\n    constructor() {\n        /**\n         * Indicates if it is the initial set properties cycle\n         */\n        this._initialProperties = true;\n        /**\n         * Array of property keys considered changed from the previous set properties\n         */\n        this._changedPropertyKeys = [];\n        this._nodeHandler = new NodeHandler();\n        this._handles = [];\n        this._children = [];\n        this._decoratorCache = new Map();\n        this._properties = {};\n        this._boundRenderFunc = this.render.bind(this);\n        this._boundInvalidate = this.invalidate.bind(this);\n        widgetInstanceMap.set(this, {\n            dirty: true,\n            onAttach: () => {\n                this.onAttach();\n            },\n            onDetach: () => {\n                this.onDetach();\n                this.destroy();\n            },\n            nodeHandler: this._nodeHandler,\n            rendering: false,\n            inputProperties: {}\n        });\n        this.own({\n            destroy: () => {\n                widgetInstanceMap.delete(this);\n                this._nodeHandler.clear();\n                this._nodeHandler.destroy();\n            }\n        });\n        this._runAfterConstructors();\n    }\n    meta(MetaType) {\n        if (this._metaMap === undefined) {\n            this._metaMap = new Map();\n        }\n        let cached = this._metaMap.get(MetaType);\n        if (!cached) {\n            cached = new MetaType({\n                invalidate: this._boundInvalidate,\n                nodeHandler: this._nodeHandler,\n                bind: this\n            });\n            this.own(cached);\n            this._metaMap.set(MetaType, cached);\n        }\n        return cached;\n    }\n    onAttach() {\n        // Do nothing by default.\n    }\n    onDetach() {\n        // Do nothing by default.\n    }\n    get properties() {\n        return this._properties;\n    }\n    get changedPropertyKeys() {\n        return [...this._changedPropertyKeys];\n    }\n    __setProperties__(originalProperties, bind) {\n        const instanceData = widgetInstanceMap.get(this);\n        if (instanceData) {\n            instanceData.inputProperties = originalProperties;\n        }\n        const properties = this._runBeforeProperties(originalProperties);\n        const registeredDiffPropertyNames = this.getDecorator('registeredDiffProperty');\n        const changedPropertyKeys = [];\n        const propertyNames = Object.keys(properties);\n        if (this._initialProperties === false || registeredDiffPropertyNames.length !== 0) {\n            const allProperties = [...propertyNames, ...Object.keys(this._properties)];\n            const checkedProperties = [];\n            const diffPropertyResults = {};\n            let runReactions = false;\n            for (let i = 0; i < allProperties.length; i++) {\n                const propertyName = allProperties[i];\n                if (checkedProperties.indexOf(propertyName) !== -1) {\n                    continue;\n                }\n                checkedProperties.push(propertyName);\n                const previousProperty = this._properties[propertyName];\n                const newProperty = this._bindFunctionProperty(properties[propertyName], bind);\n                if (registeredDiffPropertyNames.indexOf(propertyName) !== -1) {\n                    runReactions = true;\n                    const diffFunctions = this.getDecorator(`diffProperty:${propertyName}`);\n                    for (let i = 0; i < diffFunctions.length; i++) {\n                        const result = diffFunctions[i](previousProperty, newProperty);\n                        if (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n                            changedPropertyKeys.push(propertyName);\n                        }\n                        if (propertyName in properties) {\n                            diffPropertyResults[propertyName] = result.value;\n                        }\n                    }\n                }\n                else {\n                    const result = boundAuto(previousProperty, newProperty);\n                    if (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n                        changedPropertyKeys.push(propertyName);\n                    }\n                    if (propertyName in properties) {\n                        diffPropertyResults[propertyName] = result.value;\n                    }\n                }\n            }\n            if (runReactions) {\n                const reactionFunctions = this.getDecorator('diffReaction');\n                const executedReactions = [];\n                reactionFunctions.forEach(({ reaction, propertyName }) => {\n                    const propertyChanged = changedPropertyKeys.indexOf(propertyName) !== -1;\n                    const reactionRun = executedReactions.indexOf(reaction) !== -1;\n                    if (propertyChanged && !reactionRun) {\n                        reaction.call(this, this._properties, diffPropertyResults);\n                        executedReactions.push(reaction);\n                    }\n                });\n            }\n            this._properties = diffPropertyResults;\n            this._changedPropertyKeys = changedPropertyKeys;\n        }\n        else {\n            this._initialProperties = false;\n            for (let i = 0; i < propertyNames.length; i++) {\n                const propertyName = propertyNames[i];\n                if (typeof properties[propertyName] === 'function') {\n                    properties[propertyName] = this._bindFunctionProperty(properties[propertyName], bind);\n                }\n                else {\n                    changedPropertyKeys.push(propertyName);\n                }\n            }\n            this._changedPropertyKeys = changedPropertyKeys;\n            this._properties = Object.assign({}, properties);\n        }\n        if (this._changedPropertyKeys.length > 0) {\n            this.invalidate();\n        }\n    }\n    get children() {\n        return this._children;\n    }\n    __setChildren__(children) {\n        if (this._children.length > 0 || children.length > 0) {\n            this._children = children;\n            this.invalidate();\n        }\n    }\n    _filterAndConvert(nodes) {\n        const isArray = Array.isArray(nodes);\n        const filteredNodes = Array.isArray(nodes) ? nodes : [nodes];\n        const convertedNodes = [];\n        for (let i = 0; i < filteredNodes.length; i++) {\n            const node = filteredNodes[i];\n            if (!node) {\n                continue;\n            }\n            if (typeof node === 'string') {\n                convertedNodes.push(toTextVNode(node));\n                continue;\n            }\n            if (isVNode(node) && node.deferredPropertiesCallback) {\n                const properties = node.deferredPropertiesCallback(false);\n                node.originalProperties = node.properties;\n                node.properties = Object.assign({}, properties, node.properties);\n            }\n            if (isWNode(node) && !isWidgetBaseConstructor(node.widgetConstructor)) {\n                if (typeof node.widgetConstructor === 'function') {\n                    let id = lazyWidgetIdMap.get(node.widgetConstructor);\n                    if (!id) {\n                        id = `__lazy_widget_${lazyWidgetId++}`;\n                        lazyWidgetIdMap.set(node.widgetConstructor, id);\n                        this.registry.define(id, node.widgetConstructor);\n                    }\n                    node.widgetConstructor = id;\n                }\n                else if (isLazyDefine(node.widgetConstructor)) {\n                    const { label, registryItem } = node.widgetConstructor;\n                    if (!this.registry.has(label)) {\n                        this.registry.define(label, registryItem);\n                    }\n                    node.widgetConstructor = label;\n                }\n                node.widgetConstructor =\n                    this.registry.get(node.widgetConstructor) || node.widgetConstructor;\n            }\n            if (!node.bind) {\n                node.bind = this;\n            }\n            convertedNodes.push(node);\n            if (node.children && node.children.length) {\n                node.children = this._filterAndConvert(node.children);\n            }\n        }\n        return isArray ? convertedNodes : convertedNodes[0];\n    }\n    __render__() {\n        const instanceData = widgetInstanceMap.get(this);\n        if (instanceData) {\n            instanceData.dirty = false;\n        }\n        const render = this._runBeforeRenders();\n        const dNode = this._filterAndConvert(this._runAfterRenders(render()));\n        this._nodeHandler.clear();\n        return dNode;\n    }\n    invalidate() {\n        const instanceData = widgetInstanceMap.get(this);\n        if (instanceData && instanceData.invalidate) {\n            instanceData.invalidate();\n        }\n    }\n    render() {\n        return v('div', {}, this.children);\n    }\n    /**\n     * Function to add decorators to WidgetBase\n     *\n     * @param decoratorKey The key of the decorator\n     * @param value The value of the decorator\n     */\n    addDecorator(decoratorKey, value) {\n        value = Array.isArray(value) ? value : [value];\n        if (this.hasOwnProperty('constructor')) {\n            let decoratorList = decoratorMap.get(this.constructor);\n            if (!decoratorList) {\n                decoratorList = new Map();\n                decoratorMap.set(this.constructor, decoratorList);\n            }\n            let specificDecoratorList = decoratorList.get(decoratorKey);\n            if (!specificDecoratorList) {\n                specificDecoratorList = [];\n                decoratorList.set(decoratorKey, specificDecoratorList);\n            }\n            specificDecoratorList.push(...value);\n        }\n        else {\n            const decorators = this.getDecorator(decoratorKey);\n            this._decoratorCache.set(decoratorKey, [...decorators, ...value]);\n        }\n    }\n    /**\n     * Function to build the list of decorators from the global decorator map.\n     *\n     * @param decoratorKey  The key of the decorator\n     * @return An array of decorator values\n     * @private\n     */\n    _buildDecoratorList(decoratorKey) {\n        const allDecorators = [];\n        let constructor = this.constructor;\n        while (constructor) {\n            const instanceMap = decoratorMap.get(constructor);\n            if (instanceMap) {\n                const decorators = instanceMap.get(decoratorKey);\n                if (decorators) {\n                    allDecorators.unshift(...decorators);\n                }\n            }\n            constructor = Object.getPrototypeOf(constructor);\n        }\n        return allDecorators;\n    }\n    /**\n     * Function to retrieve decorator values\n     *\n     * @param decoratorKey The key of the decorator\n     * @returns An array of decorator values\n     */\n    getDecorator(decoratorKey) {\n        let allDecorators = this._decoratorCache.get(decoratorKey);\n        if (allDecorators !== undefined) {\n            return allDecorators;\n        }\n        allDecorators = this._buildDecoratorList(decoratorKey);\n        this._decoratorCache.set(decoratorKey, allDecorators);\n        return allDecorators;\n    }\n    /**\n     * Binds unbound property functions to the specified `bind` property\n     *\n     * @param properties properties to check for functions\n     */\n    _bindFunctionProperty(property, bind) {\n        if (typeof property === 'function' && !property[noBind] && isWidgetBaseConstructor(property) === false) {\n            if (this._bindFunctionPropertyMap === undefined) {\n                this._bindFunctionPropertyMap = new WeakMap();\n            }\n            const bindInfo = this._bindFunctionPropertyMap.get(property) || {};\n            let { boundFunc, scope } = bindInfo;\n            if (boundFunc === undefined || scope !== bind) {\n                boundFunc = property.bind(bind);\n                this._bindFunctionPropertyMap.set(property, { boundFunc, scope: bind });\n            }\n            return boundFunc;\n        }\n        return property;\n    }\n    get registry() {\n        if (this._registry === undefined) {\n            this._registry = new RegistryHandler();\n            this.own(this._registry);\n            this.own(this._registry.on('invalidate', this._boundInvalidate));\n        }\n        return this._registry;\n    }\n    _runBeforeProperties(properties) {\n        const beforeProperties = this.getDecorator('beforeProperties');\n        if (beforeProperties.length > 0) {\n            return beforeProperties.reduce((properties, beforePropertiesFunction) => {\n                return Object.assign({}, properties, beforePropertiesFunction.call(this, properties));\n            }, Object.assign({}, properties));\n        }\n        return properties;\n    }\n    /**\n     * Run all registered before renders and return the updated render method\n     */\n    _runBeforeRenders() {\n        const beforeRenders = this.getDecorator('beforeRender');\n        if (beforeRenders.length > 0) {\n            return beforeRenders.reduce((render, beforeRenderFunction) => {\n                const updatedRender = beforeRenderFunction.call(this, render, this._properties, this._children);\n                if (!updatedRender) {\n                    console.warn('Render function not returned from beforeRender, using previous render');\n                    return render;\n                }\n                return updatedRender;\n            }, this._boundRenderFunc);\n        }\n        return this._boundRenderFunc;\n    }\n    /**\n     * Run all registered after renders and return the decorated DNodes\n     *\n     * @param dNode The DNodes to run through the after renders\n     */\n    _runAfterRenders(dNode) {\n        const afterRenders = this.getDecorator('afterRender');\n        if (afterRenders.length > 0) {\n            dNode = afterRenders.reduce((dNode, afterRenderFunction) => {\n                return afterRenderFunction.call(this, dNode);\n            }, dNode);\n        }\n        if (this._metaMap !== undefined) {\n            this._metaMap.forEach((meta) => {\n                meta.afterRender();\n            });\n        }\n        return dNode;\n    }\n    _runAfterConstructors() {\n        const afterConstructors = this.getDecorator('afterConstructor');\n        if (afterConstructors.length > 0) {\n            afterConstructors.forEach((afterConstructor) => afterConstructor.call(this));\n        }\n    }\n    own(handle) {\n        this._handles.push(handle);\n    }\n    destroy() {\n        while (this._handles.length > 0) {\n            const handle = this._handles.pop();\n            if (handle) {\n                handle.destroy();\n            }\n        }\n    }\n}\n/**\n * static identifier\n */\nWidgetBase._type = WIDGET_BASE_TYPE;\nexport default WidgetBase;\n//# sourceMappingURL=WidgetBase.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/WidgetBase.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/WidgetBase.mjs\n// module chunks = split-pane","let browserSpecificTransitionEndEventName = '';\nlet browserSpecificAnimationEndEventName = '';\nfunction determineBrowserStyleNames(element) {\n    if ('WebkitTransition' in element.style) {\n        browserSpecificTransitionEndEventName = 'webkitTransitionEnd';\n        browserSpecificAnimationEndEventName = 'webkitAnimationEnd';\n    }\n    else if ('transition' in element.style || 'MozTransition' in element.style) {\n        browserSpecificTransitionEndEventName = 'transitionend';\n        browserSpecificAnimationEndEventName = 'animationend';\n    }\n    else {\n        throw new Error('Your browser is not supported');\n    }\n}\nfunction initialize(element) {\n    if (browserSpecificAnimationEndEventName === '') {\n        determineBrowserStyleNames(element);\n    }\n}\nfunction runAndCleanUp(element, startAnimation, finishAnimation) {\n    initialize(element);\n    let finished = false;\n    let transitionEnd = function () {\n        if (!finished) {\n            finished = true;\n            element.removeEventListener(browserSpecificTransitionEndEventName, transitionEnd);\n            element.removeEventListener(browserSpecificAnimationEndEventName, transitionEnd);\n            finishAnimation();\n        }\n    };\n    startAnimation();\n    element.addEventListener(browserSpecificAnimationEndEventName, transitionEnd);\n    element.addEventListener(browserSpecificTransitionEndEventName, transitionEnd);\n}\nfunction exit(node, properties, exitAnimation, removeNode) {\n    const activeClass = properties.exitAnimationActive || `${exitAnimation}-active`;\n    runAndCleanUp(node, () => {\n        node.classList.add(exitAnimation);\n        requestAnimationFrame(function () {\n            node.classList.add(activeClass);\n        });\n    }, () => {\n        removeNode();\n    });\n}\nfunction enter(node, properties, enterAnimation) {\n    const activeClass = properties.enterAnimationActive || `${enterAnimation}-active`;\n    runAndCleanUp(node, () => {\n        node.classList.add(enterAnimation);\n        requestAnimationFrame(function () {\n            node.classList.add(activeClass);\n        });\n    }, () => {\n        node.classList.remove(enterAnimation);\n        node.classList.remove(activeClass);\n    });\n}\nexport default {\n    enter,\n    exit\n};\n//# sourceMappingURL=cssTransitions.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/animations/cssTransitions.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/animations/cssTransitions.mjs\n// module chunks = split-pane","import * as tslib_1 from \"tslib\";\n/**\n * The identifier for a WNode type\n */\nexport const WNODE = '__WNODE_TYPE';\n/**\n * The identifier for a VNode type\n */\nexport const VNODE = '__VNODE_TYPE';\n/**\n * The identifier for a VNode type created using dom()\n */\nexport const DOMVNODE = '__DOMVNODE_TYPE';\n/**\n * Helper function that returns true if the `DNode` is a `WNode` using the `type` property\n */\nexport function isWNode(child) {\n    return Boolean(child && typeof child !== 'string' && child.type === WNODE);\n}\n/**\n * Helper function that returns true if the `DNode` is a `VNode` using the `type` property\n */\nexport function isVNode(child) {\n    return Boolean(child && typeof child !== 'string' && (child.type === VNODE || child.type === DOMVNODE));\n}\n/**\n * Helper function that returns true if the `DNode` is a `VNode` created with `dom()` using the `type` property\n */\nexport function isDomVNode(child) {\n    return Boolean(child && typeof child !== 'string' && child.type === DOMVNODE);\n}\nexport function isElementNode(value) {\n    return !!value.tagName;\n}\nexport function decorate(dNodes, optionsOrModifier, predicate) {\n    let shallow = false;\n    let modifier;\n    if (typeof optionsOrModifier === 'function') {\n        modifier = optionsOrModifier;\n    }\n    else {\n        modifier = optionsOrModifier.modifier;\n        predicate = optionsOrModifier.predicate;\n        shallow = optionsOrModifier.shallow || false;\n    }\n    let nodes = Array.isArray(dNodes) ? [...dNodes] : [dNodes];\n    function breaker() {\n        nodes = [];\n    }\n    while (nodes.length) {\n        const node = nodes.shift();\n        if (node) {\n            if (!shallow && (isWNode(node) || isVNode(node)) && node.children) {\n                nodes = [...nodes, ...node.children];\n            }\n            if (!predicate || predicate(node)) {\n                modifier(node, breaker);\n            }\n        }\n    }\n    return dNodes;\n}\nexport function w(widgetConstructorOrNode, properties, children) {\n    if (isWNode(widgetConstructorOrNode)) {\n        properties = Object.assign({}, widgetConstructorOrNode.properties, properties);\n        children = children ? children : widgetConstructorOrNode.children;\n        widgetConstructorOrNode = widgetConstructorOrNode.widgetConstructor;\n    }\n    return {\n        children: children || [],\n        widgetConstructor: widgetConstructorOrNode,\n        properties,\n        type: WNODE\n    };\n}\nexport function v(tag, propertiesOrChildren = {}, children = undefined) {\n    let properties = propertiesOrChildren;\n    let deferredPropertiesCallback;\n    if (Array.isArray(propertiesOrChildren)) {\n        children = propertiesOrChildren;\n        properties = {};\n    }\n    if (typeof properties === 'function') {\n        deferredPropertiesCallback = properties;\n        properties = {};\n    }\n    if (isVNode(tag)) {\n        let { classes = [], styles = {} } = properties, newProperties = tslib_1.__rest(properties, [\"classes\", \"styles\"]);\n        let _a = tag.properties, { classes: nodeClasses = [], styles: nodeStyles = {} } = _a, nodeProperties = tslib_1.__rest(_a, [\"classes\", \"styles\"]);\n        nodeClasses = Array.isArray(nodeClasses) ? nodeClasses : [nodeClasses];\n        classes = Array.isArray(classes) ? classes : [classes];\n        styles = Object.assign({}, nodeStyles, styles);\n        properties = Object.assign({}, nodeProperties, newProperties, { classes: [...nodeClasses, ...classes], styles });\n        children = children ? children : tag.children;\n        tag = tag.tag;\n    }\n    return {\n        tag,\n        deferredPropertiesCallback,\n        originalProperties: {},\n        children,\n        properties,\n        type: VNODE\n    };\n}\n/**\n * Create a VNode for an existing DOM Node.\n */\nexport function dom({ node, attrs = {}, props = {}, on = {}, diffType = 'none', onAttach }, children) {\n    return {\n        tag: isElementNode(node) ? node.tagName.toLowerCase() : '',\n        properties: props,\n        attributes: attrs,\n        events: on,\n        children,\n        type: DOMVNODE,\n        domNode: node,\n        text: isElementNode(node) ? undefined : node.data,\n        diffType,\n        onAttach\n    };\n}\n//# sourceMappingURL=d.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/d.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/d.mjs\n// module chunks = split-pane","import { handleDecorator } from './handleDecorator';\nimport { beforeProperties } from './beforeProperties';\nexport function alwaysRender() {\n    return handleDecorator((target, propertyKey) => {\n        beforeProperties(function () {\n            this.invalidate();\n        })(target);\n    });\n}\nexport default alwaysRender;\n//# sourceMappingURL=alwaysRender.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/decorators/alwaysRender.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/decorators/alwaysRender.mjs\n// module chunks = split-pane","import { handleDecorator } from './handleDecorator';\nexport function beforeProperties(method) {\n    return handleDecorator((target, propertyKey) => {\n        target.addDecorator('beforeProperties', propertyKey ? target[propertyKey] : method);\n    });\n}\nexport default beforeProperties;\n//# sourceMappingURL=beforeProperties.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/decorators/beforeProperties.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/decorators/beforeProperties.mjs\n// module chunks = split-pane","import { CustomElementChildType } from '../registerCustomElement';\nimport Registry from '../Registry';\n/**\n * This Decorator is provided properties that define the behavior of a custom element, and\n * registers that custom element.\n */\nexport function customElement({ tag, properties = [], attributes = [], events = [], childType = CustomElementChildType.DOJO, registryFactory = () => new Registry() }) {\n    return function (target) {\n        target.prototype.__customElementDescriptor = {\n            tagName: tag,\n            attributes,\n            properties,\n            events,\n            childType,\n            registryFactory\n        };\n    };\n}\nexport default customElement;\n//# sourceMappingURL=customElement.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/decorators/customElement.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/decorators/customElement.mjs\n// module chunks = split-pane","import { handleDecorator } from './handleDecorator';\nimport { auto } from './../diff';\n/**\n * Decorator that can be used to register a function as a specific property diff\n *\n * @param propertyName  The name of the property of which the diff function is applied\n * @param diffType      The diff type, default is DiffType.AUTO.\n * @param diffFunction  A diff function to run if diffType if DiffType.CUSTOM\n */\nexport function diffProperty(propertyName, diffFunction = auto, reactionFunction) {\n    return handleDecorator((target, propertyKey) => {\n        target.addDecorator(`diffProperty:${propertyName}`, diffFunction.bind(null));\n        target.addDecorator('registeredDiffProperty', propertyName);\n        if (reactionFunction || propertyKey) {\n            target.addDecorator('diffReaction', {\n                propertyName,\n                reaction: propertyKey ? target[propertyKey] : reactionFunction\n            });\n        }\n    });\n}\nexport default diffProperty;\n//# sourceMappingURL=diffProperty.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/decorators/diffProperty.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/decorators/diffProperty.mjs\n// module chunks = split-pane","/**\n * Generic decorator handler to take care of whether or not the decorator was called at the class level\n * or the method level.\n *\n * @param handler\n */\nexport function handleDecorator(handler) {\n    return function (target, propertyKey, descriptor) {\n        if (typeof target === 'function') {\n            handler(target.prototype, undefined);\n        }\n        else {\n            handler(target, propertyKey);\n        }\n    };\n}\nexport default handleDecorator;\n//# sourceMappingURL=handleDecorator.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/decorators/handleDecorator.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/decorators/handleDecorator.mjs\n// module chunks = split-pane","import WeakMap from '../../shim/WeakMap';\nimport { handleDecorator } from './handleDecorator';\nimport { beforeProperties } from './beforeProperties';\n/**\n * Map of instances against registered injectors.\n */\nconst registeredInjectorsMap = new WeakMap();\n/**\n * Decorator retrieves an injector from an available registry using the name and\n * calls the `getProperties` function with the payload from the injector\n * and current properties with the the injected properties returned.\n *\n * @param InjectConfig the inject configuration\n */\nexport function inject({ name, getProperties }) {\n    return handleDecorator((target, propertyKey) => {\n        beforeProperties(function (properties) {\n            const injectorItem = this.registry.getInjector(name);\n            if (injectorItem) {\n                const { injector, invalidator } = injectorItem;\n                const registeredInjectors = registeredInjectorsMap.get(this) || [];\n                if (registeredInjectors.length === 0) {\n                    registeredInjectorsMap.set(this, registeredInjectors);\n                }\n                if (registeredInjectors.indexOf(injectorItem) === -1) {\n                    this.own(invalidator.on('invalidate', () => {\n                        this.invalidate();\n                    }));\n                    registeredInjectors.push(injectorItem);\n                }\n                return getProperties(injector(), properties);\n            }\n        })(target);\n    });\n}\nexport default inject;\n//# sourceMappingURL=inject.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/decorators/inject.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/decorators/inject.mjs\n// module chunks = split-pane","import { WIDGET_BASE_TYPE } from './Registry';\nfunction isObjectOrArray(value) {\n    return Object.prototype.toString.call(value) === '[object Object]' || Array.isArray(value);\n}\nexport function always(previousProperty, newProperty) {\n    return {\n        changed: true,\n        value: newProperty\n    };\n}\nexport function ignore(previousProperty, newProperty) {\n    return {\n        changed: false,\n        value: newProperty\n    };\n}\nexport function reference(previousProperty, newProperty) {\n    return {\n        changed: previousProperty !== newProperty,\n        value: newProperty\n    };\n}\nexport function shallow(previousProperty, newProperty) {\n    let changed = false;\n    const validOldProperty = previousProperty && isObjectOrArray(previousProperty);\n    const validNewProperty = newProperty && isObjectOrArray(newProperty);\n    if (!validOldProperty || !validNewProperty) {\n        return {\n            changed: true,\n            value: newProperty\n        };\n    }\n    const previousKeys = Object.keys(previousProperty);\n    const newKeys = Object.keys(newProperty);\n    if (previousKeys.length !== newKeys.length) {\n        changed = true;\n    }\n    else {\n        changed = newKeys.some((key) => {\n            return newProperty[key] !== previousProperty[key];\n        });\n    }\n    return {\n        changed,\n        value: newProperty\n    };\n}\nexport function auto(previousProperty, newProperty) {\n    let result;\n    if (typeof newProperty === 'function') {\n        if (newProperty._type === WIDGET_BASE_TYPE) {\n            result = reference(previousProperty, newProperty);\n        }\n        else {\n            result = ignore(previousProperty, newProperty);\n        }\n    }\n    else if (isObjectOrArray(newProperty)) {\n        result = shallow(previousProperty, newProperty);\n    }\n    else {\n        result = reference(previousProperty, newProperty);\n    }\n    return result;\n}\n//# sourceMappingURL=diff.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/diff.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/diff.mjs\n// module chunks = split-pane","import { Destroyable } from '../../core/Destroyable';\nimport Set from '../../shim/Set';\nexport class Base extends Destroyable {\n    constructor(properties) {\n        super();\n        this._requestedNodeKeys = new Set();\n        this._invalidate = properties.invalidate;\n        this.nodeHandler = properties.nodeHandler;\n        if (properties.bind) {\n            this._bind = properties.bind;\n        }\n    }\n    has(key) {\n        return this.nodeHandler.has(key);\n    }\n    getNode(key) {\n        const stringKey = `${key}`;\n        const node = this.nodeHandler.get(stringKey);\n        if (!node && !this._requestedNodeKeys.has(stringKey)) {\n            const handle = this.nodeHandler.on(stringKey, () => {\n                handle.destroy();\n                this._requestedNodeKeys.delete(stringKey);\n                this.invalidate();\n            });\n            this.own(handle);\n            this._requestedNodeKeys.add(stringKey);\n        }\n        return node;\n    }\n    invalidate() {\n        this._invalidate();\n    }\n    afterRender() {\n        // Do nothing by default.\n    }\n}\nexport default Base;\n//# sourceMappingURL=Base.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/meta/Base.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/meta/Base.mjs\n// module chunks = split-pane","import { Base } from './Base';\nimport { deepAssign } from '../../core/util';\nconst defaultDimensions = {\n    client: {\n        height: 0,\n        left: 0,\n        top: 0,\n        width: 0\n    },\n    offset: {\n        height: 0,\n        left: 0,\n        top: 0,\n        width: 0\n    },\n    position: {\n        bottom: 0,\n        left: 0,\n        right: 0,\n        top: 0\n    },\n    scroll: {\n        height: 0,\n        left: 0,\n        top: 0,\n        width: 0\n    },\n    size: {\n        width: 0,\n        height: 0\n    }\n};\nexport class Dimensions extends Base {\n    get(key) {\n        const node = this.getNode(key);\n        if (!node) {\n            return deepAssign({}, defaultDimensions);\n        }\n        const boundingDimensions = node.getBoundingClientRect();\n        return {\n            client: {\n                height: node.clientHeight,\n                left: node.clientLeft,\n                top: node.clientTop,\n                width: node.clientWidth\n            },\n            offset: {\n                height: node.offsetHeight,\n                left: node.offsetLeft,\n                top: node.offsetTop,\n                width: node.offsetWidth\n            },\n            position: {\n                bottom: boundingDimensions.bottom,\n                left: boundingDimensions.left,\n                right: boundingDimensions.right,\n                top: boundingDimensions.top\n            },\n            scroll: {\n                height: node.scrollHeight,\n                left: node.scrollLeft,\n                top: node.scrollTop,\n                width: node.scrollWidth\n            },\n            size: {\n                width: boundingDimensions.width,\n                height: boundingDimensions.height\n            }\n        };\n    }\n}\nexport default Dimensions;\n//# sourceMappingURL=Dimensions.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/meta/Dimensions.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/meta/Dimensions.mjs\n// module chunks = split-pane","import * as tslib_1 from \"tslib\";\nimport { Injector } from './../Injector';\nimport { inject } from './../decorators/inject';\nimport { handleDecorator } from './../decorators/handleDecorator';\nimport { diffProperty } from './../decorators/diffProperty';\nimport { shallow } from './../diff';\nconst THEME_KEY = ' _key';\nexport const INJECTED_THEME_KEY = '__theme_injector';\n/**\n * Decorator for base css classes\n */\nexport function theme(theme) {\n    return handleDecorator((target) => {\n        target.addDecorator('baseThemeClasses', theme);\n    });\n}\n/**\n * Creates a reverse lookup for the classes passed in via the `theme` function.\n *\n * @param classes The baseClasses object\n * @requires\n */\nfunction createThemeClassesLookup(classes) {\n    return classes.reduce((currentClassNames, baseClass) => {\n        Object.keys(baseClass).forEach((key) => {\n            currentClassNames[baseClass[key]] = key;\n        });\n        return currentClassNames;\n    }, {});\n}\n/**\n * Convenience function that is given a theme and an optional registry, the theme\n * injector is defined against the registry, returning the theme.\n *\n * @param theme the theme to set\n * @param themeRegistry registry to define the theme injector against. Defaults\n * to the global registry\n *\n * @returns the theme injector used to set the theme\n */\nexport function registerThemeInjector(theme, themeRegistry) {\n    const themeInjector = new Injector(theme);\n    themeRegistry.defineInjector(INJECTED_THEME_KEY, (invalidator) => {\n        themeInjector.setInvalidator(invalidator);\n        return () => themeInjector.get();\n    });\n    return themeInjector;\n}\n/**\n * Function that returns a class decorated with with Themed functionality\n */\nexport function ThemedMixin(Base) {\n    let Themed = class Themed extends Base {\n        constructor() {\n            super(...arguments);\n            /**\n             * Registered base theme keys\n             */\n            this._registeredBaseThemeKeys = [];\n            /**\n             * Indicates if classes meta data need to be calculated.\n             */\n            this._recalculateClasses = true;\n            /**\n             * Loaded theme\n             */\n            this._theme = {};\n        }\n        theme(classes) {\n            if (this._recalculateClasses) {\n                this._recalculateThemeClasses();\n            }\n            if (Array.isArray(classes)) {\n                return classes.map((className) => this._getThemeClass(className));\n            }\n            return this._getThemeClass(classes);\n        }\n        /**\n         * Function fired when `theme` or `extraClasses` are changed.\n         */\n        onPropertiesChanged() {\n            this._recalculateClasses = true;\n        }\n        _getThemeClass(className) {\n            if (className === undefined || className === null) {\n                return className;\n            }\n            const extraClasses = this.properties.extraClasses || {};\n            const themeClassName = this._baseThemeClassesReverseLookup[className];\n            let resultClassNames = [];\n            if (!themeClassName) {\n                console.warn(`Class name: '${className}' not found in theme`);\n                return null;\n            }\n            if (extraClasses[themeClassName]) {\n                resultClassNames.push(extraClasses[themeClassName]);\n            }\n            if (this._theme[themeClassName]) {\n                resultClassNames.push(this._theme[themeClassName]);\n            }\n            else {\n                resultClassNames.push(this._registeredBaseTheme[themeClassName]);\n            }\n            return resultClassNames.join(' ');\n        }\n        _recalculateThemeClasses() {\n            const { theme = {} } = this.properties;\n            if (!this._registeredBaseTheme) {\n                const baseThemes = this.getDecorator('baseThemeClasses');\n                if (baseThemes.length === 0) {\n                    console.warn('A base theme has not been provided to this widget. Please use the @theme decorator to add a theme.');\n                }\n                this._registeredBaseTheme = baseThemes.reduce((finalBaseTheme, baseTheme) => {\n                    const _a = THEME_KEY, key = baseTheme[_a], classes = tslib_1.__rest(baseTheme, [typeof _a === \"symbol\" ? _a : _a + \"\"]);\n                    this._registeredBaseThemeKeys.push(key);\n                    return Object.assign({}, finalBaseTheme, classes);\n                }, {});\n                this._baseThemeClassesReverseLookup = createThemeClassesLookup(baseThemes);\n            }\n            this._theme = this._registeredBaseThemeKeys.reduce((baseTheme, themeKey) => {\n                return Object.assign({}, baseTheme, theme[themeKey]);\n            }, {});\n            this._recalculateClasses = false;\n        }\n    };\n    tslib_1.__decorate([\n        diffProperty('theme', shallow),\n        diffProperty('extraClasses', shallow)\n    ], Themed.prototype, \"onPropertiesChanged\", null);\n    Themed = tslib_1.__decorate([\n        inject({\n            name: INJECTED_THEME_KEY,\n            getProperties: (theme, properties) => {\n                if (!properties.theme) {\n                    return { theme };\n                }\n                return {};\n            }\n        })\n    ], Themed);\n    return Themed;\n}\nexport default ThemedMixin;\n//# sourceMappingURL=Themed.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/mixins/Themed.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/mixins/Themed.mjs\n// module chunks = split-pane","import * as tslib_1 from \"tslib\";\nimport { WidgetBase, noBind } from './WidgetBase';\nimport { renderer } from './vdom';\nimport { from } from '../shim/array';\nimport { w, dom } from './d';\nimport global from '../shim/global';\nimport { registerThemeInjector } from './mixins/Themed';\nimport { alwaysRender } from './decorators/alwaysRender';\nexport var CustomElementChildType;\n(function (CustomElementChildType) {\n    CustomElementChildType[\"DOJO\"] = \"DOJO\";\n    CustomElementChildType[\"NODE\"] = \"NODE\";\n    CustomElementChildType[\"TEXT\"] = \"TEXT\";\n})(CustomElementChildType || (CustomElementChildType = {}));\nexport function DomToWidgetWrapper(domNode) {\n    let DomToWidgetWrapper = class DomToWidgetWrapper extends WidgetBase {\n        render() {\n            const properties = Object.keys(this.properties).reduce((props, key) => {\n                const value = this.properties[key];\n                if (key.indexOf('on') === 0) {\n                    key = `__${key}`;\n                }\n                props[key] = value;\n                return props;\n            }, {});\n            return dom({ node: domNode, props: properties, diffType: 'dom' });\n        }\n        static get domNode() {\n            return domNode;\n        }\n    };\n    DomToWidgetWrapper = tslib_1.__decorate([\n        alwaysRender()\n    ], DomToWidgetWrapper);\n    return DomToWidgetWrapper;\n}\nexport function create(descriptor, WidgetConstructor) {\n    const { attributes, childType, registryFactory } = descriptor;\n    const attributeMap = {};\n    attributes.forEach((propertyName) => {\n        const attributeName = propertyName.toLowerCase();\n        attributeMap[attributeName] = propertyName;\n    });\n    return class extends HTMLElement {\n        constructor() {\n            super(...arguments);\n            this._properties = {};\n            this._children = [];\n            this._eventProperties = {};\n            this._initialised = false;\n        }\n        connectedCallback() {\n            if (this._initialised) {\n                return;\n            }\n            const domProperties = {};\n            const { attributes, properties, events } = descriptor;\n            this._properties = Object.assign({}, this._properties, this._attributesToProperties(attributes));\n            [...attributes, ...properties].forEach((propertyName) => {\n                const value = this[propertyName];\n                const filteredPropertyName = propertyName.replace(/^on/, '__');\n                if (value !== undefined) {\n                    this._properties[propertyName] = value;\n                }\n                if (filteredPropertyName !== propertyName) {\n                    domProperties[filteredPropertyName] = {\n                        get: () => this._getProperty(propertyName),\n                        set: (value) => this._setProperty(propertyName, value)\n                    };\n                }\n                domProperties[propertyName] = {\n                    get: () => this._getProperty(propertyName),\n                    set: (value) => this._setProperty(propertyName, value)\n                };\n            });\n            events.forEach((propertyName) => {\n                const eventName = propertyName.replace(/^on/, '').toLowerCase();\n                const filteredPropertyName = propertyName.replace(/^on/, '__on');\n                domProperties[filteredPropertyName] = {\n                    get: () => this._getEventProperty(propertyName),\n                    set: (value) => this._setEventProperty(propertyName, value)\n                };\n                this._eventProperties[propertyName] = undefined;\n                this._properties[propertyName] = (...args) => {\n                    const eventCallback = this._getEventProperty(propertyName);\n                    if (typeof eventCallback === 'function') {\n                        eventCallback(...args);\n                    }\n                    this.dispatchEvent(new CustomEvent(eventName, {\n                        bubbles: false,\n                        detail: args\n                    }));\n                };\n            });\n            Object.defineProperties(this, domProperties);\n            const children = childType === CustomElementChildType.TEXT ? this.childNodes : this.children;\n            from(children).forEach((childNode) => {\n                if (childType === CustomElementChildType.DOJO) {\n                    childNode.addEventListener('dojo-ce-render', () => this._render());\n                    childNode.addEventListener('dojo-ce-connected', () => this._render());\n                    this._children.push(DomToWidgetWrapper(childNode));\n                }\n                else {\n                    this._children.push(dom({ node: childNode, diffType: 'dom' }));\n                }\n            });\n            this.addEventListener('dojo-ce-connected', (e) => this._childConnected(e));\n            const widgetProperties = this._properties;\n            const renderChildren = () => this.__children__();\n            const Wrapper = class extends WidgetBase {\n                render() {\n                    return w(WidgetConstructor, widgetProperties, renderChildren());\n                }\n            };\n            const registry = registryFactory();\n            const themeContext = registerThemeInjector(this._getTheme(), registry);\n            global.addEventListener('dojo-theme-set', () => themeContext.set(this._getTheme()));\n            const r = renderer(() => w(Wrapper, {}));\n            this._renderer = r;\n            r.mount({ domNode: this, merge: false, registry });\n            this._initialised = true;\n            this.dispatchEvent(new CustomEvent('dojo-ce-connected', {\n                bubbles: true,\n                detail: this\n            }));\n        }\n        _getTheme() {\n            if (global && global.dojoce && global.dojoce.theme) {\n                return global.dojoce.themes[global.dojoce.theme];\n            }\n        }\n        _childConnected(e) {\n            const node = e.detail;\n            if (node.parentNode === this) {\n                const exists = this._children.some((child) => child.domNode === node);\n                if (!exists) {\n                    node.addEventListener('dojo-ce-render', () => this._render());\n                    this._children.push(DomToWidgetWrapper(node));\n                    this._render();\n                }\n            }\n        }\n        _render() {\n            if (this._renderer) {\n                this._renderer.invalidate();\n                this.dispatchEvent(new CustomEvent('dojo-ce-render', {\n                    bubbles: false,\n                    detail: this\n                }));\n            }\n        }\n        __properties__() {\n            return Object.assign({}, this._properties, this._eventProperties);\n        }\n        __children__() {\n            if (childType === CustomElementChildType.DOJO) {\n                return this._children.filter((Child) => Child.domNode.isWidget).map((Child) => {\n                    const { domNode } = Child;\n                    return w(Child, Object.assign({}, domNode.__properties__()), [...domNode.__children__()]);\n                });\n            }\n            else {\n                return this._children;\n            }\n        }\n        attributeChangedCallback(name, oldValue, value) {\n            const propertyName = attributeMap[name];\n            this._setProperty(propertyName, value);\n        }\n        _setEventProperty(propertyName, value) {\n            this._eventProperties[propertyName] = value;\n        }\n        _getEventProperty(propertyName) {\n            return this._eventProperties[propertyName];\n        }\n        _setProperty(propertyName, value) {\n            if (typeof value === 'function') {\n                value[noBind] = true;\n            }\n            this._properties[propertyName] = value;\n            this._render();\n        }\n        _getProperty(propertyName) {\n            return this._properties[propertyName];\n        }\n        _attributesToProperties(attributes) {\n            return attributes.reduce((properties, propertyName) => {\n                const attributeName = propertyName.toLowerCase();\n                const value = this.getAttribute(attributeName);\n                if (value !== null) {\n                    properties[propertyName] = value;\n                }\n                return properties;\n            }, {});\n        }\n        static get observedAttributes() {\n            return Object.keys(attributeMap);\n        }\n        get isWidget() {\n            return true;\n        }\n    };\n}\nexport function register(WidgetConstructor) {\n    const descriptor = WidgetConstructor.prototype && WidgetConstructor.prototype.__customElementDescriptor;\n    if (!descriptor) {\n        throw new Error('Cannot get descriptor for Custom Element, have you added the @customElement decorator to your Widget?');\n    }\n    global.customElements.define(descriptor.tagName, create(descriptor, WidgetConstructor));\n}\nexport default register;\n//# sourceMappingURL=registerCustomElement.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/registerCustomElement.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/registerCustomElement.mjs\n// module chunks = split-pane","import global from '../shim/global';\nimport has from '../has/has';\nimport { WeakMap } from '../shim/WeakMap';\nimport transitionStrategy from './animations/cssTransitions';\nimport { isVNode, isWNode, WNODE, v, isDomVNode, w } from './d';\nimport { isWidgetBaseConstructor } from './Registry';\nimport { WidgetBase, widgetInstanceMap } from './WidgetBase';\nconst EMPTY_ARRAY = [];\nconst nodeOperations = ['focus', 'blur', 'scrollIntoView', 'click'];\nconst NAMESPACE_W3 = 'http://www.w3.org/';\nconst NAMESPACE_SVG = NAMESPACE_W3 + '2000/svg';\nconst NAMESPACE_XLINK = NAMESPACE_W3 + '1999/xlink';\nfunction isWNodeWrapper(child) {\n    return child && isWNode(child.node);\n}\nfunction isVNodeWrapper(child) {\n    return !!child && isVNode(child.node);\n}\nfunction isAttachApplication(value) {\n    return !!value.type;\n}\nfunction updateAttributes(domNode, previousAttributes, attributes, namespace) {\n    const attrNames = Object.keys(attributes);\n    const attrCount = attrNames.length;\n    for (let i = 0; i < attrCount; i++) {\n        const attrName = attrNames[i];\n        const attrValue = attributes[attrName];\n        const previousAttrValue = previousAttributes[attrName];\n        if (attrValue !== previousAttrValue) {\n            updateAttribute(domNode, attrName, attrValue, namespace);\n        }\n    }\n}\nfunction buildPreviousProperties(domNode, current, next) {\n    const { node: { diffType, properties, attributes } } = current;\n    if (!diffType || diffType === 'vdom') {\n        return {\n            properties: current.node.properties,\n            attributes: current.node.attributes,\n            events: current.node.events\n        };\n    }\n    else if (diffType === 'none') {\n        return { properties: {}, attributes: current.node.attributes ? {} : undefined, events: current.node.events };\n    }\n    let newProperties = {\n        properties: {}\n    };\n    if (attributes) {\n        newProperties.attributes = {};\n        newProperties.events = current.node.events;\n        Object.keys(properties).forEach((propName) => {\n            newProperties.properties[propName] = domNode[propName];\n        });\n        Object.keys(attributes).forEach((attrName) => {\n            newProperties.attributes[attrName] = domNode.getAttribute(attrName);\n        });\n        return newProperties;\n    }\n    newProperties.properties = Object.keys(properties).reduce((props, property) => {\n        props[property] = domNode.getAttribute(property) || domNode[property];\n        return props;\n    }, {});\n    return newProperties;\n}\nfunction checkDistinguishable(wrappers, index, parentWNodeWrapper) {\n    const wrapperToCheck = wrappers[index];\n    if (isVNodeWrapper(wrapperToCheck) && !wrapperToCheck.node.tag) {\n        return;\n    }\n    const { key } = wrapperToCheck.node.properties;\n    let parentName = 'unknown';\n    if (parentWNodeWrapper) {\n        const { node: { widgetConstructor } } = parentWNodeWrapper;\n        parentName = widgetConstructor.name || 'unknown';\n    }\n    if (key === undefined || key === null) {\n        for (let i = 0; i < wrappers.length; i++) {\n            if (i !== index) {\n                const wrapper = wrappers[i];\n                if (same(wrapper, wrapperToCheck)) {\n                    let nodeIdentifier;\n                    if (isWNodeWrapper(wrapper)) {\n                        nodeIdentifier = wrapper.node.widgetConstructor.name || 'unknown';\n                    }\n                    else {\n                        nodeIdentifier = wrapper.node.tag;\n                    }\n                    console.warn(`A widget (${parentName}) has had a child added or removed, but they were not able to uniquely identified. It is recommended to provide a unique 'key' property when using the same widget or element (${nodeIdentifier}) multiple times as siblings`);\n                    break;\n                }\n            }\n        }\n    }\n}\nfunction same(dnode1, dnode2) {\n    if (isVNodeWrapper(dnode1) && isVNodeWrapper(dnode2)) {\n        if (isDomVNode(dnode1.node) && isDomVNode(dnode2.node)) {\n            if (dnode1.node.domNode !== dnode2.node.domNode) {\n                return false;\n            }\n        }\n        if (dnode1.node.tag !== dnode2.node.tag) {\n            return false;\n        }\n        if (dnode1.node.properties.key !== dnode2.node.properties.key) {\n            return false;\n        }\n        return true;\n    }\n    else if (isWNodeWrapper(dnode1) && isWNodeWrapper(dnode2)) {\n        if (dnode1.instance === undefined && typeof dnode2.node.widgetConstructor === 'string') {\n            return false;\n        }\n        if (dnode1.node.widgetConstructor !== dnode2.node.widgetConstructor) {\n            return false;\n        }\n        if (dnode1.node.properties.key !== dnode2.node.properties.key) {\n            return false;\n        }\n        return true;\n    }\n    return false;\n}\nfunction findIndexOfChild(children, sameAs, start) {\n    for (let i = start; i < children.length; i++) {\n        if (same(children[i], sameAs)) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction createClassPropValue(classes = []) {\n    classes = Array.isArray(classes) ? classes : [classes];\n    return classes.join(' ').trim();\n}\nfunction updateAttribute(domNode, attrName, attrValue, namespace) {\n    if (namespace === NAMESPACE_SVG && attrName === 'href' && attrValue) {\n        domNode.setAttributeNS(NAMESPACE_XLINK, attrName, attrValue);\n    }\n    else if ((attrName === 'role' && attrValue === '') || attrValue === undefined) {\n        domNode.removeAttribute(attrName);\n    }\n    else {\n        domNode.setAttribute(attrName, attrValue);\n    }\n}\nfunction runEnterAnimation(next, transitions) {\n    const { domNode, node: { properties }, node: { properties: { enterAnimation } } } = next;\n    if (enterAnimation) {\n        if (typeof enterAnimation === 'function') {\n            return enterAnimation(domNode, properties);\n        }\n        transitions.enter(domNode, properties, enterAnimation);\n    }\n}\nfunction runExitAnimation(current, transitions) {\n    const { domNode, node: { properties }, node: { properties: { exitAnimation } } } = current;\n    const removeDomNode = () => {\n        domNode && domNode.parentNode && domNode.parentNode.removeChild(domNode);\n        current.domNode = undefined;\n    };\n    if (typeof exitAnimation === 'function') {\n        return exitAnimation(domNode, removeDomNode, properties);\n    }\n    transitions.exit(domNode, properties, exitAnimation, removeDomNode);\n}\nfunction arrayFrom(arr) {\n    return Array.prototype.slice.call(arr);\n}\nfunction wrapVNodes(nodes) {\n    return class extends WidgetBase {\n        render() {\n            return nodes;\n        }\n    };\n}\nexport function renderer(renderer) {\n    let _mountOptions = {\n        sync: false,\n        merge: true,\n        transition: transitionStrategy,\n        domNode: global.document.body,\n        registry: null\n    };\n    let _invalidationQueue = [];\n    let _processQueue = [];\n    let _applicationQueue = [];\n    let _eventMap = new WeakMap();\n    let _instanceToWrapperMap = new WeakMap();\n    let _parentWrapperMap = new WeakMap();\n    let _wrapperSiblingMap = new WeakMap();\n    let _renderScheduled;\n    let _afterRenderCallbacks = [];\n    let _deferredRenderCallbacks = [];\n    let parentInvalidate;\n    function nodeOperation(propName, propValue, previousValue, domNode) {\n        let result = propValue && !previousValue;\n        if (typeof propValue === 'function') {\n            result = propValue();\n        }\n        if (result === true) {\n            _afterRenderCallbacks.push(() => {\n                domNode[propName]();\n            });\n        }\n    }\n    function updateEvent(domNode, eventName, currentValue, bind, previousValue) {\n        if (previousValue) {\n            const previousEvent = _eventMap.get(previousValue);\n            domNode.removeEventListener(eventName, previousEvent);\n        }\n        let callback = currentValue.bind(bind);\n        if (eventName === 'input') {\n            callback = function (evt) {\n                currentValue.call(this, evt);\n                evt.target['oninput-value'] = evt.target.value;\n            }.bind(bind);\n        }\n        domNode.addEventListener(eventName, callback);\n        _eventMap.set(currentValue, callback);\n    }\n    function removeOrphanedEvents(domNode, previousProperties, properties, onlyEvents = false) {\n        Object.keys(previousProperties).forEach((propName) => {\n            const isEvent = propName.substr(0, 2) === 'on' || onlyEvents;\n            const eventName = onlyEvents ? propName : propName.substr(2);\n            if (isEvent && !properties[propName]) {\n                const eventCallback = _eventMap.get(previousProperties[propName]);\n                if (eventCallback) {\n                    domNode.removeEventListener(eventName, eventCallback);\n                }\n            }\n        });\n    }\n    function renderedToWrapper(rendered, parent, currentParent) {\n        const wrappedRendered = [];\n        const hasParentWNode = isWNodeWrapper(parent);\n        const currentParentLength = isVNodeWrapper(currentParent) && (currentParent.childrenWrappers || []).length > 1;\n        const requiresInsertBefore = ((parent.requiresInsertBefore || parent.hasPreviousSiblings !== false) && hasParentWNode) ||\n            currentParentLength;\n        let previousItem;\n        for (let i = 0; i < rendered.length; i++) {\n            const renderedItem = rendered[i];\n            const wrapper = {\n                node: renderedItem,\n                depth: parent.depth + 1,\n                requiresInsertBefore,\n                hasParentWNode,\n                namespace: parent.namespace\n            };\n            if (isVNode(renderedItem) && renderedItem.properties.exitAnimation) {\n                parent.hasAnimations = true;\n                let nextParent = _parentWrapperMap.get(parent);\n                while (nextParent) {\n                    if (nextParent.hasAnimations) {\n                        break;\n                    }\n                    nextParent.hasAnimations = true;\n                    nextParent = _parentWrapperMap.get(nextParent);\n                }\n            }\n            _parentWrapperMap.set(wrapper, parent);\n            if (previousItem) {\n                _wrapperSiblingMap.set(previousItem, wrapper);\n            }\n            wrappedRendered.push(wrapper);\n            previousItem = wrapper;\n        }\n        return wrappedRendered;\n    }\n    function findParentWNodeWrapper(currentNode) {\n        let parentWNodeWrapper;\n        let parentWrapper = _parentWrapperMap.get(currentNode);\n        while (!parentWNodeWrapper && parentWrapper) {\n            if (!parentWNodeWrapper && isWNodeWrapper(parentWrapper)) {\n                parentWNodeWrapper = parentWrapper;\n            }\n            parentWrapper = _parentWrapperMap.get(parentWrapper);\n        }\n        return parentWNodeWrapper;\n    }\n    function findParentDomNode(currentNode) {\n        let parentDomNode;\n        let parentWrapper = _parentWrapperMap.get(currentNode);\n        while (!parentDomNode && parentWrapper) {\n            if (!parentDomNode && isVNodeWrapper(parentWrapper) && parentWrapper.domNode) {\n                parentDomNode = parentWrapper.domNode;\n            }\n            parentWrapper = _parentWrapperMap.get(parentWrapper);\n        }\n        return parentDomNode;\n    }\n    function runDeferredProperties(next) {\n        if (next.node.deferredPropertiesCallback) {\n            const properties = next.node.properties;\n            next.node.properties = Object.assign({}, next.node.deferredPropertiesCallback(true), next.node.originalProperties);\n            _afterRenderCallbacks.push(() => {\n                processProperties(next, { properties });\n            });\n        }\n    }\n    function findInsertBefore(next) {\n        let insertBefore = null;\n        let searchNode = next;\n        while (!insertBefore) {\n            const nextSibling = _wrapperSiblingMap.get(searchNode);\n            if (nextSibling) {\n                if (isVNodeWrapper(nextSibling)) {\n                    if (nextSibling.domNode && nextSibling.domNode.parentNode) {\n                        insertBefore = nextSibling.domNode;\n                        break;\n                    }\n                    searchNode = nextSibling;\n                    continue;\n                }\n                if (nextSibling.domNode && nextSibling.domNode.parentNode) {\n                    insertBefore = nextSibling.domNode;\n                    break;\n                }\n                searchNode = nextSibling;\n                continue;\n            }\n            searchNode = _parentWrapperMap.get(searchNode);\n            if (!searchNode || isVNodeWrapper(searchNode)) {\n                break;\n            }\n        }\n        return insertBefore;\n    }\n    function setProperties(domNode, currentProperties = {}, nextWrapper, includesEventsAndAttributes = true) {\n        const propNames = Object.keys(nextWrapper.node.properties);\n        const propCount = propNames.length;\n        if (propNames.indexOf('classes') === -1 && currentProperties.classes) {\n            domNode.removeAttribute('class');\n        }\n        includesEventsAndAttributes && removeOrphanedEvents(domNode, currentProperties, nextWrapper.node.properties);\n        for (let i = 0; i < propCount; i++) {\n            const propName = propNames[i];\n            let propValue = nextWrapper.node.properties[propName];\n            const previousValue = currentProperties[propName];\n            if (propName === 'classes') {\n                const previousClassString = createClassPropValue(previousValue);\n                let currentClassString = createClassPropValue(propValue);\n                if (previousClassString !== currentClassString) {\n                    if (currentClassString) {\n                        if (nextWrapper.merged) {\n                            const domClasses = (domNode.getAttribute('class') || '').split(' ');\n                            for (let i = 0; i < domClasses.length; i++) {\n                                if (currentClassString.indexOf(domClasses[i]) === -1) {\n                                    currentClassString = `${domClasses[i]} ${currentClassString}`;\n                                }\n                            }\n                        }\n                        domNode.setAttribute('class', currentClassString);\n                    }\n                    else {\n                        domNode.removeAttribute('class');\n                    }\n                }\n            }\n            else if (nodeOperations.indexOf(propName) !== -1) {\n                nodeOperation(propName, propValue, previousValue, domNode);\n            }\n            else if (propName === 'styles') {\n                const styleNames = Object.keys(propValue);\n                const styleCount = styleNames.length;\n                for (let j = 0; j < styleCount; j++) {\n                    const styleName = styleNames[j];\n                    const newStyleValue = propValue[styleName];\n                    const oldStyleValue = previousValue && previousValue[styleName];\n                    if (newStyleValue === oldStyleValue) {\n                        continue;\n                    }\n                    domNode.style[styleName] = newStyleValue || '';\n                }\n            }\n            else {\n                if (!propValue && typeof previousValue === 'string') {\n                    propValue = '';\n                }\n                if (propName === 'value') {\n                    const domValue = domNode[propName];\n                    if (domValue !== propValue &&\n                        (domNode['oninput-value']\n                            ? domValue === domNode['oninput-value']\n                            : propValue !== previousValue)) {\n                        domNode[propName] = propValue;\n                        domNode['oninput-value'] = undefined;\n                    }\n                }\n                else if (propName !== 'key' && propValue !== previousValue) {\n                    const type = typeof propValue;\n                    if (type === 'function' && propName.lastIndexOf('on', 0) === 0 && includesEventsAndAttributes) {\n                        updateEvent(domNode, propName.substr(2), propValue, nextWrapper.node.bind, previousValue);\n                    }\n                    else if (type === 'string' && propName !== 'innerHTML' && includesEventsAndAttributes) {\n                        updateAttribute(domNode, propName, propValue, nextWrapper.namespace);\n                    }\n                    else if (propName === 'scrollLeft' || propName === 'scrollTop') {\n                        if (domNode[propName] !== propValue) {\n                            domNode[propName] = propValue;\n                        }\n                    }\n                    else {\n                        domNode[propName] = propValue;\n                    }\n                }\n            }\n        }\n    }\n    function runDeferredRenderCallbacks() {\n        const { sync } = _mountOptions;\n        const callbacks = _deferredRenderCallbacks;\n        _deferredRenderCallbacks = [];\n        if (callbacks.length) {\n            const run = () => {\n                let callback;\n                while ((callback = callbacks.shift())) {\n                    callback();\n                }\n            };\n            if (sync) {\n                run();\n            }\n            else {\n                global.requestAnimationFrame(run);\n            }\n        }\n    }\n    function runAfterRenderCallbacks() {\n        const { sync } = _mountOptions;\n        const callbacks = _afterRenderCallbacks;\n        _afterRenderCallbacks = [];\n        if (callbacks.length) {\n            const run = () => {\n                let callback;\n                while ((callback = callbacks.shift())) {\n                    callback();\n                }\n            };\n            if (sync) {\n                run();\n            }\n            else {\n                if (global.requestIdleCallback) {\n                    global.requestIdleCallback(run);\n                }\n                else {\n                    setTimeout(run);\n                }\n            }\n        }\n    }\n    function processProperties(next, previousProperties) {\n        if (next.node.attributes && next.node.events) {\n            updateAttributes(next.domNode, previousProperties.attributes || {}, next.node.attributes, next.namespace);\n            setProperties(next.domNode, previousProperties.properties, next, false);\n            const events = next.node.events || {};\n            if (previousProperties.events) {\n                removeOrphanedEvents(next.domNode, previousProperties.events || {}, next.node.events, true);\n            }\n            previousProperties.events = previousProperties.events || {};\n            Object.keys(events).forEach((event) => {\n                updateEvent(next.domNode, event, events[event], next.node.bind, previousProperties.events[event]);\n            });\n        }\n        else {\n            setProperties(next.domNode, previousProperties.properties, next);\n        }\n    }\n    function mount(mountOptions = {}) {\n        _mountOptions = Object.assign({}, _mountOptions, mountOptions);\n        const { domNode } = _mountOptions;\n        let renderResult = renderer();\n        if (isVNode(renderResult)) {\n            renderResult = w(wrapVNodes(renderResult), {});\n        }\n        const nextWrapper = {\n            node: renderResult,\n            depth: 1\n        };\n        _parentWrapperMap.set(nextWrapper, { depth: 0, domNode, node: v('fake') });\n        _processQueue.push({\n            current: [],\n            next: [nextWrapper],\n            meta: { mergeNodes: arrayFrom(domNode.childNodes) }\n        });\n        _runProcessQueue();\n        _mountOptions.merge = false;\n        _runDomInstructionQueue();\n        _runCallbacks();\n    }\n    function invalidate() {\n        parentInvalidate && parentInvalidate();\n    }\n    function _schedule() {\n        const { sync } = _mountOptions;\n        if (sync) {\n            _runInvalidationQueue();\n        }\n        else if (!_renderScheduled) {\n            _renderScheduled = global.requestAnimationFrame(() => {\n                _runInvalidationQueue();\n            });\n        }\n    }\n    function _runInvalidationQueue() {\n        _renderScheduled = undefined;\n        const invalidationQueue = [..._invalidationQueue];\n        const previouslyRendered = [];\n        _invalidationQueue = [];\n        invalidationQueue.sort((a, b) => b.depth - a.depth);\n        let item;\n        while ((item = invalidationQueue.pop())) {\n            let { instance } = item;\n            if (previouslyRendered.indexOf(instance) === -1 && _instanceToWrapperMap.has(instance)) {\n                previouslyRendered.push(instance);\n                const current = _instanceToWrapperMap.get(instance);\n                const instanceData = widgetInstanceMap.get(instance);\n                const parent = _parentWrapperMap.get(current);\n                const sibling = _wrapperSiblingMap.get(current);\n                const { constructor, children } = instance;\n                const next = {\n                    node: {\n                        type: WNODE,\n                        widgetConstructor: constructor,\n                        properties: instanceData.inputProperties,\n                        children: children,\n                        bind: current.node.bind\n                    },\n                    instance,\n                    depth: current.depth\n                };\n                parent && _parentWrapperMap.set(next, parent);\n                sibling && _wrapperSiblingMap.set(next, sibling);\n                const { item } = _updateWidget({ current, next });\n                if (item) {\n                    _processQueue.push(item);\n                    instance && _instanceToWrapperMap.set(instance, next);\n                    _runProcessQueue();\n                }\n            }\n        }\n        _runDomInstructionQueue();\n        _runCallbacks();\n    }\n    function _runProcessQueue() {\n        let item;\n        while ((item = _processQueue.pop())) {\n            if (isAttachApplication(item)) {\n                _applicationQueue.push(item);\n            }\n            else {\n                const { current, next, meta } = item;\n                _process(current || EMPTY_ARRAY, next || EMPTY_ARRAY, meta);\n            }\n        }\n    }\n    function _runDomInstructionQueue() {\n        _applicationQueue.reverse();\n        let item;\n        while ((item = _applicationQueue.pop())) {\n            if (item.type === 'create') {\n                const { parentDomNode, next, next: { domNode, merged, requiresInsertBefore, node: { properties } } } = item;\n                processProperties(next, { properties: {} });\n                runDeferredProperties(next);\n                if (!merged) {\n                    let insertBefore;\n                    if (requiresInsertBefore) {\n                        insertBefore = findInsertBefore(next);\n                    }\n                    parentDomNode.insertBefore(domNode, insertBefore);\n                    if (isDomVNode(next.node) && next.node.onAttach) {\n                        next.node.onAttach();\n                    }\n                }\n                runEnterAnimation(next, _mountOptions.transition);\n                const instanceData = widgetInstanceMap.get(next.node.bind);\n                if (properties.key != null && instanceData) {\n                    instanceData.nodeHandler.add(domNode, `${properties.key}`);\n                }\n                item.next.inserted = true;\n            }\n            else if (item.type === 'update') {\n                const { next, next: { domNode, node }, current } = item;\n                const parent = _parentWrapperMap.get(next);\n                if (parent && isWNodeWrapper(parent) && parent.instance) {\n                    const instanceData = widgetInstanceMap.get(parent.instance);\n                    instanceData && instanceData.nodeHandler.addRoot();\n                }\n                const previousProperties = buildPreviousProperties(domNode, current, next);\n                const instanceData = widgetInstanceMap.get(next.node.bind);\n                processProperties(next, previousProperties);\n                runDeferredProperties(next);\n                if (instanceData && node.properties.key != null) {\n                    instanceData.nodeHandler.add(next.domNode, `${node.properties.key}`);\n                }\n            }\n            else if (item.type === 'delete') {\n                const { current } = item;\n                if (current.node.properties.exitAnimation) {\n                    runExitAnimation(current, _mountOptions.transition);\n                }\n                else {\n                    current.domNode.parentNode.removeChild(current.domNode);\n                    current.domNode = undefined;\n                }\n            }\n            else if (item.type === 'attach') {\n                const { instance, attached } = item;\n                const instanceData = widgetInstanceMap.get(instance);\n                instanceData.nodeHandler.addRoot();\n                attached && instanceData.onAttach();\n            }\n            else if (item.type === 'detach') {\n                if (item.current.instance) {\n                    const instanceData = widgetInstanceMap.get(item.current.instance);\n                    instanceData && instanceData.onDetach();\n                }\n                item.current.domNode = undefined;\n                item.current.node.bind = undefined;\n                item.current.instance = undefined;\n            }\n        }\n    }\n    function _runCallbacks() {\n        runAfterRenderCallbacks();\n        runDeferredRenderCallbacks();\n    }\n    function _processMergeNodes(next, mergeNodes) {\n        const { merge } = _mountOptions;\n        if (merge && mergeNodes.length) {\n            if (isVNodeWrapper(next)) {\n                let { node: { tag } } = next;\n                for (let i = 0; i < mergeNodes.length; i++) {\n                    const domElement = mergeNodes[i];\n                    if (tag.toUpperCase() === (domElement.tagName || '')) {\n                        mergeNodes.splice(i, 1);\n                        next.domNode = domElement;\n                        break;\n                    }\n                }\n            }\n            else {\n                next.mergeNodes = mergeNodes;\n            }\n        }\n    }\n    function registerDistinguishableCallback(childNodes, index) {\n        _afterRenderCallbacks.push(() => {\n            const parentWNodeWrapper = findParentWNodeWrapper(childNodes[index]);\n            checkDistinguishable(childNodes, index, parentWNodeWrapper);\n        });\n    }\n    function _process(current, next, meta = {}) {\n        let { mergeNodes = [], oldIndex = 0, newIndex = 0 } = meta;\n        const currentLength = current.length;\n        const nextLength = next.length;\n        const hasPreviousSiblings = currentLength > 1 || (currentLength > 0 && currentLength < nextLength);\n        const instructions = [];\n        if (newIndex < nextLength) {\n            let currentWrapper = oldIndex < currentLength ? current[oldIndex] : undefined;\n            const nextWrapper = next[newIndex];\n            nextWrapper.hasPreviousSiblings = hasPreviousSiblings;\n            _processMergeNodes(nextWrapper, mergeNodes);\n            if (currentWrapper && same(currentWrapper, nextWrapper)) {\n                oldIndex++;\n                newIndex++;\n                if (isVNodeWrapper(currentWrapper) && isVNodeWrapper(nextWrapper)) {\n                    nextWrapper.inserted = currentWrapper.inserted;\n                }\n                instructions.push({ current: currentWrapper, next: nextWrapper });\n            }\n            else if (!currentWrapper || findIndexOfChild(current, nextWrapper, oldIndex + 1) === -1) {\n                has('dojo-debug') && current.length && registerDistinguishableCallback(next, newIndex);\n                instructions.push({ current: undefined, next: nextWrapper });\n                newIndex++;\n            }\n            else if (findIndexOfChild(next, currentWrapper, newIndex + 1) === -1) {\n                has('dojo-debug') && registerDistinguishableCallback(current, oldIndex);\n                instructions.push({ current: currentWrapper, next: undefined });\n                oldIndex++;\n            }\n            else {\n                has('dojo-debug') && registerDistinguishableCallback(next, newIndex);\n                has('dojo-debug') && registerDistinguishableCallback(current, oldIndex);\n                instructions.push({ current: currentWrapper, next: undefined });\n                instructions.push({ current: undefined, next: nextWrapper });\n                oldIndex++;\n                newIndex++;\n            }\n        }\n        if (newIndex < nextLength) {\n            _processQueue.push({ current, next, meta: { mergeNodes, oldIndex, newIndex } });\n        }\n        if (currentLength > oldIndex && newIndex >= nextLength) {\n            for (let i = oldIndex; i < currentLength; i++) {\n                has('dojo-debug') && registerDistinguishableCallback(current, i);\n                instructions.push({ current: current[i], next: undefined });\n            }\n        }\n        for (let i = 0; i < instructions.length; i++) {\n            const { item, dom, widget } = _processOne(instructions[i]);\n            widget && _processQueue.push(widget);\n            item && _processQueue.push(item);\n            dom && _applicationQueue.push(dom);\n        }\n    }\n    function _processOne({ current, next }) {\n        if (current !== next) {\n            if (!current && next) {\n                if (isVNodeWrapper(next)) {\n                    return _createDom({ next });\n                }\n                else {\n                    return _createWidget({ next });\n                }\n            }\n            else if (current && next) {\n                if (isVNodeWrapper(current) && isVNodeWrapper(next)) {\n                    return _updateDom({ current, next });\n                }\n                else if (isWNodeWrapper(current) && isWNodeWrapper(next)) {\n                    return _updateWidget({ current, next });\n                }\n            }\n            else if (current && !next) {\n                if (isVNodeWrapper(current)) {\n                    return _removeDom({ current });\n                }\n                else if (isWNodeWrapper(current)) {\n                    return _removeWidget({ current });\n                }\n            }\n        }\n        return {};\n    }\n    function _createWidget({ next }) {\n        let { node: { widgetConstructor } } = next;\n        let { registry } = _mountOptions;\n        if (!isWidgetBaseConstructor(widgetConstructor)) {\n            return {};\n        }\n        const instance = new widgetConstructor();\n        if (registry) {\n            instance.registry.base = registry;\n        }\n        const instanceData = widgetInstanceMap.get(instance);\n        instanceData.invalidate = () => {\n            instanceData.dirty = true;\n            if (!instanceData.rendering && _instanceToWrapperMap.has(instance)) {\n                _invalidationQueue.push({ instance, depth: next.depth });\n                _schedule();\n            }\n        };\n        instanceData.rendering = true;\n        instance.__setProperties__(next.node.properties, next.node.bind);\n        instance.__setChildren__(next.node.children);\n        next.instance = instance;\n        let rendered = instance.__render__();\n        instanceData.rendering = false;\n        if (rendered) {\n            rendered = Array.isArray(rendered) ? rendered : [rendered];\n            next.childrenWrappers = renderedToWrapper(rendered, next, null);\n        }\n        if (next.instance) {\n            _instanceToWrapperMap.set(next.instance, next);\n            if (!parentInvalidate) {\n                parentInvalidate = next.instance.invalidate.bind(next.instance);\n            }\n        }\n        return {\n            item: { next: next.childrenWrappers, meta: { mergeNodes: next.mergeNodes } },\n            widget: { type: 'attach', instance, attached: true }\n        };\n    }\n    function _updateWidget({ current, next }) {\n        current = (current.instance && _instanceToWrapperMap.get(current.instance)) || current;\n        const { instance, domNode, hasAnimations } = current;\n        if (!instance) {\n            return [];\n        }\n        const instanceData = widgetInstanceMap.get(instance);\n        next.instance = instance;\n        next.domNode = domNode;\n        next.hasAnimations = hasAnimations;\n        instanceData.rendering = true;\n        instance.__setProperties__(next.node.properties, next.node.bind);\n        instance.__setChildren__(next.node.children);\n        _instanceToWrapperMap.set(next.instance, next);\n        if (instanceData.dirty) {\n            let rendered = instance.__render__();\n            instanceData.rendering = false;\n            if (rendered) {\n                rendered = Array.isArray(rendered) ? rendered : [rendered];\n                next.childrenWrappers = renderedToWrapper(rendered, next, current);\n            }\n            return {\n                item: { current: current.childrenWrappers, next: next.childrenWrappers, meta: {} },\n                widget: { type: 'attach', instance, attached: false }\n            };\n        }\n        instanceData.rendering = false;\n        next.childrenWrappers = current.childrenWrappers;\n        return {\n            widget: { type: 'attach', instance, attached: false }\n        };\n    }\n    function _removeWidget({ current }) {\n        current = current.instance ? _instanceToWrapperMap.get(current.instance) : current;\n        _wrapperSiblingMap.delete(current);\n        _parentWrapperMap.delete(current);\n        _instanceToWrapperMap.delete(current.instance);\n        return {\n            item: { current: current.childrenWrappers, meta: {} },\n            widget: { type: 'detach', current }\n        };\n    }\n    function _createDom({ next }) {\n        let mergeNodes = [];\n        if (!next.domNode) {\n            if (next.node.domNode) {\n                next.domNode = next.node.domNode;\n            }\n            else {\n                if (next.node.tag === 'svg') {\n                    next.namespace = NAMESPACE_SVG;\n                }\n                if (next.node.tag) {\n                    if (next.namespace) {\n                        next.domNode = global.document.createElementNS(next.namespace, next.node.tag);\n                    }\n                    else {\n                        next.domNode = global.document.createElement(next.node.tag);\n                    }\n                }\n                else if (next.node.text != null) {\n                    next.domNode = global.document.createTextNode(next.node.text);\n                }\n            }\n        }\n        else {\n            next.merged = true;\n        }\n        if (next.domNode) {\n            if (_mountOptions.merge) {\n                mergeNodes = arrayFrom(next.domNode.childNodes);\n            }\n            if (next.node.children) {\n                next.childrenWrappers = renderedToWrapper(next.node.children, next, null);\n            }\n        }\n        const parentWNodeWrapper = findParentWNodeWrapper(next);\n        if (parentWNodeWrapper && !parentWNodeWrapper.domNode) {\n            parentWNodeWrapper.domNode = next.domNode;\n        }\n        const dom = {\n            next: next,\n            parentDomNode: findParentDomNode(next),\n            type: 'create'\n        };\n        if (next.childrenWrappers) {\n            return {\n                item: { current: [], next: next.childrenWrappers, meta: { mergeNodes } },\n                dom\n            };\n        }\n        return { dom };\n    }\n    function _updateDom({ current, next }) {\n        const parentDomNode = findParentDomNode(current);\n        next.domNode = current.domNode;\n        next.namespace = current.namespace;\n        if (next.node.text && next.node.text !== current.node.text) {\n            const updatedTextNode = parentDomNode.ownerDocument.createTextNode(next.node.text);\n            parentDomNode.replaceChild(updatedTextNode, next.domNode);\n            next.domNode = updatedTextNode;\n        }\n        else if (next.node.children) {\n            const children = renderedToWrapper(next.node.children, next, current);\n            next.childrenWrappers = children;\n        }\n        return {\n            item: { current: current.childrenWrappers, next: next.childrenWrappers, meta: {} },\n            dom: { type: 'update', next, current }\n        };\n    }\n    function _removeDom({ current }) {\n        _wrapperSiblingMap.delete(current);\n        _parentWrapperMap.delete(current);\n        current.node.bind = undefined;\n        if (current.hasAnimations) {\n            return {\n                item: { current: current.childrenWrappers, meta: {} },\n                dom: { type: 'delete', current }\n            };\n        }\n        if (current.childrenWrappers) {\n            _afterRenderCallbacks.push(() => {\n                let wrappers = current.childrenWrappers || [];\n                let wrapper;\n                while ((wrapper = wrappers.pop())) {\n                    if (wrapper.childrenWrappers) {\n                        wrappers.push(...wrapper.childrenWrappers);\n                        wrapper.childrenWrappers = undefined;\n                    }\n                    if (isWNodeWrapper(wrapper)) {\n                        if (wrapper.instance) {\n                            _instanceToWrapperMap.delete(wrapper.instance);\n                            const instanceData = widgetInstanceMap.get(wrapper.instance);\n                            instanceData && instanceData.onDetach();\n                        }\n                        wrapper.instance = undefined;\n                    }\n                    _wrapperSiblingMap.delete(wrapper);\n                    _parentWrapperMap.delete(wrapper);\n                    wrapper.domNode = undefined;\n                    wrapper.node.bind = undefined;\n                }\n            });\n        }\n        return {\n            dom: { type: 'delete', current }\n        };\n    }\n    return {\n        mount,\n        invalidate\n    };\n}\nexport default renderer;\n//# sourceMappingURL=vdom.mjs.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@dojo/framework/widget-core/vdom.mjs\n// module id = ./node_modules/@dojo/framework/widget-core/vdom.mjs\n// module chunks = split-pane","/*** IMPORTS FROM imports-loader ***/\nvar widgetFactory = require(\"src/split-pane\");\n\nvar registerCustomElement = require('@dojo/framework/widget-core/registerCustomElement').default;\n\nvar defaultExport = widgetFactory.default;\ndefaultExport && registerCustomElement(defaultExport);\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/imports-loader?widgetFactory=src/split-pane!./node_modules/@dojo/cli-build-widget/template/custom-element.js\n// module id = ./node_modules/imports-loader/index.js?widgetFactory=src/split-pane!./node_modules/@dojo/cli-build-widget/template/custom-element.js\n// module chunks = split-pane","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = ./node_modules/process/browser.js\n// module chunks = split-pane","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslib/tslib.es6.js\n// module id = ./node_modules/tslib/tslib.es6.js\n// module chunks = split-pane","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = ./node_modules/webpack/buildin/global.js\n// module chunks = split-pane","import global from '@dojo/framework/shim/global';\nimport WidgetBase from '@dojo/framework/widget-core/WidgetBase';\nimport { DNode } from '@dojo/framework/widget-core/interfaces';\nimport { diffProperty } from '@dojo/framework/widget-core/decorators/diffProperty';\nimport { shallow } from '@dojo/framework/widget-core/diff';\n\nexport interface ListenerObject {\n\t[index: string]: (event?: any) => void;\n}\n\nexport interface GlobalEventProperties extends Partial<RegisteredListeners> {\n\twindow?: ListenerObject;\n\tdocument?: ListenerObject;\n}\n\nexport interface RegisteredListeners {\n\twindow: ListenerObject;\n\tdocument: ListenerObject;\n}\n\nexport class GlobalEvent extends WidgetBase<GlobalEventProperties> {\n\n\tprivate _listeners: RegisteredListeners = {\n\t\twindow: {},\n\t\tdocument: {}\n\t};\n\n\tprivate _registerListeners(type: 'window' | 'document', previousListeners: RegisteredListeners, newListeners: RegisteredListeners) {\n\t\tconst registeredListeners: ListenerObject = {};\n\t\tpreviousListeners[type] && Object.keys(previousListeners[type]).forEach((eventName) => {\n\t\t\tconst newListener = newListeners[type][eventName];\n\t\t\tif (newListener === undefined) {\n\t\t\t\tglobal[type].removeEventListener(eventName, this._listeners[type][eventName]);\n\t\t\t}\n\t\t\telse if (previousListeners[type][eventName] !== newListener) {\n\t\t\t\tglobal[type].removeEventListener(eventName, this._listeners[type][eventName]);\n\t\t\t\tglobal[type].addEventListener(eventName, newListener);\n\t\t\t\tregisteredListeners[eventName] = newListener;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tregisteredListeners[eventName] = newListener;\n\t\t\t}\n\t\t});\n\n\t\tnewListeners[type] && Object.keys(newListeners[type]).forEach((eventName) => {\n\t\t\tif (previousListeners[type] === undefined || previousListeners[type][eventName] === undefined) {\n\t\t\t\tglobal[type].addEventListener(eventName, newListeners[type][eventName]);\n\t\t\t\tregisteredListeners[eventName] = newListeners[type][eventName];\n\t\t\t}\n\t\t});\n\t\tthis._listeners[type] = registeredListeners;\n\t}\n\n\tprivate _removeAllRegisteredListeners(type: 'window' | 'document') {\n\t\tObject.keys(this._listeners[type]).forEach((eventName) => {\n\t\t\tglobal[type].removeEventListener(eventName, this._listeners[type][eventName]);\n\t\t});\n\t}\n\n\t@diffProperty('window', shallow)\n\tprotected onWindowListenersChange(previousListeners: RegisteredListeners, newListeners: RegisteredListeners) {\n\t\tthis._registerListeners('window', previousListeners, newListeners);\n\t}\n\n\t@diffProperty('document', shallow)\n\tprotected onDocumentListenersChange(previousListeners: RegisteredListeners, newListeners: RegisteredListeners) {\n\t\tthis._registerListeners('document', previousListeners, newListeners);\n\t}\n\n\tprotected onDetach() {\n\t\tthis._removeAllRegisteredListeners('window');\n\t\tthis._removeAllRegisteredListeners('document');\n\t}\n\n\tprotected render(): DNode | DNode[] {\n\t\tif (this.children.length > 0) {\n\t\t\treturn this.children;\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport default GlobalEvent;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./node_modules/@dojo/webpack-contrib/css-module-dts-loader?type=ts&instanceName=0_split-pane!./src/global-event/index.ts","import { DNode } from '@dojo/framework/widget-core/interfaces';\nimport { ThemedMixin, ThemedProperties, theme } from '@dojo/framework/widget-core/mixins/Themed';\nimport { v, w } from '@dojo/framework/widget-core/d';\nimport { WidgetBase } from '@dojo/framework/widget-core/WidgetBase';\nimport { auto } from '@dojo/framework/widget-core/diff';\nimport { diffProperty } from '@dojo/framework/widget-core/decorators/diffProperty';\n\nimport * as fixedCss from './styles/split-pane.m.css';\nimport * as css from '../theme/split-pane.m.css';\nimport { Dimensions } from '@dojo/framework/widget-core/meta/Dimensions';\nimport { GlobalEvent } from '../global-event/index';\nimport { customElement } from '@dojo/framework/widget-core/decorators/customElement';\n\n/**\n * Direction of this SplitPane\n */\nexport enum Direction {\n\tcolumn = 'column',\n\trow = 'row'\n}\n\n/**\n * @type SplitPaneProperties\n *\n * Properties that can be set on a SplitPane component\n *\n * @property direction      Orientation of this SplitPane, can be `row` or `column`\n * @property onResize       Called when the divider is dragged; should be used to update `size`\n * @property size           Size of the primary pane\n */\nexport interface SplitPaneProperties extends ThemedProperties {\n\tdirection?: Direction;\n\tonResize?(size: number): void;\n\tsize?: number;\n\tcollapseWidth?: number;\n\tonCollapse?(collapsed: boolean): void;\n}\n\nexport const ThemedBase = ThemedMixin(WidgetBase);\n\nconst DEFAULT_SIZE = 100;\n\n@theme(css)\n@customElement<SplitPaneProperties>({\n\ttag: 'dojo-split-pane',\n\tproperties: [ 'theme', 'extraClasses', 'size', 'collapseWidth' ],\n\tattributes: [ 'direction' ],\n\tevents: [\n\t\t'onCollapse',\n\t\t'onResize'\n\t]\n})\nexport class SplitPaneBase<P extends SplitPaneProperties = SplitPaneProperties> extends ThemedBase<P> {\n\tprivate _dragging: boolean | undefined;\n\tprivate _lastSize?: number;\n\tprivate _position = 0;\n\tprivate _collapsed = false;\n\n\tprivate _getPosition(event: MouseEvent & TouchEvent) {\n\t\tevent.stopPropagation();\n\t\tconst { direction = Direction.column } = this.properties;\n\n\t\tif (direction === Direction.column) {\n\t\t\treturn event.changedTouches ? event.changedTouches[0].clientX : event.clientX;\n\t\t}\n\t\telse {\n\t\t\treturn event.changedTouches ? event.changedTouches[0].clientY : event.clientY;\n\t\t}\n\t}\n\n\tprivate _onDragStart(event: MouseEvent & TouchEvent) {\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t\tthis._dragging = true;\n\t\tthis._position = this._getPosition(event);\n\t}\n\n\tprivate _onDragMove = (event: MouseEvent & TouchEvent) => {\n\t\tevent.stopPropagation();\n\t\tif (!this._dragging) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst {\n\t\t\tdirection = Direction.column,\n\t\t\tonResize,\n\t\t\tsize = DEFAULT_SIZE\n\t\t} = this.properties;\n\n\t\tconst currentPosition = this._getPosition(event);\n\t\tlet newSize = (this._lastSize === undefined ? size : this._lastSize) + currentPosition - this._position;\n\n\t\tconst rootDimensions = this.meta(Dimensions).get('root');\n\t\tconst dividerDimensions = this.meta(Dimensions).get('divider');\n\t\tconst maxSize = direction === Direction.column ?\n\t\t\trootDimensions.offset.width - dividerDimensions.offset.width :\n\t\t\trootDimensions.offset.height - dividerDimensions.offset.height;\n\n\t\tthis._lastSize = newSize;\n\n\t\tnewSize = newSize < 0 ? 0 : newSize;\n\t\tnewSize = newSize > maxSize ? maxSize : newSize;\n\n\t\tthis._position = currentPosition;\n\n\t\tonResize && onResize(newSize);\n\t}\n\n\t@diffProperty('collapseWidth', auto)\n\tprotected collapseWidthReaction(oldProperty: any, newProperty: any) {\n\t\tconst { direction = Direction.column } = this.properties;\n\t\tconst { collapseWidth = 600 } = newProperty;\n\t\tthis._collapseIfNecessary(collapseWidth, direction);\n\t}\n\n\t@diffProperty('direction', auto)\n\tprotected directionReaction(oldProperty: any, newProperty: any) {\n\t\tconst { collapseWidth = 600 } = this.properties;\n\t\tconst { direction = Direction.column } = newProperty;\n\t\tthis._collapseIfNecessary(collapseWidth, direction);\n\t}\n\n\tprivate _onDragEnd = (event: MouseEvent & TouchEvent) => {\n\t\tevent.stopPropagation();\n\t\tthis._dragging = false;\n\t\tthis._lastSize = undefined;\n\t}\n\n\tprotected getPaneContent(content: DNode | undefined): DNode[] {\n\t\treturn content ? [ content ] : [];\n\t}\n\n\tprotected getPaneStyles(): {[key: string]: string} {\n\t\tconst {\n\t\t\tdirection = Direction.column,\n\t\t\tsize = DEFAULT_SIZE\n\t\t} = this.properties;\n\n\t\tconst styles: {[key: string]: string} = {};\n\n\t\tlet computedSize = this._collapsed ? 'auto' : `${size}px`;\n\n\t\tstyles[direction === Direction.column ? 'width' : 'height'] = computedSize;\n\n\t\treturn styles;\n\t}\n\n\tprotected onAttach() {\n\t\tthis._onResize();\n\t}\n\n\tprivate _collapseIfNecessary(collapseWidth: number, direction: Direction) {\n\t\tconst { onCollapse } = this.properties;\n\n\t\tif (direction === Direction.row || !this.meta(Dimensions).has('root')) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { width } = this.meta(Dimensions).get('root').size;\n\n\t\tif (width > collapseWidth && this._collapsed === true) {\n\t\t\tthis._collapsed = false;\n\t\t\tonCollapse && onCollapse(this._collapsed);\n\t\t}\n\t\telse if (width <= collapseWidth && this._collapsed === false) {\n\t\t\tthis._collapsed = true;\n\t\t\tonCollapse && onCollapse(this._collapsed);\n\t\t}\n\t}\n\n\tprivate _onResize = () => {\n\t\tconst { collapseWidth = 600, direction = Direction.column } = this.properties;\n\t\tconst isCollapsed = this._collapsed;\n\t\tthis._collapseIfNecessary(collapseWidth, direction);\n\t\tif (isCollapsed !== this._collapsed) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tprotected render(): DNode {\n\t\tconst {\n\t\t\tdirection = Direction.column\n\t\t} = this.properties;\n\n\t\treturn v('div', {\n\t\t\tclasses: [\n\t\t\t\t...this.theme([\n\t\t\t\t\tcss.root,\n\t\t\t\t\tthis._collapsed ? css.collapsed : null,\n\t\t\t\t\tdirection === Direction.row ? css.row : css.column\n\t\t\t\t]),\n\t\t\t\tfixedCss.rootFixed,\n\t\t\t\tdirection === Direction.row ? fixedCss.rowFixed : fixedCss.columnFixed,\n\t\t\t\tthis._collapsed ? fixedCss.collapsedFixed : null\n\t\t\t],\n\t\t\tkey: 'root'\n\t\t}, [\n\t\t\tw(GlobalEvent, {\n\t\t\t\tkey: 'global',\n\t\t\t\twindow: {\n\t\t\t\t\tmouseup: this._onDragEnd,\n\t\t\t\t\tmousemove: this._onDragMove,\n\t\t\t\t\ttouchmove: this._onDragMove,\n\t\t\t\t\tresize: this._onResize\n\t\t\t\t}\n\t\t\t}),\n\t\t\tv('div', {\n\t\t\t\tclasses: [\n\t\t\t\t\tthis.theme(css.leading),\n\t\t\t\t\tfixedCss.leadingFixed\n\t\t\t\t],\n\t\t\t\tkey: 'leading',\n\t\t\t\tstyles: this.getPaneStyles()\n\t\t\t}, this.getPaneContent(this.children[0])),\n\t\t\tv('div', {\n\t\t\t\tclasses: [\n\t\t\t\t\tthis.theme(css.divider),\n\t\t\t\t\tfixedCss.dividerFixed\n\t\t\t\t],\n\t\t\t\tkey: 'divider',\n\t\t\t\tonmousedown: this._onDragStart,\n\t\t\t\tontouchend: this._onDragEnd,\n\t\t\t\tontouchstart: this._onDragStart\n\t\t\t}),\n\t\t\tv('div', {\n\t\t\t\tclasses: [\n\t\t\t\t\tthis.theme(css.trailing),\n\t\t\t\t\tfixedCss.trailingFixed\n\t\t\t\t],\n\t\t\t\tkey: 'trailing'\n\t\t\t}, this.getPaneContent(this.children[1]))\n\t\t]);\n\t}\n}\n\nexport default class SplitPane extends SplitPaneBase<SplitPaneProperties> {}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./node_modules/@dojo/webpack-contrib/css-module-dts-loader?type=ts&instanceName=0_split-pane!./src/split-pane/index.ts","// removed by extract-text-webpack-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/split-pane\",\"rootFixed\":\"split-pane-m__rootFixed__2onPU\",\"rowFixed\":\"split-pane-m__rowFixed__sonKW\",\"dividerFixed\":\"split-pane-m__dividerFixed__3mbm3\",\"leadingFixed\":\"split-pane-m__leadingFixed__tME_B\",\"columnFixed\":\"split-pane-m__columnFixed__2yqN5\",\"trailingFixed\":\"split-pane-m__trailingFixed__iAE90\",\"collapsedFixed\":\"split-pane-m__collapsedFixed__18x3s\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/split-pane/styles/split-pane.m.css\n// module id = ./src/split-pane/styles/split-pane.m.css\n// module chunks = split-pane","// removed by extract-text-webpack-plugin\nmodule.exports = {\" _key\":\"@dojo/widgets/split-pane\",\"root\":\"split-pane-m__root__1i-YA\",\"column\":\"split-pane-m__column__tRn-k\",\"divider\":\"split-pane-m__divider__1qU3x\",\"leading\":\"split-pane-m__leading__motBn\",\"row\":\"split-pane-m__row__2hxkz\",\"trailing\":\"split-pane-m__trailing__2e-BL\",\"collapsed\":\"split-pane-m__collapsed__3VOXe\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/theme/split-pane.m.css\n// module id = ./src/theme/split-pane.m.css\n// module chunks = split-pane"],"sourceRoot":""}