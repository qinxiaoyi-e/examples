{"version":3,"sources":["webpack:///./src/containers/SettingsContainer.ts","webpack:///./src/utils.ts","webpack:///./src/widgets/Settings.ts"],"names":["Object","defineProperty","__webpack_exports__","value","__WEBPACK_IMPORTED_MODULE_0__widgets_Settings__","__webpack_require__","__WEBPACK_IMPORTED_MODULE_1__processes_settingsProcesses__","__WEBPACK_IMPORTED_MODULE_2__processes_loginProcesses__","__WEBPACK_IMPORTED_MODULE_3__dojo_framework_stores_StoreInjector__","paths","getProperties","store","get","path","email","password","username","imageUrl","bio","onEmailInput","onPasswordInput","onUsernameInput","onBioInput","onImageUrlInput","onUpdateSettings","logout","placeholder","oninput","__WEBPACK_IMPORTED_MODULE_0__dojo_framework_widget_core_d__","classes","type","__WEBPACK_IMPORTED_MODULE_0__dojo_framework_widget_core_WidgetBase__","__WEBPACK_IMPORTED_MODULE_1__dojo_framework_widget_core_d__","__WEBPACK_IMPORTED_MODULE_2__utils__","[object Object]","event","preventDefault","this","properties","target","_onImageUrlInput","_onUsernameInput","rows","_onBioInput","_onEmailInput","_onPasswordInput","onclick","_onSubmit","_logout"],"mappings":"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","file":"src/containers/SettingsContainer.310c36a050e454c8ad75.bundle.js","sourcesContent":["import { Store } from '@dojo/framework/stores/Store';\nimport { Settings, SettingsProperties } from './../widgets/Settings';\nimport {\n\tbioInputProcess,\n\temailInputProcess,\n\tpasswordInputProcess,\n\timageUrlInputProcess,\n\tusernameInputProcess,\n\tupdateUserSettingsProcess\n} from './../processes/settingsProcesses';\nimport { logoutProcess } from '../processes/loginProcesses';\nimport { State } from '../interfaces';\nimport { StoreContainer } from '@dojo/framework/stores/StoreInjector';\n\nfunction getProperties(store: Store<State>): SettingsProperties {\n\tconst { get, path } = store;\n\n\treturn {\n\t\temail: get(path('settings', 'email')),\n\t\tpassword: get(path('settings', 'password')),\n\t\tusername: get(path('settings', 'username')),\n\t\timageUrl: get(path('settings', 'image')),\n\t\tbio: get(path('settings', 'bio')),\n\t\tonEmailInput: emailInputProcess(store),\n\t\tonPasswordInput: passwordInputProcess(store),\n\t\tonUsernameInput: usernameInputProcess(store),\n\t\tonBioInput: bioInputProcess(store),\n\t\tonImageUrlInput: imageUrlInputProcess(store),\n\t\tonUpdateSettings: updateUserSettingsProcess(store),\n\t\tlogout: logoutProcess(store)\n\t};\n}\n\nexport default StoreContainer(Settings, 'state', { paths: [['settings']], getProperties });\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--2!./node_modules/@dojo/webpack-contrib/css-module-dts-loader?type=ts&instanceName=0_dojo!./src/containers/SettingsContainer.ts","import { v } from '@dojo/framework/widget-core/d';\nimport { WithTarget } from './interfaces';\n\nexport function createInputNode(value: string, placeholder: string, oninput: (event: WithTarget) => void) {\n\treturn v('fieldset', { classes: 'form-group' }, [\n\t\tv('input', {\n\t\t\tvalue,\n\t\t\tclasses: ['form-control', 'form-control-lg'],\n\t\t\ttype: 'text',\n\t\t\tplaceholder,\n\t\t\toninput\n\t\t})\n\t]);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--2!./node_modules/@dojo/webpack-contrib/css-module-dts-loader?type=ts&instanceName=0_dojo!./src/utils.ts","import { WidgetBase } from '@dojo/framework/widget-core/WidgetBase';\nimport { v } from '@dojo/framework/widget-core/d';\nimport { WithTarget } from '../interfaces';\nimport { createInputNode } from '../utils';\nimport { ImagePayload, UsernamePayload, BioPayload, EmailPayload, PasswordPayload } from '../processes/interfaces';\n\nexport interface SettingsProperties {\n\timageUrl: string;\n\tusername: string;\n\tbio: string;\n\temail: string;\n\tpassword: string;\n\tonImageUrlInput: (opts: ImagePayload) => void;\n\tonUsernameInput: (opts: UsernamePayload) => void;\n\tonBioInput: (opts: BioPayload) => void;\n\tonEmailInput: (opts: EmailPayload) => void;\n\tonPasswordInput: (opts: PasswordPayload) => void;\n\tonUpdateSettings: (opts: object) => void;\n\tlogout: (opts: object) => void;\n}\n\nexport class Settings extends WidgetBase<SettingsProperties> {\n\tprivate _onSubmit(event: MouseEvent) {\n\t\tevent.preventDefault();\n\t\tthis.properties.onUpdateSettings({});\n\t}\n\n\tprivate _onImageUrlInput({ target: { value: imageUrl } }: WithTarget) {\n\t\tthis.properties.onImageUrlInput({ imageUrl });\n\t}\n\n\tprivate _onUsernameInput({ target: { value: username } }: WithTarget) {\n\t\tthis.properties.onUsernameInput({ username });\n\t}\n\n\tprivate _onBioInput({ target: { value: bio } }: WithTarget) {\n\t\tthis.properties.onBioInput({ bio });\n\t}\n\n\tprivate _onEmailInput({ target: { value: email } }: WithTarget) {\n\t\tthis.properties.onEmailInput({ email });\n\t}\n\n\tprivate _onPasswordInput({ target: { value: password } }: WithTarget) {\n\t\tthis.properties.onPasswordInput({ password });\n\t}\n\n\tprivate _logout() {\n\t\tthis.properties.logout({});\n\t}\n\n\t// prettier-ignore\n\tprotected render() {\n\t\tconst { email, password, bio, imageUrl, username } = this.properties;\n\n\t\treturn v('div', { classes: 'settings-page' }, [\n\t\t\tv('div', { classes: ['container', 'page'] }, [\n\t\t\t\tv('div', { classes: 'row' }, [\n\t\t\t\t\tv('div', { classes: ['col-md-6', 'offset-md-3', 'col-xs-12'] }, [\n\t\t\t\t\t\tv('h1', { classes: 'text-xs-center' }, ['Your Settings']),\n\t\t\t\t\t\tv('form', [\n\t\t\t\t\t\t\tv('fieldset', [\n\t\t\t\t\t\t\t\tcreateInputNode(imageUrl, 'URL of profile picture', this._onImageUrlInput),\n\t\t\t\t\t\t\t\tcreateInputNode(username, 'Your Name', this._onUsernameInput),\n\t\t\t\t\t\t\t\tv('fieldset', { classes: 'form-group' }, [\n\t\t\t\t\t\t\t\t\tv('textarea', {\n\t\t\t\t\t\t\t\t\t\tvalue: bio,\n\t\t\t\t\t\t\t\t\t\tclasses: ['form-control', 'form-control-lg'],\n\t\t\t\t\t\t\t\t\t\trows: 8,\n\t\t\t\t\t\t\t\t\t\tplaceholder: 'Short bio about you',\n\t\t\t\t\t\t\t\t\t\toninput: this._onBioInput\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tcreateInputNode(email, 'Email', this._onEmailInput),\n\t\t\t\t\t\t\t\tcreateInputNode(password, 'Password', this._onPasswordInput),\n\t\t\t\t\t\t\t\tv('button', {\n\t\t\t\t\t\t\t\t\tonclick: this._onSubmit,\n\t\t\t\t\t\t\t\t\ttype: 'submit',\n\t\t\t\t\t\t\t\t\tclasses: ['btn', 'btn-lg', 'btn-primary', 'pull-xs-right']\n\t\t\t\t\t\t\t\t}, ['Update Settings'])\n\t\t\t\t\t\t\t])\n\t\t\t\t\t\t]),\n\t\t\t\t\t\tv('hr'),\n\t\t\t\t\t\tv('button', { onclick: this._logout, classes: ['btn', 'btn-outline-danger'] }, [\n\t\t\t\t\t\t\t'Or click here to logout'\n\t\t\t\t\t\t])\n\t\t\t\t\t])\n\t\t\t\t])\n\t\t\t])\n\t\t]);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--2!./node_modules/@dojo/webpack-contrib/css-module-dts-loader?type=ts&instanceName=0_dojo!./src/widgets/Settings.ts"],"sourceRoot":""}