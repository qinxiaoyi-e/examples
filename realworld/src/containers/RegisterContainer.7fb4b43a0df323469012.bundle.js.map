{"version":3,"sources":["webpack:///./src/containers/RegisterContainer.ts","webpack:///./src/utils.ts","webpack:///./src/widgets/ErrorList.ts","webpack:///./src/widgets/Register.ts"],"names":["Object","defineProperty","__webpack_exports__","value","__WEBPACK_IMPORTED_MODULE_0__widgets_Register__","__webpack_require__","__WEBPACK_IMPORTED_MODULE_1__processes_loginProcesses__","__WEBPACK_IMPORTED_MODULE_2__dojo_framework_stores_StoreInjector__","paths","getProperties","store","get","path","email","password","username","errors","inProgress","onEmailInput","onPasswordInput","onUsernameInput","onRegister","placeholder","oninput","__WEBPACK_IMPORTED_MODULE_0__dojo_framework_widget_core_d__","classes","type","__WEBPACK_IMPORTED_MODULE_0__dojo_framework_widget_core_WidgetBase__","__WEBPACK_IMPORTED_MODULE_1__dojo_framework_widget_core_d__","[object Object]","this","properties","errorCategories","keys","errorList","i","length","map","error","__WEBPACK_IMPORTED_MODULE_2__dojo_framework_routing_Link__","__WEBPACK_IMPORTED_MODULE_3__ErrorList__","__WEBPACK_IMPORTED_MODULE_4__utils__","target","event","preventDefault","to","onsubmit","_onRegister","_onUsernameInput","_onEmailInput","_onPasswordInput","disabled"],"mappings":"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","file":"src/containers/RegisterContainer.7fb4b43a0df323469012.bundle.js","sourcesContent":["import { Store } from '@dojo/framework/stores/Store';\nimport { Register, RegisterProperties } from './../widgets/Register';\nimport {\n\tregisterProcess,\n\tregisterEmailInputProcess,\n\tregisterPasswordInputProcess,\n\tregisterUsernameInputProcess\n} from './../processes/loginProcesses';\nimport { State } from '../interfaces';\nimport { StoreContainer } from '@dojo/framework/stores/StoreInjector';\n\nfunction getProperties(store: Store<State>): RegisterProperties {\n\tconst { get, path } = store;\n\n\treturn {\n\t\temail: get(path('register', 'email')),\n\t\tpassword: get(path('register', 'password')),\n\t\tusername: get(path('register', 'username')),\n\t\terrors: get(path('errors')),\n\t\tinProgress: get(path('register', 'loading')),\n\t\tonEmailInput: registerEmailInputProcess(store),\n\t\tonPasswordInput: registerPasswordInputProcess(store),\n\t\tonUsernameInput: registerUsernameInputProcess(store),\n\t\tonRegister: registerProcess(store)\n\t};\n}\n\nexport default StoreContainer(Register, 'state', { paths: [['register'], ['errors']], getProperties });\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--2!./node_modules/@dojo/webpack-contrib/css-module-dts-loader?type=ts&instanceName=0_dojo!./src/containers/RegisterContainer.ts","import { v } from '@dojo/framework/widget-core/d';\nimport { WithTarget } from './interfaces';\n\nexport function createInputNode(value: string, placeholder: string, oninput: (event: WithTarget) => void) {\n\treturn v('fieldset', { classes: 'form-group' }, [\n\t\tv('input', {\n\t\t\tvalue,\n\t\t\tclasses: ['form-control', 'form-control-lg'],\n\t\t\ttype: 'text',\n\t\t\tplaceholder,\n\t\t\toninput\n\t\t})\n\t]);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--2!./node_modules/@dojo/webpack-contrib/css-module-dts-loader?type=ts&instanceName=0_dojo!./src/utils.ts","import { WidgetBase } from '@dojo/framework/widget-core/WidgetBase';\nimport { v } from '@dojo/framework/widget-core/d';\nimport { Errors } from '../interfaces';\n\ninterface ErrorListProperties {\n\terrors: Errors;\n}\n\nexport class ErrorList extends WidgetBase<ErrorListProperties> {\n\tprotected render() {\n\t\tconst { errors } = this.properties;\n\t\tconst errorCategories = Object.keys(errors);\n\t\tlet errorList: string[] = [];\n\t\tfor (let i = 0; i < errorCategories.length; i++) {\n\t\t\terrorList = [\n\t\t\t\t...errorList,\n\t\t\t\t...errors[errorCategories[i]].map((error: string) => `${errorCategories[i]} ${error}`)\n\t\t\t];\n\t\t}\n\t\terrorList;\n\n\t\treturn v('ul', { classes: 'error-messages' }, errorList.map((error: string) => v('li', [error])));\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--2!./node_modules/@dojo/webpack-contrib/css-module-dts-loader?type=ts&instanceName=0_dojo!./src/widgets/ErrorList.ts","import { WidgetBase } from '@dojo/framework/widget-core/WidgetBase';\nimport { v, w } from '@dojo/framework/widget-core/d';\nimport { Link } from '@dojo/framework/routing/Link';\nimport { Errors, WithTarget } from '../interfaces';\nimport { ErrorList } from './ErrorList';\nimport { createInputNode } from '../utils';\nimport { PasswordPayload, EmailPayload, UsernamePayload } from '../processes/interfaces';\n\nexport interface RegisterProperties {\n\temail: string;\n\tpassword: string;\n\tusername: string;\n\tinProgress?: boolean;\n\terrors: Errors;\n\tonPasswordInput: (opts: PasswordPayload) => void;\n\tonEmailInput: (opts: EmailPayload) => void;\n\tonUsernameInput: (opts: UsernamePayload) => void;\n\tonRegister: (opts: object) => void;\n}\n\nexport class Register extends WidgetBase<RegisterProperties> {\n\tprivate _onEmailInput({ target: { value: email } }: WithTarget) {\n\t\tthis.properties.onEmailInput({ email });\n\t}\n\n\tprivate _onPasswordInput({ target: { value: password } }: WithTarget) {\n\t\tthis.properties.onPasswordInput({ password });\n\t}\n\n\tprivate _onUsernameInput({ target: { value: username } }: WithTarget) {\n\t\tthis.properties.onUsernameInput({ username });\n\t}\n\n\tprivate _onRegister(event: Event) {\n\t\tevent.preventDefault();\n\t\tthis.properties.onRegister({});\n\t}\n\n\t// prettier-ignore\n\tprotected render() {\n\t\tconst { errors, email, password, username, inProgress = false } = this.properties;\n\n\t\treturn v('div', { classes: 'auth-page' }, [\n\t\t\tv('div', { classes: ['container', 'page'] }, [\n\t\t\t\tv('div', { classes: 'row' }, [\n\t\t\t\t\tv('div', { classes: ['col-md-6', 'offset-md-3', 'col-xs-12'] }, [\n\t\t\t\t\t\tv('h1', { classes: 'text-xs-center' }, ['Sign Up']),\n\t\t\t\t\t\tv('p', { classes: 'text-xs-center' }, [w(Link, { to: 'login' }, ['Have an account?'])]),\n\t\t\t\t\t\terrors ? w(ErrorList, { errors }) : null,\n\t\t\t\t\t\tv('form', { onsubmit: this._onRegister }, [\n\t\t\t\t\t\t\tv('fieldset', [\n\t\t\t\t\t\t\t\tv('fieldset', { classes: 'form-group' }, [\n\t\t\t\t\t\t\t\t\tcreateInputNode(username, 'Username', this._onUsernameInput)\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tv('fieldset', { classes: 'form-group' }, [\n\t\t\t\t\t\t\t\t\tcreateInputNode(email, 'Email', this._onEmailInput)\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tv('fieldset', { classes: 'form-group' }, [\n\t\t\t\t\t\t\t\t\tcreateInputNode(password, 'Password', this._onPasswordInput)\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tv('button', {\n\t\t\t\t\t\t\t\t\tclasses: ['btn btn-lg', 'btn-primary', 'pull-xs-right'],\n\t\t\t\t\t\t\t\t\tdisabled: inProgress,\n\t\t\t\t\t\t\t\t\ttype: 'submit'\n\t\t\t\t\t\t\t\t}, ['Sign Up'])\n\t\t\t\t\t\t\t])\n\t\t\t\t\t\t])\n\t\t\t\t\t])\n\t\t\t\t])\n\t\t\t])\n\t\t]);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--2!./node_modules/@dojo/webpack-contrib/css-module-dts-loader?type=ts&instanceName=0_dojo!./src/widgets/Register.ts"],"sourceRoot":""}